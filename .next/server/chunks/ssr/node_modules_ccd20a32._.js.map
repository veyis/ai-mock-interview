{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/ai-sdk-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/api-call-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/empty-response-body-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/get-error-message.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/invalid-argument-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/invalid-prompt-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/invalid-response-data-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/json-parse-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/load-api-key-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/load-setting-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/no-content-generated-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/no-such-model-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/too-many-embedding-values-for-call-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/type-validation-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/errors/unsupported-functionality-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider/src/json-value/is-json.ts"],"sourcesContent":["/**\n * Symbol used for identifying AI SDK Error instances.\n * Enables checking if an error is an instance of AISDKError across package versions.\n */\nconst marker = 'vercel.ai.error';\nconst symbol = Symbol.for(marker);\n\n/**\n * Custom error class for AI SDK related errors.\n * @extends Error\n */\nexport class AISDKError extends Error {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\n   * The underlying cause of the error, if any.\n   */\n  readonly cause?: unknown;\n\n  /**\n   * Creates an AI SDK Error.\n   *\n   * @param {Object} params - The parameters for creating the error.\n   * @param {string} params.name - The name of the error.\n   * @param {string} params.message - The error message.\n   * @param {unknown} [params.cause] - The underlying cause of the error.\n   */\n  constructor({\n    name,\n    message,\n    cause,\n  }: {\n    name: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super(message);\n\n    this.name = name;\n    this.cause = cause;\n  }\n\n  /**\n   * Checks if the given error is an AI SDK Error.\n   * @param {unknown} error - The error to check.\n   * @returns {boolean} True if the error is an AI SDK Error, false otherwise.\n   */\n  static isInstance(error: unknown): error is AISDKError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  protected static hasMarker(error: unknown, marker: string): boolean {\n    const markerSymbol = Symbol.for(marker);\n    return (\n      error != null &&\n      typeof error === 'object' &&\n      markerSymbol in error &&\n      typeof error[markerSymbol] === 'boolean' &&\n      error[markerSymbol] === true\n    );\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_APICallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class APICallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly url: string;\n  readonly requestBodyValues: unknown;\n  readonly statusCode?: number;\n\n  readonly responseHeaders?: Record<string, string>;\n  readonly responseBody?: string;\n\n  readonly isRetryable: boolean;\n  readonly data?: unknown;\n\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null &&\n      (statusCode === 408 || // request timeout\n        statusCode === 409 || // conflict\n        statusCode === 429 || // too many requests\n        statusCode >= 500), // server error\n    data,\n  }: {\n    message: string;\n    url: string;\n    requestBodyValues: unknown;\n    statusCode?: number;\n    responseHeaders?: Record<string, string>;\n    responseBody?: string;\n    cause?: unknown;\n    isRetryable?: boolean;\n    data?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is APICallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_EmptyResponseBodyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class EmptyResponseBodyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message = 'Empty response body' }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is EmptyResponseBodyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidArgumentError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * A function argument is invalid.\n */\nexport class InvalidArgumentError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly argument: string;\n\n  constructor({\n    message,\n    cause,\n    argument,\n  }: {\n    argument: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.argument = argument;\n  }\n\n  static isInstance(error: unknown): error is InvalidArgumentError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidPromptError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * A prompt is invalid. This error should be thrown by providers when they cannot\n * process a prompt.\n */\nexport class InvalidPromptError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly prompt: unknown;\n\n  constructor({\n    prompt,\n    message,\n    cause,\n  }: {\n    prompt: unknown;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message: `Invalid prompt: ${message}`, cause });\n\n    this.prompt = prompt;\n  }\n\n  static isInstance(error: unknown): error is InvalidPromptError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidResponseDataError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Server returned a response with invalid data content.\n * This should be thrown by providers when they cannot parse the response from the API.\n */\nexport class InvalidResponseDataError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly data: unknown;\n\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`,\n  }: {\n    data: unknown;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is InvalidResponseDataError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_JSONParseError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n// TODO v5: rename to ParseError\nexport class JSONParseError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly text: string;\n\n  constructor({ text, cause }: { text: string; cause: unknown }) {\n    super({\n      name,\n      message:\n        `JSON parsing failed: ` +\n        `Text: ${text}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.text = text;\n  }\n\n  static isInstance(error: unknown): error is JSONParseError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadAPIKeyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadAPIKeyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadAPIKeyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadSettingError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadSettingError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadSettingError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoContentGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when the AI provider fails to generate any content.\n */\nexport class NoContentGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({\n    message = 'No content generated.',\n  }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is NoContentGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoSuchModelError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchModelError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly modelId: string;\n  readonly modelType: 'languageModel' | 'textEmbeddingModel' | 'imageModel';\n\n  constructor({\n    errorName = name,\n    modelId,\n    modelType,\n    message = `No such ${modelType}: ${modelId}`,\n  }: {\n    errorName?: string;\n    modelId: string;\n    modelType: 'languageModel' | 'textEmbeddingModel' | 'imageModel';\n    message?: string;\n  }) {\n    super({ name: errorName, message });\n\n    this.modelId = modelId;\n    this.modelType = modelType;\n  }\n\n  static isInstance(error: unknown): error is NoSuchModelError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_TooManyEmbeddingValuesForCallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TooManyEmbeddingValuesForCallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly provider: string;\n  readonly modelId: string;\n  readonly maxEmbeddingsPerCall: number;\n  readonly values: Array<unknown>;\n\n  constructor(options: {\n    provider: string;\n    modelId: string;\n    maxEmbeddingsPerCall: number;\n    values: Array<unknown>;\n  }) {\n    super({\n      name,\n      message:\n        `Too many values for a single embedding call. ` +\n        `The ${options.provider} model \"${options.modelId}\" can only embed up to ` +\n        `${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`,\n    });\n\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n\n  static isInstance(\n    error: unknown,\n  ): error is TooManyEmbeddingValuesForCallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_TypeValidationError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TypeValidationError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly value: unknown;\n\n  constructor({ value, cause }: { value: unknown; cause: unknown }) {\n    super({\n      name,\n      message:\n        `Type validation failed: ` +\n        `Value: ${JSON.stringify(value)}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.value = value;\n  }\n\n  static isInstance(error: unknown): error is TypeValidationError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * Wraps an error into a TypeValidationError.\n   * If the cause is already a TypeValidationError with the same value, it returns the cause.\n   * Otherwise, it creates a new TypeValidationError.\n   *\n   * @param {Object} params - The parameters for wrapping the error.\n   * @param {unknown} params.value - The value that failed validation.\n   * @param {unknown} params.cause - The original error or cause of the validation failure.\n   * @returns {TypeValidationError} A TypeValidationError instance.\n   */\n  static wrap({\n    value,\n    cause,\n  }: {\n    value: unknown;\n    cause: unknown;\n  }): TypeValidationError {\n    return TypeValidationError.isInstance(cause) && cause.value === value\n      ? cause\n      : new TypeValidationError({ value, cause });\n  }\n}\n","import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_UnsupportedFunctionalityError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class UnsupportedFunctionalityError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly functionality: string;\n\n  constructor({\n    functionality,\n    message = `'${functionality}' functionality not supported.`,\n  }: {\n    functionality: string;\n    message?: string;\n  }) {\n    super({ name, message });\n    this.functionality = functionality;\n  }\n\n  static isInstance(error: unknown): error is UnsupportedFunctionalityError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { JSONArray, JSONObject, JSONValue } from './json-value';\n\nexport function isJSONValue(value: unknown): value is JSONValue {\n  if (\n    value === null ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  ) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(isJSONValue);\n  }\n\n  if (typeof value === 'object') {\n    return Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    );\n  }\n\n  return false;\n}\n\nexport function isJSONArray(value: unknown): value is JSONArray {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\n\nexport function isJSONObject(value: unknown): value is JSONObject {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    )\n  );\n}\n"],"names":["name","marker","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a","name","marker","symbol","_a"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/nanoid/non-secure/index.js"],"sourcesContent":["// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// References to the same file (works both for gzip and brotli):\n// `'use`, `andom`, and `rict'`\n// References to the brotli default dictionary:\n// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size | 0\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size | 0\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,+EAA+E;AAC/E,gEAAgE;AAChE,+BAA+B;AAC/B,+CAA+C;AAC/C,6EAA6E;;;;;AAC7E,IAAI,cACF;AAEF,IAAI,iBAAiB,CAAC,UAAU,cAAc,EAAE;IAC9C,OAAO,CAAC,OAAO,WAAW;QACxB,IAAI,KAAK;QACT,8DAA8D;QAC9D,IAAI,IAAI,OAAO;QACf,MAAO,IAAK;YACV,wDAAwD;YACxD,MAAM,QAAQ,CAAC,AAAC,KAAK,MAAM,KAAK,SAAS,MAAM,GAAI,EAAE;QACvD;QACA,OAAO;IACT;AACF;AAEA,IAAI,SAAS,CAAC,OAAO,EAAE;IACrB,IAAI,KAAK;IACT,8DAA8D;IAC9D,IAAI,IAAI,OAAO;IACf,MAAO,IAAK;QACV,wDAAwD;QACxD,MAAM,WAAW,CAAC,AAAC,KAAK,MAAM,KAAK,KAAM,EAAE;IAC7C;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/secure-json-parse/index.js"],"sourcesContent":["'use strict'\n\nconst hasBuffer = typeof Buffer !== 'undefined'\nconst suspectProtoRx = /\"(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])\"\\s*:/\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/\n\nfunction _parse (text, reviver, options) {\n  // Normalize arguments\n  if (options == null) {\n    if (reviver !== null && typeof reviver === 'object') {\n      options = reviver\n      reviver = undefined\n    }\n  }\n\n  if (hasBuffer && Buffer.isBuffer(text)) {\n    text = text.toString()\n  }\n\n  // BOM checker\n  if (text && text.charCodeAt(0) === 0xFEFF) {\n    text = text.slice(1)\n  }\n\n  // Parse normally, allowing exceptions\n  const obj = JSON.parse(text, reviver)\n\n  // Ignore null and non-objects\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  const protoAction = (options && options.protoAction) || 'error'\n  const constructorAction = (options && options.constructorAction) || 'error'\n\n  // options: 'error' (default) / 'remove' / 'ignore'\n  if (protoAction === 'ignore' && constructorAction === 'ignore') {\n    return obj\n  }\n\n  if (protoAction !== 'ignore' && constructorAction !== 'ignore') {\n    if (suspectProtoRx.test(text) === false && suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  } else if (protoAction !== 'ignore' && constructorAction === 'ignore') {\n    if (suspectProtoRx.test(text) === false) {\n      return obj\n    }\n  } else {\n    if (suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  }\n\n  // Scan result for proto keys\n  return filter(obj, { protoAction, constructorAction, safe: options && options.safe })\n}\n\nfunction filter (obj, { protoAction = 'error', constructorAction = 'error', safe } = {}) {\n  let next = [obj]\n\n  while (next.length) {\n    const nodes = next\n    next = []\n\n    for (const node of nodes) {\n      if (protoAction !== 'ignore' && Object.prototype.hasOwnProperty.call(node, '__proto__')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (protoAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.__proto__ // eslint-disable-line no-proto\n      }\n\n      if (constructorAction !== 'ignore' &&\n          Object.prototype.hasOwnProperty.call(node, 'constructor') &&\n          Object.prototype.hasOwnProperty.call(node.constructor, 'prototype')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (constructorAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.constructor\n      }\n\n      for (const key in node) {\n        const value = node[key]\n        if (value && typeof value === 'object') {\n          next.push(value)\n        }\n      }\n    }\n  }\n  return obj\n}\n\nfunction parse (text, reviver, options) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, options)\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nfunction safeParse (text, reviver) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, { safe: true })\n  } catch (_e) {\n    return null\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nmodule.exports = parse\nmodule.exports.default = parse\nmodule.exports.parse = parse\nmodule.exports.safeParse = safeParse\nmodule.exports.scan = filter\n"],"names":[],"mappings":"AAAA;AAEA,MAAM,YAAY,OAAO,WAAW;AACpC,MAAM,iBAAiB;AACvB,MAAM,uBAAuB;AAE7B,SAAS,OAAQ,IAAI,EAAE,OAAO,EAAE,OAAO;IACrC,sBAAsB;IACtB,IAAI,WAAW,MAAM;QACnB,IAAI,YAAY,QAAQ,OAAO,YAAY,UAAU;YACnD,UAAU;YACV,UAAU;QACZ;IACF;IAEA,IAAI,aAAa,OAAO,QAAQ,CAAC,OAAO;QACtC,OAAO,KAAK,QAAQ;IACtB;IAEA,cAAc;IACd,IAAI,QAAQ,KAAK,UAAU,CAAC,OAAO,QAAQ;QACzC,OAAO,KAAK,KAAK,CAAC;IACpB;IAEA,sCAAsC;IACtC,MAAM,MAAM,KAAK,KAAK,CAAC,MAAM;IAE7B,8BAA8B;IAC9B,IAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU;QAC3C,OAAO;IACT;IAEA,MAAM,cAAc,AAAC,WAAW,QAAQ,WAAW,IAAK;IACxD,MAAM,oBAAoB,AAAC,WAAW,QAAQ,iBAAiB,IAAK;IAEpE,mDAAmD;IACnD,IAAI,gBAAgB,YAAY,sBAAsB,UAAU;QAC9D,OAAO;IACT;IAEA,IAAI,gBAAgB,YAAY,sBAAsB,UAAU;QAC9D,IAAI,eAAe,IAAI,CAAC,UAAU,SAAS,qBAAqB,IAAI,CAAC,UAAU,OAAO;YACpF,OAAO;QACT;IACF,OAAO,IAAI,gBAAgB,YAAY,sBAAsB,UAAU;QACrE,IAAI,eAAe,IAAI,CAAC,UAAU,OAAO;YACvC,OAAO;QACT;IACF,OAAO;QACL,IAAI,qBAAqB,IAAI,CAAC,UAAU,OAAO;YAC7C,OAAO;QACT;IACF;IAEA,6BAA6B;IAC7B,OAAO,OAAO,KAAK;QAAE;QAAa;QAAmB,MAAM,WAAW,QAAQ,IAAI;IAAC;AACrF;AAEA,SAAS,OAAQ,GAAG,EAAE,EAAE,cAAc,OAAO,EAAE,oBAAoB,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACrF,IAAI,OAAO;QAAC;KAAI;IAEhB,MAAO,KAAK,MAAM,CAAE;QAClB,MAAM,QAAQ;QACd,OAAO,EAAE;QAET,KAAK,MAAM,QAAQ,MAAO;YACxB,IAAI,gBAAgB,YAAY,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,cAAc;gBACvF,IAAI,SAAS,MAAM;oBACjB,OAAO;gBACT,OAAO,IAAI,gBAAgB,SAAS;oBAClC,MAAM,IAAI,YAAY;gBACxB;gBAEA,OAAO,KAAK,SAAS,CAAC,+BAA+B;;YACvD;YAEA,IAAI,sBAAsB,YACtB,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,kBAC3C,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE,cAAc;gBACvE,IAAI,SAAS,MAAM;oBACjB,OAAO;gBACT,OAAO,IAAI,sBAAsB,SAAS;oBACxC,MAAM,IAAI,YAAY;gBACxB;gBAEA,OAAO,KAAK,WAAW;YACzB;YAEA,IAAK,MAAM,OAAO,KAAM;gBACtB,MAAM,QAAQ,IAAI,CAAC,IAAI;gBACvB,IAAI,SAAS,OAAO,UAAU,UAAU;oBACtC,KAAK,IAAI,CAAC;gBACZ;YACF;QACF;IACF;IACA,OAAO;AACT;AAEA,SAAS,MAAO,IAAI,EAAE,OAAO,EAAE,OAAO;IACpC,MAAM,kBAAkB,MAAM,eAAe;IAC7C,MAAM,eAAe,GAAG;IACxB,IAAI;QACF,OAAO,OAAO,MAAM,SAAS;IAC/B,SAAU;QACR,MAAM,eAAe,GAAG;IAC1B;AACF;AAEA,SAAS,UAAW,IAAI,EAAE,OAAO;IAC/B,MAAM,kBAAkB,MAAM,eAAe;IAC7C,MAAM,eAAe,GAAG;IACxB,IAAI;QACF,OAAO,OAAO,MAAM,SAAS;YAAE,MAAM;QAAK;IAC5C,EAAE,OAAO,IAAI;QACX,OAAO;IACT,SAAU;QACR,MAAM,eAAe,GAAG;IAC1B;AACF;AAEA,OAAO,OAAO,GAAG;AACjB,OAAO,OAAO,CAAC,OAAO,GAAG;AACzB,OAAO,OAAO,CAAC,KAAK,GAAG;AACvB,OAAO,OAAO,CAAC,SAAS,GAAG;AAC3B,OAAO,OAAO,CAAC,IAAI,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/eventsource-parser/src/errors.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/eventsource-parser/src/parse.ts"],"sourcesContent":["/**\n * The type of error that occurred.\n * @public\n */\nexport type ErrorType = 'invalid-retry' | 'unknown-field'\n\n/**\n * Error thrown when encountering an issue during parsing.\n *\n * @public\n */\nexport class ParseError extends Error {\n  /**\n   * The type of error that occurred.\n   */\n  type: ErrorType\n\n  /**\n   * In the case of an unknown field encountered in the stream, this will be the field name.\n   */\n  field?: string\n\n  /**\n   * In the case of an unknown field encountered in the stream, this will be the value of the field.\n   */\n  value?: string\n\n  /**\n   * The line that caused the error, if available.\n   */\n  line?: string\n\n  constructor(\n    message: string,\n    options: {type: ErrorType; field?: string; value?: string; line?: string},\n  ) {\n    super(message)\n    this.name = 'ParseError'\n    this.type = options.type\n    this.field = options.field\n    this.value = options.value\n    this.line = options.line\n  }\n}\n","/**\n * EventSource/Server-Sent Events parser\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n */\nimport {ParseError} from './errors.ts'\nimport type {EventSourceParser, ParserCallbacks} from './types.ts'\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction noop(_arg: unknown) {\n  // intentional noop\n}\n\n/**\n * Creates a new EventSource parser.\n *\n * @param callbacks - Callbacks to invoke on different parsing events:\n *   - `onEvent` when a new event is parsed\n *   - `onError` when an error occurs\n *   - `onRetry` when a new reconnection interval has been sent from the server\n *   - `onComment` when a comment is encountered in the stream\n *\n * @returns A new EventSource parser, with `parse` and `reset` methods.\n * @public\n */\nexport function createParser(callbacks: ParserCallbacks): EventSourceParser {\n  const {onEvent = noop, onError = noop, onRetry = noop, onComment} = callbacks\n\n  let incompleteLine = ''\n\n  let isFirstChunk = true\n  let id: string | undefined\n  let data = ''\n  let eventType = ''\n\n  function feed(newChunk: string) {\n    // Strip any UTF8 byte order mark (BOM) at the start of the stream\n    const chunk = isFirstChunk ? newChunk.replace(/^\\xEF\\xBB\\xBF/, '') : newChunk\n\n    // If there was a previous incomplete line, append it to the new chunk,\n    // so we may process it together as a new (hopefully complete) chunk.\n    const [complete, incomplete] = splitLines(`${incompleteLine}${chunk}`)\n\n    for (const line of complete) {\n      parseLine(line)\n    }\n\n    incompleteLine = incomplete\n    isFirstChunk = false\n  }\n\n  function parseLine(line: string) {\n    // If the line is empty (a blank line), dispatch the event\n    if (line === '') {\n      dispatchEvent()\n      return\n    }\n\n    // If the line starts with a U+003A COLON character (:), ignore the line.\n    if (line.startsWith(':')) {\n      if (onComment) {\n        onComment(line.slice(line.startsWith(': ') ? 2 : 1))\n      }\n      return\n    }\n\n    // If the line contains a U+003A COLON character (:)\n    const fieldSeparatorIndex = line.indexOf(':')\n    if (fieldSeparatorIndex !== -1) {\n      // Collect the characters on the line before the first U+003A COLON character (:),\n      // and let `field` be that string.\n      const field = line.slice(0, fieldSeparatorIndex)\n\n      // Collect the characters on the line after the first U+003A COLON character (:),\n      // and let `value` be that string. If value starts with a U+0020 SPACE character,\n      // remove it from value.\n      const offset = line[fieldSeparatorIndex + 1] === ' ' ? 2 : 1\n      const value = line.slice(fieldSeparatorIndex + offset)\n\n      processField(field, value, line)\n      return\n    }\n\n    // Otherwise, the string is not empty but does not contain a U+003A COLON character (:)\n    // Process the field using the whole line as the field name, and an empty string as the field value.\n    // 👆 This is according to spec. That means that a line that has the value `data` will result in\n    // a newline being added to the current `data` buffer, for instance.\n    processField(line, '', line)\n  }\n\n  function processField(field: string, value: string, line: string) {\n    // Field names must be compared literally, with no case folding performed.\n    switch (field) {\n      case 'event':\n        // Set the `event type` buffer to field value\n        eventType = value\n        break\n      case 'data':\n        // Append the field value to the `data` buffer, then append a single U+000A LINE FEED(LF)\n        // character to the `data` buffer.\n        data = `${data}${value}\\n`\n        break\n      case 'id':\n        // If the field value does not contain U+0000 NULL, then set the `ID` buffer to\n        // the field value. Otherwise, ignore the field.\n        id = value.includes('\\0') ? undefined : value\n        break\n      case 'retry':\n        // If the field value consists of only ASCII digits, then interpret the field value as an\n        // integer in base ten, and set the event stream's reconnection time to that integer.\n        // Otherwise, ignore the field.\n        if (/^\\d+$/.test(value)) {\n          onRetry(parseInt(value, 10))\n        } else {\n          onError(\n            new ParseError(`Invalid \\`retry\\` value: \"${value}\"`, {\n              type: 'invalid-retry',\n              value,\n              line,\n            }),\n          )\n        }\n        break\n      default:\n        // Otherwise, the field is ignored.\n        onError(\n          new ParseError(\n            `Unknown field \"${field.length > 20 ? `${field.slice(0, 20)}…` : field}\"`,\n            {type: 'unknown-field', field, value, line},\n          ),\n        )\n        break\n    }\n  }\n\n  function dispatchEvent() {\n    const shouldDispatch = data.length > 0\n    if (shouldDispatch) {\n      onEvent({\n        id,\n        event: eventType || undefined,\n        // If the data buffer's last character is a U+000A LINE FEED (LF) character,\n        // then remove the last character from the data buffer.\n        data: data.endsWith('\\n') ? data.slice(0, -1) : data,\n      })\n    }\n\n    // Reset for the next event\n    id = undefined\n    data = ''\n    eventType = ''\n  }\n\n  function reset(options: {consume?: boolean} = {}) {\n    if (incompleteLine && options.consume) {\n      parseLine(incompleteLine)\n    }\n\n    id = undefined\n    data = ''\n    eventType = ''\n    incompleteLine = ''\n  }\n\n  return {feed, reset}\n}\n\n/**\n * For the given `chunk`, split it into lines according to spec, and return any remaining incomplete line.\n *\n * @param chunk - The chunk to split into lines\n * @returns A tuple containing an array of complete lines, and any remaining incomplete line\n * @internal\n */\nfunction splitLines(chunk: string): [Array<string>, string] {\n  /**\n   * According to the spec, a line is terminated by either:\n   * - U+000D CARRIAGE RETURN U+000A LINE FEED (CRLF) character pair\n   * - a single U+000A LINE FEED(LF) character not preceded by a U+000D CARRIAGE RETURN(CR) character\n   * - a single U+000D CARRIAGE RETURN(CR) character not followed by a U+000A LINE FEED(LF) character\n   */\n\n  const lines: Array<string> = []\n  let incompleteLine = ''\n\n  const totalLength = chunk.length\n  for (let i = 0; i < totalLength; i++) {\n    const char = chunk[i]\n\n    if (char === '\\r' && chunk[i + 1] === '\\n') {\n      // CRLF\n      lines.push(incompleteLine)\n      incompleteLine = ''\n      i++ // Skip the LF character\n    } else if (char === '\\r') {\n      // Standalone CR\n      lines.push(incompleteLine)\n      incompleteLine = ''\n    } else if (char === '\\n') {\n      // Standalone LF\n      lines.push(incompleteLine)\n      incompleteLine = ''\n    } else {\n      incompleteLine += char\n    }\n  }\n\n  return [lines, incompleteLine]\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 652, "column": 0}, "map": {"version":3,"file":"stream.js","sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/eventsource-parser/src/stream.ts"],"sourcesContent":["import {createParser} from './parse.ts'\nimport type {EventSourceMessage, EventSourceParser} from './types.ts'\n\n/**\n * Options for the EventSourceParserStream.\n *\n * @public\n */\nexport interface StreamOptions {\n  /**\n   * Behavior when a parsing error occurs.\n   *\n   * - A custom function can be provided to handle the error.\n   * - `'terminate'` will error the stream and stop parsing.\n   * - Any other value will ignore the error and continue parsing.\n   *\n   * @defaultValue `undefined`\n   */\n  onError?: 'terminate' | ((error: Error) => void)\n\n  /**\n   * Callback for when a reconnection interval is sent from the server.\n   *\n   * @param retry - The number of milliseconds to wait before reconnecting.\n   */\n  onRetry?: (retry: number) => void\n\n  /**\n   * Callback for when a comment is encountered in the stream.\n   *\n   * @param comment - The comment encountered in the stream.\n   */\n  onComment?: (comment: string) => void\n}\n\n/**\n * A TransformStream that ingests a stream of strings and produces a stream of `EventSourceMessage`.\n *\n * @example Basic usage\n * ```\n * const eventStream =\n *   response.body\n *     .pipeThrough(new TextDecoderStream())\n *     .pipeThrough(new EventSourceParserStream())\n * ```\n *\n * @example Terminate stream on parsing errors\n * ```\n * const eventStream =\n *  response.body\n *   .pipeThrough(new TextDecoderStream())\n *   .pipeThrough(new EventSourceParserStream({terminateOnError: true}))\n * ```\n *\n * @public\n */\nexport class EventSourceParserStream extends TransformStream<string, EventSourceMessage> {\n  constructor({onError, onRetry, onComment}: StreamOptions = {}) {\n    let parser!: EventSourceParser\n\n    super({\n      start(controller) {\n        parser = createParser({\n          onEvent: (event) => {\n            controller.enqueue(event)\n          },\n          onError(error) {\n            if (onError === 'terminate') {\n              controller.error(error)\n            } else if (typeof onError === 'function') {\n              onError(error)\n            }\n\n            // Ignore by default\n          },\n          onRetry,\n          onComment,\n        })\n      },\n      transform(chunk) {\n        parser.feed(chunk)\n      },\n    })\n  }\n}\n\nexport {type ErrorType, ParseError} from './errors.ts'\nexport type {EventSourceMessage} from './types.ts'\n"],"names":[],"mappings":";;;;;;AAwDO,MAAM,gCAAgC,gBAA4C;IACvF,YAAY,EAAC,OAAA,EAAS,OAAA,EAAS,SAAA,CAAS,CAAA,GAAmB,CAAA,CAAA,CAAI;QACzD,IAAA;QAEE,KAAA,CAAA;YACJ,OAAM,UAAA,EAAY;gBAChB,oKAAS,eAAA,EAAa;oBACpB,SAAS,CAAC,UAAU;wBAClB,WAAW,OAAA,CAAQ,KAAK;oBAC1B;oBACA,SAAQ,KAAA,EAAO;wBACT,YAAY,cACd,WAAW,KAAA,CAAM,KAAK,IACb,OAAO,WAAY,cAC5B,QAAQ,KAAK;oBAIjB;oBACA;oBACA;gBAAA,CACD;YACH;YACA,WAAU,KAAA,EAAO;gBACf,OAAO,IAAA,CAAK,KAAK;YACnB;QAAA,CACD;IACH;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/combine-headers.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/convert-async-iterator-to-readable-stream.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/delay.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/extract-response-headers.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/generate-id.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/get-error-message.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/get-from-api.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/remove-undefined-entries.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/is-abort-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/load-api-key.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/load-optional-setting.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/load-setting.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/parse-json.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/validate-types.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/validator.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/post-to-api.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/resolve.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/response-handler.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/uint8-utils.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/provider-utils/src/without-trailing-slash.ts"],"sourcesContent":["export function combineHeaders(\n  ...headers: Array<Record<string, string | undefined> | undefined>\n): Record<string, string | undefined> {\n  return headers.reduce(\n    (combinedHeaders, currentHeaders) => ({\n      ...combinedHeaders,\n      ...(currentHeaders ?? {}),\n    }),\n    {},\n  ) as Record<string, string | undefined>;\n}\n","/**\n * Converts an AsyncIterator to a ReadableStream.\n *\n * @template T - The type of elements produced by the AsyncIterator.\n * @param { <T>} iterator - The AsyncIterator to convert.\n * @returns {ReadableStream<T>} - A ReadableStream that provides the same data as the AsyncIterator.\n */\nexport function convertAsyncIteratorToReadableStream<T>(\n  iterator: AsyncIterator<T>,\n): ReadableStream<T> {\n  return new ReadableStream<T>({\n    /**\n     * Called when the consumer wants to pull more data from the stream.\n     *\n     * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.\n     * @returns {Promise<void>}\n     */\n    async pull(controller) {\n      try {\n        const { value, done } = await iterator.next();\n        if (done) {\n          controller.close();\n        } else {\n          controller.enqueue(value);\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    /**\n     * Called when the consumer cancels the stream.\n     */\n    cancel() {},\n  });\n}\n","/**\n * Creates a Promise that resolves after a specified delay\n * @param delayInMs - The delay duration in milliseconds. If null or undefined, resolves immediately.\n * @returns A Promise that resolves after the specified delay\n */\nexport async function delay(delayInMs?: number | null): Promise<void> {\n  return delayInMs == null\n    ? Promise.resolve()\n    : new Promise(resolve => setTimeout(resolve, delayInMs));\n}\n","/**\nExtracts the headers from a response object and returns them as a key-value object.\n\n@param response - The response object to extract headers from.\n@returns The headers as a key-value object.\n*/\nexport function extractResponseHeaders(\n  response: Response,\n): Record<string, string> {\n  const headers: Record<string, string> = {};\n  response.headers.forEach((value, key) => {\n    headers[key] = value;\n  });\n  return headers;\n}\n","import { InvalidArgumentError } from '@ai-sdk/provider';\nimport { customAlphabet } from 'nanoid/non-secure';\n\n/**\nCreates an ID generator.\nThe total length of the ID is the sum of the prefix, separator, and random part length.\nNon-secure.\n\n@param alphabet - The alphabet to use for the ID. Default: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.\n@param prefix - The prefix of the ID to generate. Default: ''.\n@param separator - The separator between the prefix and the random part of the ID. Default: '-'.\n@param size - The size of the random part of the ID to generate. Default: 16.\n */\n// TODO 5.0 breaking change: change the return type to IDGenerator\nexport const createIdGenerator = ({\n  prefix,\n  size: defaultSize = 16,\n  alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n  separator = '-',\n}: {\n  prefix?: string;\n  separator?: string;\n  size?: number;\n  alphabet?: string;\n} = {}): ((size?: number) => string) => {\n  const generator = customAlphabet(alphabet, defaultSize);\n\n  if (prefix == null) {\n    return generator;\n  }\n\n  // check that the prefix is not part of the alphabet (otherwise prefix checking can fail randomly)\n  if (alphabet.includes(separator)) {\n    throw new InvalidArgumentError({\n      argument: 'separator',\n      message: `The separator \"${separator}\" must not be part of the alphabet \"${alphabet}\".`,\n    });\n  }\n\n  return size => `${prefix}${separator}${generator(size)}`;\n};\n\n/**\nA function that generates an ID.\n */\nexport type IDGenerator = () => string;\n\n/**\nGenerates a 16-character random string to use for IDs. Not secure.\n\n@param size - The size of the ID to generate. Default: 16.\n */\nexport const generateId = createIdGenerator();\n","export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n","import { APICallError } from '@ai-sdk/provider';\nimport { FetchFunction } from './fetch-function';\nimport { removeUndefinedEntries } from './remove-undefined-entries';\nimport { ResponseHandler } from './response-handler';\nimport { isAbortError } from './is-abort-error';\nimport { extractResponseHeaders } from './extract-response-headers';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => globalThis.fetch;\n\nexport const getFromApi = async <T>({\n  url,\n  headers = {},\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch(),\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  failedResponseHandler: ResponseHandler<Error>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: removeUndefinedEntries(headers),\n      signal: abortSignal,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.ok) {\n      let errorInformation: {\n        value: Error;\n        responseHeaders?: Record<string, string> | undefined;\n      };\n\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: {},\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n\n        throw new APICallError({\n          message: 'Failed to process error response',\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: {},\n        });\n      }\n\n      throw errorInformation.value;\n    }\n\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: {},\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n      }\n\n      throw new APICallError({\n        message: 'Failed to process successful response',\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: {},\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n\n    if (error instanceof TypeError && error.message === 'fetch failed') {\n      const cause = (error as any).cause;\n      if (cause != null) {\n        throw new APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          isRetryable: true,\n          requestBodyValues: {},\n        });\n      }\n    }\n\n    throw error;\n  }\n};\n","/**\n * Removes entries from a record where the value is null or undefined.\n * @param record - The input object whose entries may be null or undefined.\n * @returns A new object containing only entries with non-null and non-undefined values.\n */\nexport function removeUndefinedEntries<T>(\n  record: Record<string, T | undefined>,\n): Record<string, T> {\n  return Object.fromEntries(\n    Object.entries(record).filter(([_key, value]) => value != null),\n  ) as Record<string, T>;\n}\n","export function isAbortError(error: unknown): error is Error {\n  return (\n    error instanceof Error &&\n    (error.name === 'AbortError' || error.name === 'TimeoutError')\n  );\n}\n","import { LoadAPIKeyError } from '@ai-sdk/provider';\n\nexport function loadApiKey({\n  apiKey,\n  environmentVariableName,\n  apiKeyParameterName = 'apiKey',\n  description,\n}: {\n  apiKey: string | undefined;\n  environmentVariableName: string;\n  apiKeyParameterName?: string;\n  description: string;\n}): string {\n  if (typeof apiKey === 'string') {\n    return apiKey;\n  }\n\n  if (apiKey != null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`,\n    });\n  }\n\n  apiKey = process.env[environmentVariableName];\n\n  if (apiKey == null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof apiKey !== 'string') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return apiKey;\n}\n","/**\n * Loads an optional `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @returns The setting value.\n */\nexport function loadOptionalSetting({\n  settingValue,\n  environmentVariableName,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n}): string | undefined {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null || typeof process === 'undefined') {\n    return undefined;\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null || typeof settingValue !== 'string') {\n    return undefined;\n  }\n\n  return settingValue;\n}\n","import { LoadSettingError } from '@ai-sdk/provider';\n\n/**\n * Loads a `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @param settingName - The setting name.\n * @param description - The description of the setting.\n * @returns The setting value.\n */\nexport function loadSetting({\n  settingValue,\n  environmentVariableName,\n  settingName,\n  description,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n  settingName: string;\n  description: string;\n}): string {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null) {\n    throw new LoadSettingError({\n      message: `${description} setting must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter. ` +\n        `Environment variables is not supported in this environment.`,\n    });\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null) {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter ` +\n        `or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof settingValue !== 'string') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting must be a string. ` +\n        `The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return settingValue;\n}\n","import {\n  JSONParseError,\n  JSONValue,\n  TypeValidationError,\n} from '@ai-sdk/provider';\nimport SecureJSON from 'secure-json-parse';\nimport { ZodSchema } from 'zod';\nimport { safeValidateTypes, validateTypes } from './validate-types';\nimport { Validator } from './validator';\n\n/**\n * Parses a JSON string into an unknown object.\n *\n * @param text - The JSON string to parse.\n * @returns {JSONValue} - The parsed JSON object.\n */\nexport function parseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): JSONValue;\n/**\n * Parses a JSON string into a strongly-typed object using the provided schema.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns {T} - The parsed object.\n */\nexport function parseJSON<T>(options: {\n  text: string;\n  schema: ZodSchema<T> | Validator<T>;\n}): T;\nexport function parseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T> | Validator<T>;\n}): T {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return value;\n    }\n\n    return validateTypes({ value, schema });\n  } catch (error) {\n    if (\n      JSONParseError.isInstance(error) ||\n      TypeValidationError.isInstance(error)\n    ) {\n      throw error;\n    }\n\n    throw new JSONParseError({ text, cause: error });\n  }\n}\n\nexport type ParseResult<T> =\n  | { success: true; value: T; rawValue: unknown }\n  | { success: false; error: JSONParseError | TypeValidationError };\n\n/**\n * Safely parses a JSON string and returns the result as an object of type `unknown`.\n *\n * @param text - The JSON string to parse.\n * @returns {object} Either an object with `success: true` and the parsed data, or an object with `success: false` and the error that occurred.\n */\nexport function safeParseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): ParseResult<JSONValue>;\n/**\n * Safely parses a JSON string into a strongly-typed object, using a provided schema to validate the object.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeParseJSON<T>(options: {\n  text: string;\n  schema: ZodSchema<T> | Validator<T>;\n}): ParseResult<T>;\nexport function safeParseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T> | Validator<T>;\n}): ParseResult<T> {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return { success: true, value: value as T, rawValue: value };\n    }\n\n    const validationResult = safeValidateTypes({ value, schema });\n\n    return validationResult.success\n      ? { ...validationResult, rawValue: value }\n      : validationResult;\n  } catch (error) {\n    return {\n      success: false,\n      error: JSONParseError.isInstance(error)\n        ? error\n        : new JSONParseError({ text, cause: error }),\n    };\n  }\n}\n\nexport function isParsableJson(input: string): boolean {\n  try {\n    SecureJSON.parse(input);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","import { TypeValidationError } from '@ai-sdk/provider';\nimport { z } from 'zod';\nimport { Validator, asValidator } from './validator';\n\n/**\n * Validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns {T} - The typed object.\n */\nexport function validateTypes<T>({\n  value,\n  schema: inputSchema,\n}: {\n  value: unknown;\n  schema: z.Schema<T, z.ZodTypeDef, any> | Validator<T>;\n}): T {\n  const result = safeValidateTypes({ value, schema: inputSchema });\n\n  if (!result.success) {\n    throw TypeValidationError.wrap({ value, cause: result.error });\n  }\n\n  return result.value;\n}\n\n/**\n * Safely validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The JSON object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeValidateTypes<T>({\n  value,\n  schema,\n}: {\n  value: unknown;\n  schema: z.Schema<T, z.ZodTypeDef, any> | Validator<T>;\n}):\n  | { success: true; value: T }\n  | { success: false; error: TypeValidationError } {\n  const validator = asValidator(schema);\n\n  try {\n    if (validator.validate == null) {\n      return { success: true, value: value as T };\n    }\n\n    const result = validator.validate(value);\n\n    if (result.success) {\n      return result;\n    }\n\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: result.error }),\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: error }),\n    };\n  }\n}\n","import { z } from 'zod';\n\n/**\n * Used to mark validator functions so we can support both Zod and custom schemas.\n */\nexport const validatorSymbol = Symbol.for('vercel.ai.validator');\n\nexport type ValidationResult<OBJECT> =\n  | { success: true; value: OBJECT }\n  | { success: false; error: Error };\n\nexport type Validator<OBJECT = unknown> = {\n  /**\n   * Used to mark validator functions so we can support both Zod and custom schemas.\n   */\n  [validatorSymbol]: true;\n\n  /**\n   * Optional. Validates that the structure of a value matches this schema,\n   * and returns a typed version of the value if it does.\n   */\n  readonly validate?: (value: unknown) => ValidationResult<OBJECT>;\n};\n\n/**\n * Create a validator.\n *\n * @param validate A validation function for the schema.\n */\nexport function validator<OBJECT>(\n  validate?: undefined | ((value: unknown) => ValidationResult<OBJECT>),\n): Validator<OBJECT> {\n  return { [validatorSymbol]: true, validate };\n}\n\nexport function isValidator(value: unknown): value is Validator {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    validatorSymbol in value &&\n    value[validatorSymbol] === true &&\n    'validate' in value\n  );\n}\n\nexport function asValidator<OBJECT>(\n  value: Validator<OBJECT> | z.Schema<OBJECT, z.ZodTypeDef, any>,\n): Validator<OBJECT> {\n  return isValidator(value) ? value : zodValidator(value);\n}\n\nexport function zodValidator<OBJECT>(\n  zodSchema: z.Schema<OBJECT, z.ZodTypeDef, any>,\n): Validator<OBJECT> {\n  return validator(value => {\n    const result = zodSchema.safeParse(value);\n    return result.success\n      ? { success: true, value: result.data }\n      : { success: false, error: result.error };\n  });\n}\n","import { APICallError } from '@ai-sdk/provider';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { FetchFunction } from './fetch-function';\nimport { isAbortError } from './is-abort-error';\nimport { removeUndefinedEntries } from './remove-undefined-entries';\nimport { ResponseHandler } from './response-handler';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => globalThis.fetch;\n\nexport const postJsonToApi = async <T>({\n  url,\n  headers,\n  body,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch,\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: unknown;\n  failedResponseHandler: ResponseHandler<APICallError>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) =>\n  postToApi({\n    url,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    body: {\n      content: JSON.stringify(body),\n      values: body,\n    },\n    failedResponseHandler,\n    successfulResponseHandler,\n    abortSignal,\n    fetch,\n  });\n\nexport const postToApi = async <T>({\n  url,\n  headers = {},\n  body,\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch(),\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: {\n    content: string | FormData | Uint8Array;\n    values: unknown;\n  };\n  failedResponseHandler: ResponseHandler<Error>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: removeUndefinedEntries(headers),\n      body: body.content,\n      signal: abortSignal,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.ok) {\n      let errorInformation: {\n        value: Error;\n        responseHeaders?: Record<string, string> | undefined;\n      };\n\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: body.values,\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n\n        throw new APICallError({\n          message: 'Failed to process error response',\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: body.values,\n        });\n      }\n\n      throw errorInformation.value;\n    }\n\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: body.values,\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n      }\n\n      throw new APICallError({\n        message: 'Failed to process successful response',\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: body.values,\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n\n    // unwrap original error when fetch failed (for easier debugging):\n    if (error instanceof TypeError && error.message === 'fetch failed') {\n      const cause = (error as any).cause;\n\n      if (cause != null) {\n        // Failed to connect to server:\n        throw new APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          requestBodyValues: body.values,\n          isRetryable: true, // retry when network error\n        });\n      }\n    }\n\n    throw error;\n  }\n};\n","export type Resolvable<T> =\n  | T // Raw value\n  | Promise<T> // Promise of value\n  | (() => T) // Function returning value\n  | (() => Promise<T>); // Function returning promise of value\n\n/**\n * Resolves a value that could be a raw value, a Promise, a function returning a value,\n * or a function returning a Promise.\n */\nexport async function resolve<T>(value: Resolvable<T>): Promise<T> {\n  // If it's a function, call it to get the value/promise\n  if (typeof value === 'function') {\n    value = (value as Function)();\n  }\n\n  // Otherwise just resolve whatever we got (value or promise)\n  return Promise.resolve(value as T);\n}\n","import { APICallError, EmptyResponseBodyError } from '@ai-sdk/provider';\nimport {\n  EventSourceParserStream,\n  EventSourceMessage,\n} from 'eventsource-parser/stream';\nimport { ZodSchema } from 'zod';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { ParseResult, parseJSON, safeParseJSON } from './parse-json';\n\nexport type ResponseHandler<RETURN_TYPE> = (options: {\n  url: string;\n  requestBodyValues: unknown;\n  response: Response;\n}) => PromiseLike<{\n  value: RETURN_TYPE;\n  rawValue?: unknown;\n  responseHeaders?: Record<string, string>;\n}>;\n\nexport const createJsonErrorResponseHandler =\n  <T>({\n    errorSchema,\n    errorToMessage,\n    isRetryable,\n  }: {\n    errorSchema: ZodSchema<T>;\n    errorToMessage: (error: T) => string;\n    isRetryable?: (response: Response, error?: T) => boolean;\n  }): ResponseHandler<APICallError> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n    const responseHeaders = extractResponseHeaders(response);\n\n    // Some providers return an empty response body for some errors:\n    if (responseBody.trim() === '') {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n\n    // resilient parsing in case the response is not JSON or does not match the schema:\n    try {\n      const parsedError = parseJSON({\n        text: responseBody,\n        schema: errorSchema,\n      });\n\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: errorToMessage(parsedError),\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          data: parsedError,\n          isRetryable: isRetryable?.(response, parsedError),\n        }),\n      };\n    } catch (parseError) {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n  };\n\nexport const createEventSourceResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    return {\n      responseHeaders,\n      value: response.body\n        .pipeThrough(new TextDecoderStream())\n        .pipeThrough(new EventSourceParserStream())\n        .pipeThrough(\n          new TransformStream<EventSourceMessage, ParseResult<T>>({\n            transform({ data }, controller) {\n              // ignore the 'DONE' event that e.g. OpenAI sends:\n              if (data === '[DONE]') {\n                return;\n              }\n\n              controller.enqueue(\n                safeParseJSON({\n                  text: data,\n                  schema: chunkSchema,\n                }),\n              );\n            },\n          }),\n        ),\n    };\n  };\n\nexport const createJsonStreamResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    let buffer = '';\n\n    return {\n      responseHeaders,\n      value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(\n        new TransformStream<string, ParseResult<T>>({\n          transform(chunkText, controller) {\n            if (chunkText.endsWith('\\n')) {\n              controller.enqueue(\n                safeParseJSON({\n                  text: buffer + chunkText,\n                  schema: chunkSchema,\n                }),\n              );\n              buffer = '';\n            } else {\n              buffer += chunkText;\n            }\n          },\n        }),\n      ),\n    };\n  };\n\nexport const createJsonResponseHandler =\n  <T>(responseSchema: ZodSchema<T>): ResponseHandler<T> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n\n    const parsedResult = safeParseJSON({\n      text: responseBody,\n      schema: responseSchema,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!parsedResult.success) {\n      throw new APICallError({\n        message: 'Invalid JSON response',\n        cause: parsedResult.error,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        url,\n        requestBodyValues,\n      });\n    }\n\n    return {\n      responseHeaders,\n      value: parsedResult.value,\n      rawValue: parsedResult.rawValue,\n    };\n  };\n\nexport const createBinaryResponseHandler =\n  (): ResponseHandler<Uint8Array> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.body) {\n      throw new APICallError({\n        message: 'Response body is empty',\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody: undefined,\n      });\n    }\n\n    try {\n      const buffer = await response.arrayBuffer();\n      return {\n        responseHeaders,\n        value: new Uint8Array(buffer),\n      };\n    } catch (error) {\n      throw new APICallError({\n        message: 'Failed to read response as array buffer',\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody: undefined,\n        cause: error,\n      });\n    }\n  };\n\nexport const createStatusCodeErrorResponseHandler =\n  (): ResponseHandler<APICallError> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseHeaders = extractResponseHeaders(response);\n    const responseBody = await response.text();\n\n    return {\n      responseHeaders,\n      value: new APICallError({\n        message: response.statusText,\n        url,\n        requestBodyValues: requestBodyValues as Record<string, unknown>,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n      }),\n    };\n  };\n","// btoa and atob need to be invoked as a function call, not as a method call.\n// Otherwise CloudFlare will throw a\n// \"TypeError: Illegal invocation: function called with incorrect this reference\"\nconst { btoa, atob } = globalThis;\n\nexport function convertBase64ToUint8Array(base64String: string) {\n  const base64Url = base64String.replace(/-/g, '+').replace(/_/g, '/');\n  const latin1string = atob(base64Url);\n  return Uint8Array.from(latin1string, byte => byte.codePointAt(0)!);\n}\n\nexport function convertUint8ArrayToBase64(array: Uint8Array): string {\n  let latin1string = '';\n\n  // Note: regular for loop to support older JavaScript versions that\n  // do not support for..of on Uint8Array\n  for (let i = 0; i < array.length; i++) {\n    latin1string += String.fromCodePoint(array[i]);\n  }\n\n  return btoa(latin1string);\n}\n","export function withoutTrailingSlash(url: string | undefined) {\n  return url?.replace(/\\/$/, '');\n}\n"],"names":["resolve","TypeValidationError","validator","TypeValidationError","APICallError","getOriginalFetch","APICallError","APICallError","APICallError"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"debugId":null}},
    {"offset": {"line": 1371, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/Options.js"],"sourcesContent":["export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const jsonDescription = (jsonSchema, def) => {\n    if (def.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(def.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    allowedAdditionalProperties: true,\n    rejectedAdditionalProperties: false,\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,iBAAiB,OAAO;AAC9B,MAAM,kBAAkB,CAAC,YAAY;IACxC,IAAI,IAAI,WAAW,EAAE;QACjB,IAAI;YACA,OAAO;gBACH,GAAG,UAAU;gBACb,GAAG,KAAK,KAAK,CAAC,IAAI,WAAW,CAAC;YAClC;QACJ,EACA,OAAM,CAAE;IACZ;IACA,OAAO;AACX;AACO,MAAM,iBAAiB;IAC1B,MAAM;IACN,cAAc;IACd,UAAU;QAAC;KAAI;IACf,gBAAgB;IAChB,cAAc;IACd,cAAc;IACd,aAAa;IACb,0BAA0B;IAC1B,6BAA6B;IAC7B,8BAA8B;IAC9B,gBAAgB;IAChB,QAAQ;IACR,cAAc;IACd,aAAa,CAAC;IACd,eAAe;IACf,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB;IACjB,eAAe;IACf,gBAAgB;IAChB,cAAc;AAClB;AACO,MAAM,oBAAoB,CAAC,UAAa,OAAO,YAAY,WAC5D;QACE,GAAG,cAAc;QACjB,MAAM;IACV,IACE;QACE,GAAG,cAAc;QACjB,GAAG,OAAO;IACd","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1427, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod/lib/index.mjs"],"sourcesContent":["var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\"\n        ? params(data)\n        : typeof params === \"string\"\n            ? { message: params }\n            : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    var _a, _b;\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5996, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/any.js"],"sourcesContent":["export function parseAnyDef() {\n    return {};\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO,CAAC;AACZ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6008, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/errorMessages.js"],"sourcesContent":["export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n"],"names":[],"mappings":";;;;AAAO,SAAS,gBAAgB,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,IAAI;IACxD,IAAI,CAAC,MAAM,eACP;IACJ,IAAI,cAAc;QACd,IAAI,YAAY,GAAG;YACf,GAAG,IAAI,YAAY;YACnB,CAAC,IAAI,EAAE;QACX;IACJ;AACJ;AACO,SAAS,0BAA0B,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI;IACzE,GAAG,CAAC,IAAI,GAAG;IACX,gBAAgB,KAAK,KAAK,cAAc;AAC5C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6031, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/array.js"],"sourcesContent":["import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACO,SAAS,cAAc,GAAG,EAAE,IAAI;IACnC,MAAM,MAAM;QACR,MAAM;IACV;IACA,IAAI,IAAI,IAAI,EAAE,QACV,IAAI,IAAI,EAAE,MAAM,aAAa,oIAAA,CAAA,wBAAqB,CAAC,MAAM,EAAE;QAC3D,IAAI,KAAK,GAAG,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;YAChC,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;aAAQ;QAC/C;IACJ;IACA,IAAI,IAAI,SAAS,EAAE;QACf,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,YAAY,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,SAAS,CAAC,OAAO,EAAE;IAC3F;IACA,IAAI,IAAI,SAAS,EAAE;QACf,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,YAAY,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,SAAS,CAAC,OAAO,EAAE;IAC3F;IACA,IAAI,IAAI,WAAW,EAAE;QACjB,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,YAAY,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,WAAW,CAAC,OAAO,EAAE;QAC3F,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,YAAY,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,WAAW,CAAC,OAAO,EAAE;IAC/F;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6071, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js"],"sourcesContent":["import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,SAAS,eAAe,GAAG,EAAE,IAAI;IACpC,MAAM,MAAM;QACR,MAAM;QACN,QAAQ;IACZ;IACA,IAAI,CAAC,IAAI,MAAM,EACX,OAAO;IACX,KAAK,MAAM,SAAS,IAAI,MAAM,CAAE;QAC5B,OAAQ,MAAM,IAAI;YACd,KAAK;gBACD,IAAI,KAAK,MAAM,KAAK,eAAe;oBAC/B,IAAI,MAAM,SAAS,EAAE;wBACjB,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBAC1E,OACK;wBACD,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,oBAAoB,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBACnF;gBACJ,OACK;oBACD,IAAI,CAAC,MAAM,SAAS,EAAE;wBAClB,IAAI,gBAAgB,GAAG;oBAC3B;oBACA,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBAC1E;gBACA;YACJ,KAAK;gBACD,IAAI,KAAK,MAAM,KAAK,eAAe;oBAC/B,IAAI,MAAM,SAAS,EAAE;wBACjB,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBAC1E,OACK;wBACD,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,oBAAoB,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBACnF;gBACJ,OACK;oBACD,IAAI,CAAC,MAAM,SAAS,EAAE;wBAClB,IAAI,gBAAgB,GAAG;oBAC3B;oBACA,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBAC1E;gBACA;YACJ,KAAK;gBACD,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,cAAc,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBACzE;QACR;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6125, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js"],"sourcesContent":["export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO;QACH,MAAM;IACV;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6139, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/branded.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,SAAS,gBAAgB,IAAI,EAAE,IAAI;IACtC,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,IAAI,CAAC,IAAI,EAAE;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6153, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/catch.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAC,KAAK;IAC/B,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;AACxC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6167, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/date.js"],"sourcesContent":["import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,SAAS,aAAa,GAAG,EAAE,IAAI,EAAE,oBAAoB;IACxD,MAAM,WAAW,wBAAwB,KAAK,YAAY;IAC1D,IAAI,MAAM,OAAO,CAAC,WAAW;QACzB,OAAO;YACH,OAAO,SAAS,GAAG,CAAC,CAAC,MAAM,IAAM,aAAa,KAAK,MAAM;QAC7D;IACJ;IACA,OAAQ;QACJ,KAAK;QACL,KAAK;YACD,OAAO;gBACH,MAAM;gBACN,QAAQ;YACZ;QACJ,KAAK;YACD,OAAO;gBACH,MAAM;gBACN,QAAQ;YACZ;QACJ,KAAK;YACD,OAAO,kBAAkB,KAAK;IACtC;AACJ;AACA,MAAM,oBAAoB,CAAC,KAAK;IAC5B,MAAM,MAAM;QACR,MAAM;QACN,QAAQ;IACZ;IACA,IAAI,KAAK,MAAM,KAAK,YAAY;QAC5B,OAAO;IACX;IACA,KAAK,MAAM,SAAS,IAAI,MAAM,CAAE;QAC5B,OAAQ,MAAM,IAAI;YACd,KAAK;gBACD,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EACrD,MAAM,OAAO,EAAE;gBACf;YACJ,KAAK;gBACD,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EACrD,MAAM,OAAO,EAAE;gBACf;QACR;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6221, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/default.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,SAAS,gBAAgB,IAAI,EAAE,IAAI;IACtC,OAAO;QACH,GAAG,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,SAAS,CAAC,IAAI,EAAE,KAAK;QACtC,SAAS,KAAK,YAAY;IAC9B;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6238, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/effects.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : {};\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,SAAS,gBAAgB,IAAI,EAAE,IAAI;IACtC,OAAO,KAAK,cAAc,KAAK,UACzB,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,QAC3B,CAAC;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6252, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/enum.js"],"sourcesContent":["export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,aAAa,GAAG;IAC5B,OAAO;QACH,MAAM;QACN,MAAM,MAAM,IAAI,CAAC,IAAI,MAAM;IAC/B;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6267, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,yBAAyB,CAAC;IAC5B,IAAI,UAAU,QAAQ,KAAK,IAAI,KAAK,UAChC,OAAO;IACX,OAAO,WAAW;AACtB;AACO,SAAS,qBAAqB,GAAG,EAAE,IAAI;IAC1C,MAAM,QAAQ;QACV,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;YACpB,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;gBAAS;aAAI;QACpD;QACA,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE;YACrB,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;gBAAS;aAAI;QACpD;KACH,CAAC,MAAM,CAAC,CAAC,IAAM,CAAC,CAAC;IAClB,IAAI,wBAAwB,KAAK,MAAM,KAAK,sBACtC;QAAE,uBAAuB;IAAM,IAC/B;IACN,MAAM,cAAc,EAAE;IACtB,uEAAuE;IACvE,MAAM,OAAO,CAAC,CAAC;QACX,IAAI,uBAAuB,SAAS;YAChC,YAAY,IAAI,IAAI,OAAO,KAAK;YAChC,IAAI,OAAO,qBAAqB,KAAK,WAAW;gBAC5C,0DAA0D;gBAC1D,kEAAkE;gBAClE,wBAAwB;YAC5B;QACJ,OACK;YACD,IAAI,eAAe;YACnB,IAAI,0BAA0B,UAC1B,OAAO,oBAAoB,KAAK,OAAO;gBACvC,MAAM,EAAE,oBAAoB,EAAE,GAAG,MAAM,GAAG;gBAC1C,eAAe;YACnB,OACK;gBACD,0GAA0G;gBAC1G,wBAAwB;YAC5B;YACA,YAAY,IAAI,CAAC;QACrB;IACJ;IACA,OAAO,YAAY,MAAM,GACnB;QACE,OAAO;QACP,GAAG,qBAAqB;IAC5B,IACE;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6331, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/literal.js"],"sourcesContent":["export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,gBAAgB,GAAG,EAAE,IAAI;IACrC,MAAM,aAAa,OAAO,IAAI,KAAK;IACnC,IAAI,eAAe,YACf,eAAe,YACf,eAAe,aACf,eAAe,UAAU;QACzB,OAAO;YACH,MAAM,MAAM,OAAO,CAAC,IAAI,KAAK,IAAI,UAAU;QAC/C;IACJ;IACA,IAAI,KAAK,MAAM,KAAK,YAAY;QAC5B,OAAO;YACH,MAAM,eAAe,WAAW,YAAY;YAC5C,MAAM;gBAAC,IAAI,KAAK;aAAC;QACrB;IACJ;IACA,OAAO;QACH,MAAM,eAAe,WAAW,YAAY;QAC5C,OAAO,IAAI,KAAK;IACpB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6360, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/string.js"],"sourcesContent":["import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6709, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/record.js"],"sourcesContent":["import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: refs.rejectedAdditionalProperties,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AACO,SAAS,eAAe,GAAG,EAAE,IAAI;IACpC,IAAI,KAAK,MAAM,KAAK,UAAU;QAC1B,QAAQ,IAAI,CAAC;IACjB;IACA,IAAI,KAAK,MAAM,KAAK,cAChB,IAAI,OAAO,EAAE,KAAK,aAAa,oIAAA,CAAA,wBAAqB,CAAC,OAAO,EAAE;QAC9D,OAAO;YACH,MAAM;YACN,UAAU,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM;YACjC,YAAY,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,MAAQ,CAAC;oBACtD,GAAG,GAAG;oBACN,CAAC,IAAI,EAAE,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;wBAChC,GAAG,IAAI;wBACP,aAAa;+BAAI,KAAK,WAAW;4BAAE;4BAAc;yBAAI;oBACzD,MAAM,CAAC;gBACX,CAAC,GAAG,CAAC;YACL,sBAAsB,KAAK,4BAA4B;QAC3D;IACJ;IACA,MAAM,SAAS;QACX,MAAM;QACN,sBAAsB,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;YAC/C,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;aAAuB;QAC9D,MAAM,KAAK,2BAA2B;IAC1C;IACA,IAAI,KAAK,MAAM,KAAK,YAAY;QAC5B,OAAO;IACX;IACA,IAAI,IAAI,OAAO,EAAE,KAAK,aAAa,oIAAA,CAAA,wBAAqB,CAAC,SAAS,IAC9D,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ;QACjC,MAAM,EAAE,IAAI,EAAE,GAAG,SAAS,GAAG,CAAA,GAAA,+KAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE;QAC9D,OAAO;YACH,GAAG,MAAM;YACT,eAAe;QACnB;IACJ,OACK,IAAI,IAAI,OAAO,EAAE,KAAK,aAAa,oIAAA,CAAA,wBAAqB,CAAC,OAAO,EAAE;QACnE,OAAO;YACH,GAAG,MAAM;YACT,eAAe;gBACX,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM;YACjC;QACJ;IACJ,OACK,IAAI,IAAI,OAAO,EAAE,KAAK,aAAa,oIAAA,CAAA,wBAAqB,CAAC,UAAU,IACpE,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,oIAAA,CAAA,wBAAqB,CAAC,SAAS,IACvE,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ;QAC3C,MAAM,EAAE,IAAI,EAAE,GAAG,SAAS,GAAG,CAAA,GAAA,gLAAA,CAAA,kBAAe,AAAD,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE;QAC/D,OAAO;YACH,GAAG,MAAM;YACT,eAAe;QACnB;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6783, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/map.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,SAAS,YAAY,GAAG,EAAE,IAAI;IACjC,IAAI,KAAK,WAAW,KAAK,UAAU;QAC/B,OAAO,CAAA,GAAA,+KAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IAC/B;IACA,MAAM,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE;QACpC,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;YAAS;SAAI;IAC7D,MAAM,CAAC;IACP,MAAM,SAAS,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;QACxC,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;YAAS;SAAI;IAC7D,MAAM,CAAC;IACP,OAAO;QACH,MAAM;QACN,UAAU;QACV,OAAO;YACH,MAAM;YACN,OAAO;gBAAC;gBAAM;aAAO;YACrB,UAAU;YACV,UAAU;QACd;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6832, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js"],"sourcesContent":["export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,mBAAmB,GAAG;IAClC,MAAM,SAAS,IAAI,MAAM;IACzB,MAAM,aAAa,OAAO,IAAI,CAAC,IAAI,MAAM,EAAE,MAAM,CAAC,CAAC;QAC/C,OAAO,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK;IAC1C;IACA,MAAM,eAAe,WAAW,GAAG,CAAC,CAAC,MAAQ,MAAM,CAAC,IAAI;IACxD,MAAM,cAAc,MAAM,IAAI,CAAC,IAAI,IAAI,aAAa,GAAG,CAAC,CAAC,SAAW,OAAO;IAC3E,OAAO;QACH,MAAM,YAAY,MAAM,KAAK,IACvB,WAAW,CAAC,EAAE,KAAK,WACf,WACA,WACJ;YAAC;YAAU;SAAS;QAC1B,MAAM;IACV;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6856, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/never.js"],"sourcesContent":["export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO;QACH,KAAK,CAAC;IACV;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6870, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/null.js"],"sourcesContent":["export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,aAAa,IAAI;IAC7B,OAAO,KAAK,MAAM,KAAK,aACjB;QACE,MAAM;YAAC;SAAO;QACd,UAAU;IACd,IACE;QACE,MAAM;IACV;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6889, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/union.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6990, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,SAAS,iBAAiB,GAAG,EAAE,IAAI;IACtC,IAAI;QAAC;QAAa;QAAa;QAAa;QAAc;KAAU,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,KACrG,CAAC,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG;QACnE,IAAI,KAAK,MAAM,KAAK,YAAY;YAC5B,OAAO;gBACH,MAAM,8KAAA,CAAA,oBAAiB,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACpD,UAAU;YACd;QACJ;QACA,OAAO;YACH,MAAM;gBACF,8KAAA,CAAA,oBAAiB,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC9C;aACH;QACL;IACJ;IACA,IAAI,KAAK,MAAM,KAAK,YAAY;QAC5B,MAAM,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;YACtC,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;aAAC;QACtC;QACA,IAAI,QAAQ,UAAU,MAClB,OAAO;YAAE,OAAO;gBAAC;aAAK;YAAE,UAAU;QAAK;QAC3C,OAAO,QAAQ;YAAE,GAAG,IAAI;YAAE,UAAU;QAAK;IAC7C;IACA,MAAM,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;QACtC,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;SAAI;IACpD;IACA,OAAO,QAAQ;QAAE,OAAO;YAAC;YAAM;gBAAE,MAAM;YAAO;SAAE;IAAC;AACrD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7059, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/number.js"],"sourcesContent":["import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,SAAS,eAAe,GAAG,EAAE,IAAI;IACpC,MAAM,MAAM;QACR,MAAM;IACV;IACA,IAAI,CAAC,IAAI,MAAM,EACX,OAAO;IACX,KAAK,MAAM,SAAS,IAAI,MAAM,CAAE;QAC5B,OAAQ,MAAM,IAAI;YACd,KAAK;gBACD,IAAI,IAAI,GAAG;gBACX,CAAA,GAAA,2KAAA,CAAA,kBAAe,AAAD,EAAE,KAAK,QAAQ,MAAM,OAAO,EAAE;gBAC5C;YACJ,KAAK;gBACD,IAAI,KAAK,MAAM,KAAK,eAAe;oBAC/B,IAAI,MAAM,SAAS,EAAE;wBACjB,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBAC1E,OACK;wBACD,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,oBAAoB,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBACnF;gBACJ,OACK;oBACD,IAAI,CAAC,MAAM,SAAS,EAAE;wBAClB,IAAI,gBAAgB,GAAG;oBAC3B;oBACA,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBAC1E;gBACA;YACJ,KAAK;gBACD,IAAI,KAAK,MAAM,KAAK,eAAe;oBAC/B,IAAI,MAAM,SAAS,EAAE;wBACjB,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBAC1E,OACK;wBACD,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,oBAAoB,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;oBACnF;gBACJ,OACK;oBACD,IAAI,CAAC,MAAM,SAAS,EAAE;wBAClB,IAAI,gBAAgB,GAAG;oBAC3B;oBACA,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,WAAW,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBAC1E;gBACA;YACJ,KAAK;gBACD,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,KAAK,cAAc,MAAM,KAAK,EAAE,MAAM,OAAO,EAAE;gBACzE;QACR;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7116, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/object.js"],"sourcesContent":["import { ZodOptional } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        properties: {},\n    };\n    const required = [];\n    const shape = def.shape();\n    for (const propName in shape) {\n        let propDef = shape[propName];\n        if (propDef === undefined || propDef._def === undefined) {\n            continue;\n        }\n        let propOptional = safeIsOptional(propDef);\n        if (propOptional && forceOptionalIntoNullable) {\n            if (propDef instanceof ZodOptional) {\n                propDef = propDef._def.innerType;\n            }\n            if (!propDef.isNullable()) {\n                propDef = propDef.nullable();\n            }\n            propOptional = false;\n        }\n        const parsedDef = parseDef(propDef._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", propName],\n            propertyPath: [...refs.currentPath, \"properties\", propName],\n        });\n        if (parsedDef === undefined) {\n            continue;\n        }\n        result.properties[propName] = parsedDef;\n        if (!propOptional) {\n            required.push(propName);\n        }\n    }\n    if (required.length) {\n        result.required = required;\n    }\n    const additionalProperties = decideAdditionalProperties(def, refs);\n    if (additionalProperties !== undefined) {\n        result.additionalProperties = additionalProperties;\n    }\n    return result;\n}\nfunction decideAdditionalProperties(def, refs) {\n    if (def.catchall._def.typeName !== \"ZodNever\") {\n        return parseDef(def.catchall._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        });\n    }\n    switch (def.unknownKeys) {\n        case \"passthrough\":\n            return refs.allowedAdditionalProperties;\n        case \"strict\":\n            return refs.rejectedAdditionalProperties;\n        case \"strip\":\n            return refs.removeAdditionalStrategy === \"strict\"\n                ? refs.allowedAdditionalProperties\n                : refs.rejectedAdditionalProperties;\n    }\n}\nfunction safeIsOptional(schema) {\n    try {\n        return schema.isOptional();\n    }\n    catch {\n        return true;\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,SAAS,eAAe,GAAG,EAAE,IAAI;IACpC,MAAM,4BAA4B,KAAK,MAAM,KAAK;IAClD,MAAM,SAAS;QACX,MAAM;QACN,YAAY,CAAC;IACjB;IACA,MAAM,WAAW,EAAE;IACnB,MAAM,QAAQ,IAAI,KAAK;IACvB,IAAK,MAAM,YAAY,MAAO;QAC1B,IAAI,UAAU,KAAK,CAAC,SAAS;QAC7B,IAAI,YAAY,aAAa,QAAQ,IAAI,KAAK,WAAW;YACrD;QACJ;QACA,IAAI,eAAe,eAAe;QAClC,IAAI,gBAAgB,2BAA2B;YAC3C,IAAI,mBAAmB,oIAAA,CAAA,cAAW,EAAE;gBAChC,UAAU,QAAQ,IAAI,CAAC,SAAS;YACpC;YACA,IAAI,CAAC,QAAQ,UAAU,IAAI;gBACvB,UAAU,QAAQ,QAAQ;YAC9B;YACA,eAAe;QACnB;QACA,MAAM,YAAY,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,IAAI,EAAE;YACrC,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;gBAAc;aAAS;YAC1D,cAAc;mBAAI,KAAK,WAAW;gBAAE;gBAAc;aAAS;QAC/D;QACA,IAAI,cAAc,WAAW;YACzB;QACJ;QACA,OAAO,UAAU,CAAC,SAAS,GAAG;QAC9B,IAAI,CAAC,cAAc;YACf,SAAS,IAAI,CAAC;QAClB;IACJ;IACA,IAAI,SAAS,MAAM,EAAE;QACjB,OAAO,QAAQ,GAAG;IACtB;IACA,MAAM,uBAAuB,2BAA2B,KAAK;IAC7D,IAAI,yBAAyB,WAAW;QACpC,OAAO,oBAAoB,GAAG;IAClC;IACA,OAAO;AACX;AACA,SAAS,2BAA2B,GAAG,EAAE,IAAI;IACzC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,KAAK,YAAY;QAC3C,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,QAAQ,CAAC,IAAI,EAAE;YAC/B,GAAG,IAAI;YACP,aAAa;mBAAI,KAAK,WAAW;gBAAE;aAAuB;QAC9D;IACJ;IACA,OAAQ,IAAI,WAAW;QACnB,KAAK;YACD,OAAO,KAAK,2BAA2B;QAC3C,KAAK;YACD,OAAO,KAAK,4BAA4B;QAC5C,KAAK;YACD,OAAO,KAAK,wBAAwB,KAAK,WACnC,KAAK,2BAA2B,GAChC,KAAK,4BAA4B;IAC/C;AACJ;AACA,SAAS,eAAe,MAAM;IAC1B,IAAI;QACA,OAAO,OAAO,UAAU;IAC5B,EACA,OAAM;QACF,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7208, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/optional.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAC,KAAK;IAClC,IAAI,KAAK,WAAW,CAAC,QAAQ,OAAO,KAAK,YAAY,EAAE,YAAY;QAC/D,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;IACxC;IACA,MAAM,cAAc,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;QAC7C,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;SAAI;IACpD;IACA,OAAO,cACD;QACE,OAAO;YACH;gBACI,KAAK,CAAC;YACV;YACA;SACH;IACL,IACE,CAAC;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7240, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAC,KAAK;IAClC,IAAI,KAAK,YAAY,KAAK,SAAS;QAC/B,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE;IACjC,OACK,IAAI,KAAK,YAAY,KAAK,UAAU;QACrC,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE;IAClC;IACA,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE;QAC5B,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS;SAAI;IACpD;IACA,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE;QAC7B,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;YAAS,IAAI,MAAM;SAAI;IAC9D;IACA,OAAO;QACH,OAAO;YAAC;YAAG;SAAE,CAAC,MAAM,CAAC,CAAC,IAAM,MAAM;IACtC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7280, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/promise.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,SAAS,gBAAgB,GAAG,EAAE,IAAI;IACrC,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7294, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/set.js"],"sourcesContent":["import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,SAAS,YAAY,GAAG,EAAE,IAAI;IACjC,MAAM,QAAQ,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;QACvC,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,WAAW;YAAE;SAAQ;IAC/C;IACA,MAAM,SAAS;QACX,MAAM;QACN,aAAa;QACb;IACJ;IACA,IAAI,IAAI,OAAO,EAAE;QACb,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,QAAQ,YAAY,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,OAAO,EAAE;IAC1F;IACA,IAAI,IAAI,OAAO,EAAE;QACb,CAAA,GAAA,2KAAA,CAAA,4BAAyB,AAAD,EAAE,QAAQ,YAAY,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,OAAO,EAAE;IAC1F;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7328, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,SAAS,cAAc,GAAG,EAAE,IAAI;IACnC,IAAI,IAAI,IAAI,EAAE;QACV,OAAO;YACH,MAAM;YACN,UAAU,IAAI,KAAK,CAAC,MAAM;YAC1B,OAAO,IAAI,KAAK,CACX,GAAG,CAAC,CAAC,GAAG,IAAM,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,IAAI,EAAE;oBAChC,GAAG,IAAI;oBACP,aAAa;2BAAI,KAAK,WAAW;wBAAE;wBAAS,GAAG,GAAG;qBAAC;gBACvD,IACK,MAAM,CAAC,CAAC,KAAK,IAAO,MAAM,YAAY,MAAM;uBAAI;oBAAK;iBAAE,EAAG,EAAE;YACjE,iBAAiB,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;gBACrC,GAAG,IAAI;gBACP,aAAa;uBAAI,KAAK,WAAW;oBAAE;iBAAkB;YACzD;QACJ;IACJ,OACK;QACD,OAAO;YACH,MAAM;YACN,UAAU,IAAI,KAAK,CAAC,MAAM;YAC1B,UAAU,IAAI,KAAK,CAAC,MAAM;YAC1B,OAAO,IAAI,KAAK,CACX,GAAG,CAAC,CAAC,GAAG,IAAM,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,IAAI,EAAE;oBAChC,GAAG,IAAI;oBACP,aAAa;2BAAI,KAAK,WAAW;wBAAE;wBAAS,GAAG,GAAG;qBAAC;gBACvD,IACK,MAAM,CAAC,CAAC,KAAK,IAAO,MAAM,YAAY,MAAM;uBAAI;oBAAK;iBAAE,EAAG,EAAE;QACrE;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7382, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js"],"sourcesContent":["export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO;QACH,KAAK,CAAC;IACV;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7396, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js"],"sourcesContent":["export function parseUnknownDef() {\n    return {};\n}\n"],"names":[],"mappings":";;;AAAO,SAAS;IACZ,OAAO,CAAC;AACZ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7408, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js"],"sourcesContent":["import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAC,KAAK;IAClC,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,IAAI,EAAE;AACxC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7422, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/selectParser.js"],"sourcesContent":["import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nexport const selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7567, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/parseDef.js"],"sourcesContent":["import { ignoreOverride } from \"./Options.js\";\nimport { selectParser } from \"./selectParser.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchemaOrGetter = selectParser(def, def.typeName, refs);\n    // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n    const jsonSchema = typeof jsonSchemaOrGetter === \"function\"\n        ? parseDef(jsonSchemaOrGetter(), refs)\n        : jsonSchemaOrGetter;\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    if (refs.postProcess) {\n        const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n        newItem.jsonSchema = jsonSchema;\n        return postProcessResult;\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,SAAS,SAAS,GAAG,EAAE,IAAI,EAAE,kBAAkB,KAAK;IACvD,MAAM,WAAW,KAAK,IAAI,CAAC,GAAG,CAAC;IAC/B,IAAI,KAAK,QAAQ,EAAE;QACf,MAAM,iBAAiB,KAAK,QAAQ,GAAG,KAAK,MAAM,UAAU;QAC5D,IAAI,mBAAmB,qKAAA,CAAA,iBAAc,EAAE;YACnC,OAAO;QACX;IACJ;IACA,IAAI,YAAY,CAAC,iBAAiB;QAC9B,MAAM,aAAa,QAAQ,UAAU;QACrC,IAAI,eAAe,WAAW;YAC1B,OAAO;QACX;IACJ;IACA,MAAM,UAAU;QAAE;QAAK,MAAM,KAAK,WAAW;QAAE,YAAY;IAAU;IACrE,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK;IACnB,MAAM,qBAAqB,CAAA,GAAA,0KAAA,CAAA,eAAY,AAAD,EAAE,KAAK,IAAI,QAAQ,EAAE;IAC3D,sHAAsH;IACtH,MAAM,aAAa,OAAO,uBAAuB,aAC3C,SAAS,sBAAsB,QAC/B;IACN,IAAI,YAAY;QACZ,QAAQ,KAAK,MAAM;IACvB;IACA,IAAI,KAAK,WAAW,EAAE;QAClB,MAAM,oBAAoB,KAAK,WAAW,CAAC,YAAY,KAAK;QAC5D,QAAQ,UAAU,GAAG;QACrB,OAAO;IACX;IACA,QAAQ,UAAU,GAAG;IACrB,OAAO;AACX;AACA,MAAM,UAAU,CAAC,MAAM;IACnB,OAAQ,KAAK,YAAY;QACrB,KAAK;YACD,OAAO;gBAAE,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC;YAAK;QACvC,KAAK;YACD,OAAO;gBAAE,MAAM,gBAAgB,KAAK,WAAW,EAAE,KAAK,IAAI;YAAE;QAChE,KAAK;QACL,KAAK;YAAQ;gBACT,IAAI,KAAK,IAAI,CAAC,MAAM,GAAG,KAAK,WAAW,CAAC,MAAM,IAC1C,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,QAAU,KAAK,WAAW,CAAC,MAAM,KAAK,QAAQ;oBACtE,QAAQ,IAAI,CAAC,CAAC,gCAAgC,EAAE,KAAK,WAAW,CAAC,IAAI,CAAC,KAAK,mBAAmB,CAAC;oBAC/F,OAAO,CAAC;gBACZ;gBACA,OAAO,KAAK,YAAY,KAAK,SAAS,CAAC,IAAI;YAC/C;IACJ;AACJ;AACA,MAAM,kBAAkB,CAAC,OAAO;IAC5B,IAAI,IAAI;IACR,MAAO,IAAI,MAAM,MAAM,IAAI,IAAI,MAAM,MAAM,EAAE,IAAK;QAC9C,IAAI,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,EACrB;IACR;IACA,OAAO;QAAC,CAAC,MAAM,MAAM,GAAG,CAAC,EAAE,QAAQ;WAAO,MAAM,KAAK,CAAC;KAAG,CAAC,IAAI,CAAC;AACnE;AACA,MAAM,UAAU,CAAC,KAAK,MAAM;IACxB,IAAI,IAAI,WAAW,EAAE;QACjB,WAAW,WAAW,GAAG,IAAI,WAAW;QACxC,IAAI,KAAK,mBAAmB,EAAE;YAC1B,WAAW,mBAAmB,GAAG,IAAI,WAAW;QACpD;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7654, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/Refs.js"],"sourcesContent":["import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAC;IACpB,MAAM,WAAW,CAAA,GAAA,qKAAA,CAAA,oBAAiB,AAAD,EAAE;IACnC,MAAM,cAAc,SAAS,IAAI,KAAK,YAChC;WAAI,SAAS,QAAQ;QAAE,SAAS,cAAc;QAAE,SAAS,IAAI;KAAC,GAC9D,SAAS,QAAQ;IACvB,OAAO;QACH,GAAG,QAAQ;QACX,aAAa;QACb,cAAc;QACd,MAAM,IAAI,IAAI,OAAO,OAAO,CAAC,SAAS,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,GAAK;gBACpE,IAAI,IAAI;gBACR;oBACI,KAAK,IAAI,IAAI;oBACb,MAAM;2BAAI,SAAS,QAAQ;wBAAE,SAAS,cAAc;wBAAE;qBAAK;oBAC3D,kHAAkH;oBAClH,YAAY;gBAChB;aACH;IACL;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7691, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js"],"sourcesContent":["import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,kBAAkB,CAAC,QAAQ;IAC7B,MAAM,OAAO,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE;IACrB,MAAM,cAAc,OAAO,YAAY,YAAY,QAAQ,WAAW,GAChE,OAAO,OAAO,CAAC,QAAQ,WAAW,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,OAAO,GAAK,CAAC;YACnE,GAAG,GAAG;YACN,CAAC,KAAK,EAAE,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,IAAI,EAAE;gBAC1B,GAAG,IAAI;gBACP,aAAa;uBAAI,KAAK,QAAQ;oBAAE,KAAK,cAAc;oBAAE;iBAAK;YAC9D,GAAG,SAAS,CAAC;QACjB,CAAC,GAAG,CAAC,KACH;IACN,MAAM,OAAO,OAAO,YAAY,WAC1B,UACA,SAAS,iBAAiB,UACtB,YACA,SAAS;IACnB,MAAM,OAAO,CAAA,GAAA,sKAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,IAAI,EAAE,SAAS,YACtC,OACA;QACE,GAAG,IAAI;QACP,aAAa;eAAI,KAAK,QAAQ;YAAE,KAAK,cAAc;YAAE;SAAK;IAC9D,GAAG,UAAU,CAAC;IAClB,MAAM,QAAQ,OAAO,YAAY,YAC7B,QAAQ,IAAI,KAAK,aACjB,QAAQ,YAAY,KAAK,UACvB,QAAQ,IAAI,GACZ;IACN,IAAI,UAAU,WAAW;QACrB,KAAK,KAAK,GAAG;IACjB;IACA,MAAM,WAAW,SAAS,YACpB,cACI;QACE,GAAG,IAAI;QACP,CAAC,KAAK,cAAc,CAAC,EAAE;IAC3B,IACE,OACJ;QACE,MAAM;eACE,KAAK,YAAY,KAAK,aAAa,EAAE,GAAG,KAAK,QAAQ;YACzD,KAAK,cAAc;YACnB;SACH,CAAC,IAAI,CAAC;QACP,CAAC,KAAK,cAAc,CAAC,EAAE;YACnB,GAAG,WAAW;YACd,CAAC,KAAK,EAAE;QACZ;IACJ;IACJ,IAAI,KAAK,MAAM,KAAK,eAAe;QAC/B,SAAS,OAAO,GAAG;IACvB,OACK,IAAI,KAAK,MAAM,KAAK,uBAAuB,KAAK,MAAM,KAAK,UAAU;QACtE,SAAS,OAAO,GAAG;IACvB;IACA,IAAI,KAAK,MAAM,KAAK,YAChB,CAAC,WAAW,YACR,WAAW,YACX,WAAW,YACV,UAAU,YAAY,MAAM,OAAO,CAAC,SAAS,IAAI,CAAE,GAAG;QAC3D,QAAQ,IAAI,CAAC;IACjB;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7755, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/zod-to-json-schema/dist/esm/index.js"],"sourcesContent":["export * from \"./Options.js\";\nexport * from \"./Refs.js\";\nexport * from \"./errorMessages.js\";\nexport * from \"./parseDef.js\";\nexport * from \"./parseTypes.js\";\nexport * from \"./parsers/any.js\";\nexport * from \"./parsers/array.js\";\nexport * from \"./parsers/bigint.js\";\nexport * from \"./parsers/boolean.js\";\nexport * from \"./parsers/branded.js\";\nexport * from \"./parsers/catch.js\";\nexport * from \"./parsers/date.js\";\nexport * from \"./parsers/default.js\";\nexport * from \"./parsers/effects.js\";\nexport * from \"./parsers/enum.js\";\nexport * from \"./parsers/intersection.js\";\nexport * from \"./parsers/literal.js\";\nexport * from \"./parsers/map.js\";\nexport * from \"./parsers/nativeEnum.js\";\nexport * from \"./parsers/never.js\";\nexport * from \"./parsers/null.js\";\nexport * from \"./parsers/nullable.js\";\nexport * from \"./parsers/number.js\";\nexport * from \"./parsers/object.js\";\nexport * from \"./parsers/optional.js\";\nexport * from \"./parsers/pipeline.js\";\nexport * from \"./parsers/promise.js\";\nexport * from \"./parsers/readonly.js\";\nexport * from \"./parsers/record.js\";\nexport * from \"./parsers/set.js\";\nexport * from \"./parsers/string.js\";\nexport * from \"./parsers/tuple.js\";\nexport * from \"./parsers/undefined.js\";\nexport * from \"./parsers/union.js\";\nexport * from \"./parsers/unknown.js\";\nexport * from \"./selectParser.js\";\nexport * from \"./zodToJsonSchema.js\";\nimport { zodToJsonSchema } from \"./zodToJsonSchema.js\";\nexport default zodToJsonSchema;\n"],"names":[],"mappings":";;;AAqCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCACe,6KAAA,CAAA,kBAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7804, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/index.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/assistant-stream-parts.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/process-chat-response.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/duplicated/usage.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/parse-partial-json.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/fix-json.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/data-stream-parts.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/process-data-stream.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/process-chat-text-response.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/process-text-stream.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/call-chat-api.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/call-completion-api.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/data-url.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/extract-max-tool-invocation-step.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/get-message-parts.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/fill-message-parts.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/is-deep-equal-data.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/prepare-attachments-for-request.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/process-assistant-stream.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/schema.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/zod-schema.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/should-resubmit-messages.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/ui-utils/src/update-tool-call-result.ts"],"sourcesContent":["export * from './types';\n\nexport { generateId } from '@ai-sdk/provider-utils';\n\n// Export stream data utilities for custom stream implementations,\n// both on the client and server side.\n// NOTE: this is experimental / internal and may change without notice\nexport {\n  formatAssistantStreamPart,\n  parseAssistantStreamPart,\n} from './assistant-stream-parts';\nexport type {\n  AssistantStreamPart,\n  AssistantStreamString,\n} from './assistant-stream-parts';\nexport { callChatApi } from './call-chat-api';\nexport { callCompletionApi } from './call-completion-api';\nexport { formatDataStreamPart, parseDataStreamPart } from './data-stream-parts';\nexport type { DataStreamPart, DataStreamString } from './data-stream-parts';\nexport { getTextFromDataUrl } from './data-url';\nexport type { DeepPartial } from './deep-partial';\nexport { extractMaxToolInvocationStep } from './extract-max-tool-invocation-step';\nexport { fillMessageParts } from './fill-message-parts';\nexport { getMessageParts } from './get-message-parts';\nexport { isDeepEqualData } from './is-deep-equal-data';\nexport { parsePartialJson } from './parse-partial-json';\nexport { prepareAttachmentsForRequest } from './prepare-attachments-for-request';\nexport { processAssistantStream } from './process-assistant-stream';\nexport { processDataStream } from './process-data-stream';\nexport { processTextStream } from './process-text-stream';\nexport { asSchema, jsonSchema } from './schema';\nexport type { Schema } from './schema';\nexport {\n  isAssistantMessageWithCompletedToolCalls,\n  shouldResubmitMessages,\n} from './should-resubmit-messages';\nexport { updateToolCallResult } from './update-tool-call-result';\nexport { zodSchema } from './zod-schema';\n","import { AssistantMessage, DataMessage, JSONValue } from './types';\n\nexport type AssistantStreamString =\n  `${(typeof StreamStringPrefixes)[keyof typeof StreamStringPrefixes]}:${string}\\n`;\n\nexport interface AssistantStreamPart<\n  CODE extends string,\n  NAME extends string,\n  TYPE,\n> {\n  code: CODE;\n  name: NAME;\n  parse: (value: JSONValue) => { type: NAME; value: TYPE };\n}\n\nconst textStreamPart: AssistantStreamPart<'0', 'text', string> = {\n  code: '0',\n  name: 'text',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"text\" parts expect a string value.');\n    }\n    return { type: 'text', value };\n  },\n};\n\nconst errorStreamPart: AssistantStreamPart<'3', 'error', string> = {\n  code: '3',\n  name: 'error',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"error\" parts expect a string value.');\n    }\n    return { type: 'error', value };\n  },\n};\n\nconst assistantMessageStreamPart: AssistantStreamPart<\n  '4',\n  'assistant_message',\n  AssistantMessage\n> = {\n  code: '4',\n  name: 'assistant_message',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('id' in value) ||\n      !('role' in value) ||\n      !('content' in value) ||\n      typeof value.id !== 'string' ||\n      typeof value.role !== 'string' ||\n      value.role !== 'assistant' ||\n      !Array.isArray(value.content) ||\n      !value.content.every(\n        item =>\n          item != null &&\n          typeof item === 'object' &&\n          'type' in item &&\n          item.type === 'text' &&\n          'text' in item &&\n          item.text != null &&\n          typeof item.text === 'object' &&\n          'value' in item.text &&\n          typeof item.text.value === 'string',\n      )\n    ) {\n      throw new Error(\n        '\"assistant_message\" parts expect an object with an \"id\", \"role\", and \"content\" property.',\n      );\n    }\n\n    return {\n      type: 'assistant_message',\n      value: value as AssistantMessage,\n    };\n  },\n};\n\nconst assistantControlDataStreamPart: AssistantStreamPart<\n  '5',\n  'assistant_control_data',\n  {\n    threadId: string;\n    messageId: string;\n  }\n> = {\n  code: '5',\n  name: 'assistant_control_data',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('threadId' in value) ||\n      !('messageId' in value) ||\n      typeof value.threadId !== 'string' ||\n      typeof value.messageId !== 'string'\n    ) {\n      throw new Error(\n        '\"assistant_control_data\" parts expect an object with a \"threadId\" and \"messageId\" property.',\n      );\n    }\n\n    return {\n      type: 'assistant_control_data',\n      value: {\n        threadId: value.threadId,\n        messageId: value.messageId,\n      },\n    };\n  },\n};\n\nconst dataMessageStreamPart: AssistantStreamPart<\n  '6',\n  'data_message',\n  DataMessage\n> = {\n  code: '6',\n  name: 'data_message',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('role' in value) ||\n      !('data' in value) ||\n      typeof value.role !== 'string' ||\n      value.role !== 'data'\n    ) {\n      throw new Error(\n        '\"data_message\" parts expect an object with a \"role\" and \"data\" property.',\n      );\n    }\n\n    return {\n      type: 'data_message',\n      value: value as DataMessage,\n    };\n  },\n};\n\nconst assistantStreamParts = [\n  textStreamPart,\n  errorStreamPart,\n  assistantMessageStreamPart,\n  assistantControlDataStreamPart,\n  dataMessageStreamPart,\n] as const;\n\ntype AssistantStreamParts =\n  | typeof textStreamPart\n  | typeof errorStreamPart\n  | typeof assistantMessageStreamPart\n  | typeof assistantControlDataStreamPart\n  | typeof dataMessageStreamPart;\n\ntype AssistantStreamPartValueType = {\n  [P in AssistantStreamParts as P['name']]: ReturnType<P['parse']>['value'];\n};\n\nexport type AssistantStreamPartType =\n  | ReturnType<typeof textStreamPart.parse>\n  | ReturnType<typeof errorStreamPart.parse>\n  | ReturnType<typeof assistantMessageStreamPart.parse>\n  | ReturnType<typeof assistantControlDataStreamPart.parse>\n  | ReturnType<typeof dataMessageStreamPart.parse>;\n\nexport const assistantStreamPartsByCode = {\n  [textStreamPart.code]: textStreamPart,\n  [errorStreamPart.code]: errorStreamPart,\n  [assistantMessageStreamPart.code]: assistantMessageStreamPart,\n  [assistantControlDataStreamPart.code]: assistantControlDataStreamPart,\n  [dataMessageStreamPart.code]: dataMessageStreamPart,\n} as const;\n\nexport const StreamStringPrefixes = {\n  [textStreamPart.name]: textStreamPart.code,\n  [errorStreamPart.name]: errorStreamPart.code,\n  [assistantMessageStreamPart.name]: assistantMessageStreamPart.code,\n  [assistantControlDataStreamPart.name]: assistantControlDataStreamPart.code,\n  [dataMessageStreamPart.name]: dataMessageStreamPart.code,\n} as const;\n\nexport const validCodes = assistantStreamParts.map(part => part.code);\n\nexport const parseAssistantStreamPart = (\n  line: string,\n): AssistantStreamPartType => {\n  const firstSeparatorIndex = line.indexOf(':');\n\n  if (firstSeparatorIndex === -1) {\n    throw new Error('Failed to parse stream string. No separator found.');\n  }\n\n  const prefix = line.slice(0, firstSeparatorIndex);\n\n  if (!validCodes.includes(prefix as keyof typeof assistantStreamPartsByCode)) {\n    throw new Error(`Failed to parse stream string. Invalid code ${prefix}.`);\n  }\n\n  const code = prefix as keyof typeof assistantStreamPartsByCode;\n\n  const textValue = line.slice(firstSeparatorIndex + 1);\n  const jsonValue: JSONValue = JSON.parse(textValue);\n\n  return assistantStreamPartsByCode[code].parse(jsonValue);\n};\n\nexport function formatAssistantStreamPart<\n  T extends keyof AssistantStreamPartValueType,\n>(type: T, value: AssistantStreamPartValueType[T]): AssistantStreamString {\n  const streamPart = assistantStreamParts.find(part => part.name === type);\n\n  if (!streamPart) {\n    throw new Error(`Invalid stream part type: ${type}`);\n  }\n\n  return `${streamPart.code}:${JSON.stringify(value)}\\n`;\n}\n","import { LanguageModelV1FinishReason } from '@ai-sdk/provider';\nimport { generateId as generateIdFunction } from '@ai-sdk/provider-utils';\nimport {\n  calculateLanguageModelUsage,\n  LanguageModelUsage,\n} from './duplicated/usage';\nimport { parsePartialJson } from './parse-partial-json';\nimport { processDataStream } from './process-data-stream';\nimport type {\n  JSONValue,\n  ReasoningUIPart,\n  TextUIPart,\n  ToolInvocation,\n  ToolInvocationUIPart,\n  UIMessage,\n  UseChatOptions,\n} from './types';\n\nexport async function processChatResponse({\n  stream,\n  update,\n  onToolCall,\n  onFinish,\n  generateId = generateIdFunction,\n  getCurrentDate = () => new Date(),\n  lastMessage,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  update: (options: {\n    message: UIMessage;\n    data: JSONValue[] | undefined;\n    replaceLastMessage: boolean;\n  }) => void;\n  onToolCall?: UseChatOptions['onToolCall'];\n  onFinish?: (options: {\n    message: UIMessage | undefined;\n    finishReason: LanguageModelV1FinishReason;\n    usage: LanguageModelUsage;\n  }) => void;\n  generateId?: () => string;\n  getCurrentDate?: () => Date;\n  lastMessage: UIMessage | undefined;\n}) {\n  const replaceLastMessage = lastMessage?.role === 'assistant';\n  let step = replaceLastMessage\n    ? 1 +\n      // find max step in existing tool invocations:\n      (lastMessage.toolInvocations?.reduce((max, toolInvocation) => {\n        return Math.max(max, toolInvocation.step ?? 0);\n      }, 0) ?? 0)\n    : 0;\n\n  const message: UIMessage = replaceLastMessage\n    ? structuredClone(lastMessage)\n    : {\n        id: generateId(),\n        createdAt: getCurrentDate(),\n        role: 'assistant',\n        content: '',\n        parts: [],\n      };\n\n  let currentTextPart: TextUIPart | undefined = undefined;\n  let currentReasoningPart: ReasoningUIPart | undefined = undefined;\n  let currentReasoningTextDetail:\n    | { type: 'text'; text: string; signature?: string }\n    | undefined = undefined;\n\n  function updateToolInvocationPart(\n    toolCallId: string,\n    invocation: ToolInvocation,\n  ) {\n    const part = message.parts.find(\n      part =>\n        part.type === 'tool-invocation' &&\n        part.toolInvocation.toolCallId === toolCallId,\n    ) as ToolInvocationUIPart | undefined;\n\n    if (part != null) {\n      part.toolInvocation = invocation;\n    } else {\n      message.parts.push({\n        type: 'tool-invocation',\n        toolInvocation: invocation,\n      });\n    }\n  }\n\n  const data: JSONValue[] = [];\n\n  // keep list of current message annotations for message\n  let messageAnnotations: JSONValue[] | undefined = replaceLastMessage\n    ? lastMessage?.annotations\n    : undefined;\n\n  // keep track of partial tool calls\n  const partialToolCalls: Record<\n    string,\n    { text: string; step: number; index: number; toolName: string }\n  > = {};\n\n  let usage: LanguageModelUsage = {\n    completionTokens: NaN,\n    promptTokens: NaN,\n    totalTokens: NaN,\n  };\n  let finishReason: LanguageModelV1FinishReason = 'unknown';\n\n  function execUpdate() {\n    // make a copy of the data array to ensure UI is updated (SWR)\n    const copiedData = [...data];\n\n    // keeps the currentMessage up to date with the latest annotations,\n    // even if annotations preceded the message creation\n    if (messageAnnotations?.length) {\n      message.annotations = messageAnnotations;\n    }\n\n    const copiedMessage = {\n      // deep copy the message to ensure that deep changes (msg attachments) are updated\n      // with SolidJS. SolidJS uses referential integration of sub-objects to detect changes.\n      ...structuredClone(message),\n      // add a revision id to ensure that the message is updated with SWR. SWR uses a\n      // hashing approach by default to detect changes, but it only works for shallow\n      // changes. This is why we need to add a revision id to ensure that the message\n      // is updated with SWR (without it, the changes get stuck in SWR and are not\n      // forwarded to rendering):\n      revisionId: generateId(),\n    } as UIMessage;\n\n    update({\n      message: copiedMessage,\n      data: copiedData,\n      replaceLastMessage,\n    });\n  }\n\n  await processDataStream({\n    stream,\n    onTextPart(value) {\n      if (currentTextPart == null) {\n        currentTextPart = {\n          type: 'text',\n          text: value,\n        };\n        message.parts.push(currentTextPart);\n      } else {\n        currentTextPart.text += value;\n      }\n\n      message.content += value;\n      execUpdate();\n    },\n    onReasoningPart(value) {\n      if (currentReasoningTextDetail == null) {\n        currentReasoningTextDetail = { type: 'text', text: value };\n        if (currentReasoningPart != null) {\n          currentReasoningPart.details.push(currentReasoningTextDetail);\n        }\n      } else {\n        currentReasoningTextDetail.text += value;\n      }\n\n      if (currentReasoningPart == null) {\n        currentReasoningPart = {\n          type: 'reasoning',\n          reasoning: value,\n          details: [currentReasoningTextDetail],\n        };\n        message.parts.push(currentReasoningPart);\n      } else {\n        currentReasoningPart.reasoning += value;\n      }\n\n      message.reasoning = (message.reasoning ?? '') + value;\n\n      execUpdate();\n    },\n    onReasoningSignaturePart(value) {\n      if (currentReasoningTextDetail != null) {\n        currentReasoningTextDetail.signature = value.signature;\n      }\n    },\n    onRedactedReasoningPart(value) {\n      if (currentReasoningPart == null) {\n        currentReasoningPart = {\n          type: 'reasoning',\n          reasoning: '',\n          details: [],\n        };\n        message.parts.push(currentReasoningPart);\n      }\n\n      currentReasoningPart.details.push({\n        type: 'redacted',\n        data: value.data,\n      });\n\n      currentReasoningTextDetail = undefined;\n\n      execUpdate();\n    },\n    onSourcePart(value) {\n      message.parts.push({\n        type: 'source',\n        source: value,\n      });\n\n      execUpdate();\n    },\n    onToolCallStreamingStartPart(value) {\n      if (message.toolInvocations == null) {\n        message.toolInvocations = [];\n      }\n\n      // add the partial tool call to the map\n      partialToolCalls[value.toolCallId] = {\n        text: '',\n        step,\n        toolName: value.toolName,\n        index: message.toolInvocations.length,\n      };\n\n      const invocation = {\n        state: 'partial-call',\n        step,\n        toolCallId: value.toolCallId,\n        toolName: value.toolName,\n        args: undefined,\n      } as const;\n\n      message.toolInvocations.push(invocation);\n\n      updateToolInvocationPart(value.toolCallId, invocation);\n\n      execUpdate();\n    },\n    onToolCallDeltaPart(value) {\n      const partialToolCall = partialToolCalls[value.toolCallId];\n\n      partialToolCall.text += value.argsTextDelta;\n\n      const { value: partialArgs } = parsePartialJson(partialToolCall.text);\n\n      const invocation = {\n        state: 'partial-call',\n        step: partialToolCall.step,\n        toolCallId: value.toolCallId,\n        toolName: partialToolCall.toolName,\n        args: partialArgs,\n      } as const;\n\n      message.toolInvocations![partialToolCall.index] = invocation;\n\n      updateToolInvocationPart(value.toolCallId, invocation);\n\n      execUpdate();\n    },\n    async onToolCallPart(value) {\n      const invocation = {\n        state: 'call',\n        step,\n        ...value,\n      } as const;\n\n      if (partialToolCalls[value.toolCallId] != null) {\n        // change the partial tool call to a full tool call\n        message.toolInvocations![partialToolCalls[value.toolCallId].index] =\n          invocation;\n      } else {\n        if (message.toolInvocations == null) {\n          message.toolInvocations = [];\n        }\n\n        message.toolInvocations.push(invocation);\n      }\n\n      updateToolInvocationPart(value.toolCallId, invocation);\n\n      execUpdate();\n\n      // invoke the onToolCall callback if it exists. This is blocking.\n      // In the future we should make this non-blocking, which\n      // requires additional state management for error handling etc.\n      if (onToolCall) {\n        const result = await onToolCall({ toolCall: value });\n        if (result != null) {\n          const invocation = {\n            state: 'result',\n            step,\n            ...value,\n            result,\n          } as const;\n\n          // store the result in the tool invocation\n          message.toolInvocations![message.toolInvocations!.length - 1] =\n            invocation;\n\n          updateToolInvocationPart(value.toolCallId, invocation);\n\n          execUpdate();\n        }\n      }\n    },\n    onToolResultPart(value) {\n      const toolInvocations = message.toolInvocations;\n\n      if (toolInvocations == null) {\n        throw new Error('tool_result must be preceded by a tool_call');\n      }\n\n      // find if there is any tool invocation with the same toolCallId\n      // and replace it with the result\n      const toolInvocationIndex = toolInvocations.findIndex(\n        invocation => invocation.toolCallId === value.toolCallId,\n      );\n\n      if (toolInvocationIndex === -1) {\n        throw new Error(\n          'tool_result must be preceded by a tool_call with the same toolCallId',\n        );\n      }\n\n      const invocation = {\n        ...toolInvocations[toolInvocationIndex],\n        state: 'result' as const,\n        ...value,\n      } as const;\n\n      toolInvocations[toolInvocationIndex] = invocation;\n\n      updateToolInvocationPart(value.toolCallId, invocation);\n\n      execUpdate();\n    },\n    onDataPart(value) {\n      data.push(...value);\n      execUpdate();\n    },\n    onMessageAnnotationsPart(value) {\n      if (messageAnnotations == null) {\n        messageAnnotations = [...value];\n      } else {\n        messageAnnotations.push(...value);\n      }\n\n      execUpdate();\n    },\n    onFinishStepPart(value) {\n      step += 1;\n\n      // reset the current text and reasoning parts\n      currentTextPart = value.isContinued ? currentTextPart : undefined;\n      currentReasoningPart = undefined;\n      currentReasoningTextDetail = undefined;\n    },\n    onStartStepPart(value) {\n      // keep message id stable when we are updating an existing message:\n      if (!replaceLastMessage) {\n        message.id = value.messageId;\n      }\n    },\n    onFinishMessagePart(value) {\n      finishReason = value.finishReason;\n      if (value.usage != null) {\n        usage = calculateLanguageModelUsage(value.usage);\n      }\n    },\n    onErrorPart(error) {\n      throw new Error(error);\n    },\n  });\n\n  onFinish?.({ message, finishReason, usage });\n}\n","/**\nRepresents the number of tokens used in a prompt and completion.\n */\nexport type LanguageModelUsage = {\n  /**\nThe number of tokens used in the prompt.\n   */\n  promptTokens: number;\n\n  /**\nThe number of tokens used in the completion.\n */\n  completionTokens: number;\n\n  /**\nThe total number of tokens used (promptTokens + completionTokens).\n   */\n  totalTokens: number;\n};\n\n/**\nRepresents the number of tokens used in an embedding.\n */\nexport type EmbeddingModelUsage = {\n  /**\nThe number of tokens used in the embedding.\n   */\n  tokens: number;\n};\n\nexport function calculateLanguageModelUsage({\n  promptTokens,\n  completionTokens,\n}: {\n  promptTokens: number;\n  completionTokens: number;\n}): LanguageModelUsage {\n  return {\n    promptTokens,\n    completionTokens,\n    totalTokens: promptTokens + completionTokens,\n  };\n}\n","import { JSONValue } from '@ai-sdk/provider';\nimport { safeParseJSON } from '@ai-sdk/provider-utils';\nimport { fixJson } from './fix-json';\n\nexport function parsePartialJson(jsonText: string | undefined): {\n  value: JSONValue | undefined;\n  state:\n    | 'undefined-input'\n    | 'successful-parse'\n    | 'repaired-parse'\n    | 'failed-parse';\n} {\n  if (jsonText === undefined) {\n    return { value: undefined, state: 'undefined-input' };\n  }\n\n  let result = safeParseJSON({ text: jsonText });\n\n  if (result.success) {\n    return { value: result.value, state: 'successful-parse' };\n  }\n\n  result = safeParseJSON({ text: fixJson(jsonText) });\n\n  if (result.success) {\n    return { value: result.value, state: 'repaired-parse' };\n  }\n\n  return { value: undefined, state: 'failed-parse' };\n}\n","type State =\n  | 'ROOT'\n  | 'FINISH'\n  | 'INSIDE_STRING'\n  | 'INSIDE_STRING_ESCAPE'\n  | 'INSIDE_LITERAL'\n  | 'INSIDE_NUMBER'\n  | 'INSIDE_OBJECT_START'\n  | 'INSIDE_OBJECT_KEY'\n  | 'INSIDE_OBJECT_AFTER_KEY'\n  | 'INSIDE_OBJECT_BEFORE_VALUE'\n  | 'INSIDE_OBJECT_AFTER_VALUE'\n  | 'INSIDE_OBJECT_AFTER_COMMA'\n  | 'INSIDE_ARRAY_START'\n  | 'INSIDE_ARRAY_AFTER_VALUE'\n  | 'INSIDE_ARRAY_AFTER_COMMA';\n\n// Implemented as a scanner with additional fixing\n// that performs a single linear time scan pass over the partial JSON.\n//\n// The states should ideally match relevant states from the JSON spec:\n// https://www.json.org/json-en.html\n//\n// Please note that invalid JSON is not considered/covered, because it\n// is assumed that the resulting JSON will be processed by a standard\n// JSON parser that will detect any invalid JSON.\nexport function fixJson(input: string): string {\n  const stack: State[] = ['ROOT'];\n  let lastValidIndex = -1;\n  let literalStart: number | null = null;\n\n  function processValueStart(char: string, i: number, swapState: State) {\n    {\n      switch (char) {\n        case '\"': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_STRING');\n          break;\n        }\n\n        case 'f':\n        case 't':\n        case 'n': {\n          lastValidIndex = i;\n          literalStart = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_LITERAL');\n          break;\n        }\n\n        case '-': {\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_NUMBER');\n          break;\n        }\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_NUMBER');\n          break;\n        }\n\n        case '{': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_OBJECT_START');\n          break;\n        }\n\n        case '[': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_ARRAY_START');\n          break;\n        }\n      }\n    }\n  }\n\n  function processAfterObjectValue(char: string, i: number) {\n    switch (char) {\n      case ',': {\n        stack.pop();\n        stack.push('INSIDE_OBJECT_AFTER_COMMA');\n        break;\n      }\n      case '}': {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n\n  function processAfterArrayValue(char: string, i: number) {\n    switch (char) {\n      case ',': {\n        stack.pop();\n        stack.push('INSIDE_ARRAY_AFTER_COMMA');\n        break;\n      }\n      case ']': {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const char = input[i];\n    const currentState = stack[stack.length - 1];\n\n    switch (currentState) {\n      case 'ROOT':\n        processValueStart(char, i, 'FINISH');\n        break;\n\n      case 'INSIDE_OBJECT_START': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_KEY');\n            break;\n          }\n          case '}': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_COMMA': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_KEY');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_KEY': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_AFTER_KEY');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_KEY': {\n        switch (char) {\n          case ':': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_BEFORE_VALUE');\n\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_BEFORE_VALUE': {\n        processValueStart(char, i, 'INSIDE_OBJECT_AFTER_VALUE');\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_VALUE': {\n        processAfterObjectValue(char, i);\n        break;\n      }\n\n      case 'INSIDE_STRING': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            lastValidIndex = i;\n            break;\n          }\n\n          case '\\\\': {\n            stack.push('INSIDE_STRING_ESCAPE');\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_ARRAY_START': {\n        switch (char) {\n          case ']': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n            processValueStart(char, i, 'INSIDE_ARRAY_AFTER_VALUE');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_ARRAY_AFTER_VALUE': {\n        switch (char) {\n          case ',': {\n            stack.pop();\n            stack.push('INSIDE_ARRAY_AFTER_COMMA');\n            break;\n          }\n\n          case ']': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n            break;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_ARRAY_AFTER_COMMA': {\n        processValueStart(char, i, 'INSIDE_ARRAY_AFTER_VALUE');\n        break;\n      }\n\n      case 'INSIDE_STRING_ESCAPE': {\n        stack.pop();\n        lastValidIndex = i;\n\n        break;\n      }\n\n      case 'INSIDE_NUMBER': {\n        switch (char) {\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9': {\n            lastValidIndex = i;\n            break;\n          }\n\n          case 'e':\n          case 'E':\n          case '-':\n          case '.': {\n            break;\n          }\n\n          case ',': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n              processAfterArrayValue(char, i);\n            }\n\n            if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n              processAfterObjectValue(char, i);\n            }\n\n            break;\n          }\n\n          case '}': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n              processAfterObjectValue(char, i);\n            }\n\n            break;\n          }\n\n          case ']': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n              processAfterArrayValue(char, i);\n            }\n\n            break;\n          }\n\n          default: {\n            stack.pop();\n            break;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_LITERAL': {\n        const partialLiteral = input.substring(literalStart!, i + 1);\n\n        if (\n          !'false'.startsWith(partialLiteral) &&\n          !'true'.startsWith(partialLiteral) &&\n          !'null'.startsWith(partialLiteral)\n        ) {\n          stack.pop();\n\n          if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n            processAfterObjectValue(char, i);\n          } else if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n            processAfterArrayValue(char, i);\n          }\n        } else {\n          lastValidIndex = i;\n        }\n\n        break;\n      }\n    }\n  }\n\n  let result = input.slice(0, lastValidIndex + 1);\n\n  for (let i = stack.length - 1; i >= 0; i--) {\n    const state = stack[i];\n\n    switch (state) {\n      case 'INSIDE_STRING': {\n        result += '\"';\n        break;\n      }\n\n      case 'INSIDE_OBJECT_KEY':\n      case 'INSIDE_OBJECT_AFTER_KEY':\n      case 'INSIDE_OBJECT_AFTER_COMMA':\n      case 'INSIDE_OBJECT_START':\n      case 'INSIDE_OBJECT_BEFORE_VALUE':\n      case 'INSIDE_OBJECT_AFTER_VALUE': {\n        result += '}';\n        break;\n      }\n\n      case 'INSIDE_ARRAY_START':\n      case 'INSIDE_ARRAY_AFTER_COMMA':\n      case 'INSIDE_ARRAY_AFTER_VALUE': {\n        result += ']';\n        break;\n      }\n\n      case 'INSIDE_LITERAL': {\n        const partialLiteral = input.substring(literalStart!, input.length);\n\n        if ('true'.startsWith(partialLiteral)) {\n          result += 'true'.slice(partialLiteral.length);\n        } else if ('false'.startsWith(partialLiteral)) {\n          result += 'false'.slice(partialLiteral.length);\n        } else if ('null'.startsWith(partialLiteral)) {\n          result += 'null'.slice(partialLiteral.length);\n        }\n      }\n    }\n  }\n\n  return result;\n}\n","import {\n  LanguageModelV1FinishReason,\n  LanguageModelV1Source,\n} from '@ai-sdk/provider';\nimport { ToolCall, ToolResult } from '@ai-sdk/provider-utils';\nimport { JSONValue } from './types';\n\nexport type DataStreamString =\n  `${(typeof DataStreamStringPrefixes)[keyof typeof DataStreamStringPrefixes]}:${string}\\n`;\n\nexport interface DataStreamPart<\n  CODE extends string,\n  NAME extends string,\n  TYPE,\n> {\n  code: CODE;\n  name: NAME;\n  parse: (value: JSONValue) => { type: NAME; value: TYPE };\n}\n\nconst textStreamPart: DataStreamPart<'0', 'text', string> = {\n  code: '0',\n  name: 'text',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"text\" parts expect a string value.');\n    }\n    return { type: 'text', value };\n  },\n};\n\nconst dataStreamPart: DataStreamPart<'2', 'data', Array<JSONValue>> = {\n  code: '2',\n  name: 'data',\n  parse: (value: JSONValue) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"data\" parts expect an array value.');\n    }\n\n    return { type: 'data', value };\n  },\n};\n\nconst errorStreamPart: DataStreamPart<'3', 'error', string> = {\n  code: '3',\n  name: 'error',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"error\" parts expect a string value.');\n    }\n    return { type: 'error', value };\n  },\n};\n\nconst messageAnnotationsStreamPart: DataStreamPart<\n  '8',\n  'message_annotations',\n  Array<JSONValue>\n> = {\n  code: '8',\n  name: 'message_annotations',\n  parse: (value: JSONValue) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"message_annotations\" parts expect an array value.');\n    }\n\n    return { type: 'message_annotations', value };\n  },\n};\n\nconst toolCallStreamPart: DataStreamPart<\n  '9',\n  'tool_call',\n  ToolCall<string, any>\n> = {\n  code: '9',\n  name: 'tool_call',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('toolName' in value) ||\n      typeof value.toolName !== 'string' ||\n      !('args' in value) ||\n      typeof value.args !== 'object'\n    ) {\n      throw new Error(\n        '\"tool_call\" parts expect an object with a \"toolCallId\", \"toolName\", and \"args\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_call',\n      value: value as unknown as ToolCall<string, any>,\n    };\n  },\n};\n\nconst toolResultStreamPart: DataStreamPart<\n  'a',\n  'tool_result',\n  Omit<ToolResult<string, any, any>, 'args' | 'toolName'>\n> = {\n  code: 'a',\n  name: 'tool_result',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('result' in value)\n    ) {\n      throw new Error(\n        '\"tool_result\" parts expect an object with a \"toolCallId\" and a \"result\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_result',\n      value: value as unknown as Omit<\n        ToolResult<string, any, any>,\n        'args' | 'toolName'\n      >,\n    };\n  },\n};\n\nconst toolCallStreamingStartStreamPart: DataStreamPart<\n  'b',\n  'tool_call_streaming_start',\n  { toolCallId: string; toolName: string }\n> = {\n  code: 'b',\n  name: 'tool_call_streaming_start',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('toolName' in value) ||\n      typeof value.toolName !== 'string'\n    ) {\n      throw new Error(\n        '\"tool_call_streaming_start\" parts expect an object with a \"toolCallId\" and \"toolName\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_call_streaming_start',\n      value: value as unknown as { toolCallId: string; toolName: string },\n    };\n  },\n};\n\nconst toolCallDeltaStreamPart: DataStreamPart<\n  'c',\n  'tool_call_delta',\n  { toolCallId: string; argsTextDelta: string }\n> = {\n  code: 'c',\n  name: 'tool_call_delta',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('argsTextDelta' in value) ||\n      typeof value.argsTextDelta !== 'string'\n    ) {\n      throw new Error(\n        '\"tool_call_delta\" parts expect an object with a \"toolCallId\" and \"argsTextDelta\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_call_delta',\n      value: value as unknown as {\n        toolCallId: string;\n        argsTextDelta: string;\n      },\n    };\n  },\n};\n\nconst finishMessageStreamPart: DataStreamPart<\n  'd',\n  'finish_message',\n  {\n    finishReason: LanguageModelV1FinishReason;\n    // TODO v5 remove usage from finish event (only on step-finish)\n    usage?: {\n      promptTokens: number;\n      completionTokens: number;\n    };\n  }\n> = {\n  code: 'd',\n  name: 'finish_message',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('finishReason' in value) ||\n      typeof value.finishReason !== 'string'\n    ) {\n      throw new Error(\n        '\"finish_message\" parts expect an object with a \"finishReason\" property.',\n      );\n    }\n\n    const result: {\n      finishReason: LanguageModelV1FinishReason;\n      usage?: {\n        promptTokens: number;\n        completionTokens: number;\n      };\n    } = {\n      finishReason: value.finishReason as LanguageModelV1FinishReason,\n    };\n\n    if (\n      'usage' in value &&\n      value.usage != null &&\n      typeof value.usage === 'object' &&\n      'promptTokens' in value.usage &&\n      'completionTokens' in value.usage\n    ) {\n      result.usage = {\n        promptTokens:\n          typeof value.usage.promptTokens === 'number'\n            ? value.usage.promptTokens\n            : Number.NaN,\n        completionTokens:\n          typeof value.usage.completionTokens === 'number'\n            ? value.usage.completionTokens\n            : Number.NaN,\n      };\n    }\n\n    return {\n      type: 'finish_message',\n      value: result,\n    };\n  },\n};\n\nconst finishStepStreamPart: DataStreamPart<\n  'e',\n  'finish_step',\n  {\n    isContinued: boolean;\n    finishReason: LanguageModelV1FinishReason;\n    usage?: {\n      promptTokens: number;\n      completionTokens: number;\n    };\n  }\n> = {\n  code: 'e',\n  name: 'finish_step',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('finishReason' in value) ||\n      typeof value.finishReason !== 'string'\n    ) {\n      throw new Error(\n        '\"finish_step\" parts expect an object with a \"finishReason\" property.',\n      );\n    }\n\n    const result: {\n      isContinued: boolean;\n      finishReason: LanguageModelV1FinishReason;\n      usage?: {\n        promptTokens: number;\n        completionTokens: number;\n      };\n    } = {\n      finishReason: value.finishReason as LanguageModelV1FinishReason,\n      isContinued: false,\n    };\n\n    if (\n      'usage' in value &&\n      value.usage != null &&\n      typeof value.usage === 'object' &&\n      'promptTokens' in value.usage &&\n      'completionTokens' in value.usage\n    ) {\n      result.usage = {\n        promptTokens:\n          typeof value.usage.promptTokens === 'number'\n            ? value.usage.promptTokens\n            : Number.NaN,\n        completionTokens:\n          typeof value.usage.completionTokens === 'number'\n            ? value.usage.completionTokens\n            : Number.NaN,\n      };\n    }\n\n    if ('isContinued' in value && typeof value.isContinued === 'boolean') {\n      result.isContinued = value.isContinued;\n    }\n\n    return {\n      type: 'finish_step',\n      value: result,\n    };\n  },\n};\n\nconst startStepStreamPart: DataStreamPart<\n  'f',\n  'start_step',\n  {\n    messageId: string;\n  }\n> = {\n  code: 'f',\n  name: 'start_step',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('messageId' in value) ||\n      typeof value.messageId !== 'string'\n    ) {\n      throw new Error(\n        '\"start_step\" parts expect an object with an \"id\" property.',\n      );\n    }\n\n    return {\n      type: 'start_step',\n      value: {\n        messageId: value.messageId,\n      },\n    };\n  },\n};\n\nconst reasoningStreamPart: DataStreamPart<'g', 'reasoning', string> = {\n  code: 'g',\n  name: 'reasoning',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"reasoning\" parts expect a string value.');\n    }\n    return { type: 'reasoning', value };\n  },\n};\n\nconst sourcePart: DataStreamPart<'h', 'source', LanguageModelV1Source> = {\n  code: 'h',\n  name: 'source',\n  parse: (value: JSONValue) => {\n    if (value == null || typeof value !== 'object') {\n      throw new Error('\"source\" parts expect a Source object.');\n    }\n\n    return {\n      type: 'source',\n      value: value as LanguageModelV1Source,\n    };\n  },\n};\n\nconst redactedReasoningStreamPart: DataStreamPart<\n  'i',\n  'redacted_reasoning',\n  { data: string }\n> = {\n  code: 'i',\n  name: 'redacted_reasoning',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('data' in value) ||\n      typeof value.data !== 'string'\n    ) {\n      throw new Error(\n        '\"redacted_reasoning\" parts expect an object with a \"data\" property.',\n      );\n    }\n    return { type: 'redacted_reasoning', value: { data: value.data } };\n  },\n};\n\nconst reasoningSignatureStreamPart: DataStreamPart<\n  'j',\n  'reasoning_signature',\n  { signature: string }\n> = {\n  code: 'j',\n  name: 'reasoning_signature',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('signature' in value) ||\n      typeof value.signature !== 'string'\n    ) {\n      throw new Error(\n        '\"reasoning_signature\" parts expect an object with a \"signature\" property.',\n      );\n    }\n    return {\n      type: 'reasoning_signature',\n      value: { signature: value.signature },\n    };\n  },\n};\n\nconst dataStreamParts = [\n  textStreamPart,\n  dataStreamPart,\n  errorStreamPart,\n  messageAnnotationsStreamPart,\n  toolCallStreamPart,\n  toolResultStreamPart,\n  toolCallStreamingStartStreamPart,\n  toolCallDeltaStreamPart,\n  finishMessageStreamPart,\n  finishStepStreamPart,\n  startStepStreamPart,\n  reasoningStreamPart,\n  sourcePart,\n  redactedReasoningStreamPart,\n  reasoningSignatureStreamPart,\n] as const;\n\nexport const dataStreamPartsByCode = Object.fromEntries(\n  dataStreamParts.map(part => [part.code, part]),\n) as {\n  [K in (typeof dataStreamParts)[number]['code']]: (typeof dataStreamParts)[number];\n};\n\ntype DataStreamParts = (typeof dataStreamParts)[number];\n\n/**\n * Maps the type of a stream part to its value type.\n */\ntype DataStreamPartValueType = {\n  [P in DataStreamParts as P['name']]: ReturnType<P['parse']>['value'];\n};\n\nexport type DataStreamPartType = ReturnType<DataStreamParts['parse']>;\n\n/**\n * The map of prefixes for data in the stream\n *\n * - 0: Text from the LLM response\n * - 1: (OpenAI) function_call responses\n * - 2: custom JSON added by the user using `Data`\n * - 6: (OpenAI) tool_call responses\n *\n * Example:\n * ```\n * 0:Vercel\n * 0:'s\n * 0: AI\n * 0: AI\n * 0: SDK\n * 0: is great\n * 0:!\n * 2: { \"someJson\": \"value\" }\n * 1: {\"function_call\": {\"name\": \"get_current_weather\", \"arguments\": \"{\\\\n\\\\\"location\\\\\": \\\\\"Charlottesville, Virginia\\\\\",\\\\n\\\\\"format\\\\\": \\\\\"celsius\\\\\"\\\\n}\"}}\n * 6: {\"tool_call\": {\"id\": \"tool_0\", \"type\": \"function\", \"function\": {\"name\": \"get_current_weather\", \"arguments\": \"{\\\\n\\\\\"location\\\\\": \\\\\"Charlottesville, Virginia\\\\\",\\\\n\\\\\"format\\\\\": \\\\\"celsius\\\\\"\\\\n}\"}}}\n *```\n */\nexport const DataStreamStringPrefixes = Object.fromEntries(\n  dataStreamParts.map(part => [part.name, part.code]),\n) as {\n  [K in DataStreamParts['name']]: (typeof dataStreamParts)[number]['code'];\n};\n\nexport const validCodes = dataStreamParts.map(part => part.code);\n\n/**\nParses a stream part from a string.\n\n@param line The string to parse.\n@returns The parsed stream part.\n@throws An error if the string cannot be parsed.\n */\nexport const parseDataStreamPart = (line: string): DataStreamPartType => {\n  const firstSeparatorIndex = line.indexOf(':');\n\n  if (firstSeparatorIndex === -1) {\n    throw new Error('Failed to parse stream string. No separator found.');\n  }\n\n  const prefix = line.slice(0, firstSeparatorIndex);\n\n  if (!validCodes.includes(prefix as keyof typeof dataStreamPartsByCode)) {\n    throw new Error(`Failed to parse stream string. Invalid code ${prefix}.`);\n  }\n\n  const code = prefix as keyof typeof dataStreamPartsByCode;\n\n  const textValue = line.slice(firstSeparatorIndex + 1);\n  const jsonValue: JSONValue = JSON.parse(textValue);\n\n  return dataStreamPartsByCode[code].parse(jsonValue);\n};\n\n/**\nPrepends a string with a prefix from the `StreamChunkPrefixes`, JSON-ifies it,\nand appends a new line.\n\nIt ensures type-safety for the part type and value.\n */\nexport function formatDataStreamPart<T extends keyof DataStreamPartValueType>(\n  type: T,\n  value: DataStreamPartValueType[T],\n): DataStreamString {\n  const streamPart = dataStreamParts.find(part => part.name === type);\n\n  if (!streamPart) {\n    throw new Error(`Invalid stream part type: ${type}`);\n  }\n\n  return `${streamPart.code}:${JSON.stringify(value)}\\n`;\n}\n","import { DataStreamPartType, parseDataStreamPart } from './data-stream-parts';\n\nconst NEWLINE = '\\n'.charCodeAt(0);\n\n// concatenates all the chunks into a single Uint8Array\nfunction concatChunks(chunks: Uint8Array[], totalLength: number) {\n  const concatenatedChunks = new Uint8Array(totalLength);\n\n  let offset = 0;\n  for (const chunk of chunks) {\n    concatenatedChunks.set(chunk, offset);\n    offset += chunk.length;\n  }\n  chunks.length = 0;\n\n  return concatenatedChunks;\n}\n\nexport async function processDataStream({\n  stream,\n  onTextPart,\n  onReasoningPart,\n  onReasoningSignaturePart,\n  onRedactedReasoningPart,\n  onSourcePart,\n  onDataPart,\n  onErrorPart,\n  onToolCallStreamingStartPart,\n  onToolCallDeltaPart,\n  onToolCallPart,\n  onToolResultPart,\n  onMessageAnnotationsPart,\n  onFinishMessagePart,\n  onFinishStepPart,\n  onStartStepPart,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  onTextPart?: (\n    streamPart: (DataStreamPartType & { type: 'text' })['value'],\n  ) => Promise<void> | void;\n  onReasoningPart?: (\n    streamPart: (DataStreamPartType & { type: 'reasoning' })['value'],\n  ) => Promise<void> | void;\n  onReasoningSignaturePart?: (\n    streamPart: (DataStreamPartType & { type: 'reasoning_signature' })['value'],\n  ) => Promise<void> | void;\n  onRedactedReasoningPart?: (\n    streamPart: (DataStreamPartType & { type: 'redacted_reasoning' })['value'],\n  ) => Promise<void> | void;\n  onSourcePart?: (\n    streamPart: (DataStreamPartType & { type: 'source' })['value'],\n  ) => Promise<void> | void;\n  onDataPart?: (\n    streamPart: (DataStreamPartType & { type: 'data' })['value'],\n  ) => Promise<void> | void;\n  onErrorPart?: (\n    streamPart: (DataStreamPartType & { type: 'error' })['value'],\n  ) => Promise<void> | void;\n  onToolCallStreamingStartPart?: (\n    streamPart: (DataStreamPartType & {\n      type: 'tool_call_streaming_start';\n    })['value'],\n  ) => Promise<void> | void;\n  onToolCallDeltaPart?: (\n    streamPart: (DataStreamPartType & { type: 'tool_call_delta' })['value'],\n  ) => Promise<void> | void;\n  onToolCallPart?: (\n    streamPart: (DataStreamPartType & { type: 'tool_call' })['value'],\n  ) => Promise<void> | void;\n  onToolResultPart?: (\n    streamPart: (DataStreamPartType & { type: 'tool_result' })['value'],\n  ) => Promise<void> | void;\n  onMessageAnnotationsPart?: (\n    streamPart: (DataStreamPartType & {\n      type: 'message_annotations';\n    })['value'],\n  ) => Promise<void> | void;\n  onFinishMessagePart?: (\n    streamPart: (DataStreamPartType & { type: 'finish_message' })['value'],\n  ) => Promise<void> | void;\n  onFinishStepPart?: (\n    streamPart: (DataStreamPartType & { type: 'finish_step' })['value'],\n  ) => Promise<void> | void;\n  onStartStepPart?: (\n    streamPart: (DataStreamPartType & { type: 'start_step' })['value'],\n  ) => Promise<void> | void;\n}): Promise<void> {\n  // implementation note: this slightly more complex algorithm is required\n  // to pass the tests in the edge environment.\n\n  const reader = stream.getReader();\n  const decoder = new TextDecoder();\n  const chunks: Uint8Array[] = [];\n  let totalLength = 0;\n\n  while (true) {\n    const { value } = await reader.read();\n\n    if (value) {\n      chunks.push(value);\n      totalLength += value.length;\n      if (value[value.length - 1] !== NEWLINE) {\n        // if the last character is not a newline, we have not read the whole JSON value\n        continue;\n      }\n    }\n\n    if (chunks.length === 0) {\n      break; // we have reached the end of the stream\n    }\n\n    const concatenatedChunks = concatChunks(chunks, totalLength);\n    totalLength = 0;\n\n    const streamParts = decoder\n      .decode(concatenatedChunks, { stream: true })\n      .split('\\n')\n      .filter(line => line !== '') // splitting leaves an empty string at the end\n      .map(parseDataStreamPart);\n\n    for (const { type, value } of streamParts) {\n      switch (type) {\n        case 'text':\n          await onTextPart?.(value);\n          break;\n        case 'reasoning':\n          await onReasoningPart?.(value);\n          break;\n        case 'reasoning_signature':\n          await onReasoningSignaturePart?.(value);\n          break;\n        case 'redacted_reasoning':\n          await onRedactedReasoningPart?.(value);\n          break;\n        case 'source':\n          await onSourcePart?.(value);\n          break;\n        case 'data':\n          await onDataPart?.(value);\n          break;\n        case 'error':\n          await onErrorPart?.(value);\n          break;\n        case 'message_annotations':\n          await onMessageAnnotationsPart?.(value);\n          break;\n        case 'tool_call_streaming_start':\n          await onToolCallStreamingStartPart?.(value);\n          break;\n        case 'tool_call_delta':\n          await onToolCallDeltaPart?.(value);\n          break;\n        case 'tool_call':\n          await onToolCallPart?.(value);\n          break;\n        case 'tool_result':\n          await onToolResultPart?.(value);\n          break;\n        case 'finish_message':\n          await onFinishMessagePart?.(value);\n          break;\n        case 'finish_step':\n          await onFinishStepPart?.(value);\n          break;\n        case 'start_step':\n          await onStartStepPart?.(value);\n          break;\n        default: {\n          const exhaustiveCheck: never = type;\n          throw new Error(`Unknown stream part type: ${exhaustiveCheck}`);\n        }\n      }\n    }\n  }\n}\n","import { JSONValue } from '@ai-sdk/provider';\nimport { generateId as generateIdFunction } from '@ai-sdk/provider-utils';\nimport { processTextStream } from './process-text-stream';\nimport { TextUIPart, UIMessage, UseChatOptions } from './types';\n\nexport async function processChatTextResponse({\n  stream,\n  update,\n  onFinish,\n  getCurrentDate = () => new Date(),\n  generateId = generateIdFunction,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  update: (options: {\n    message: UIMessage;\n    data: JSONValue[] | undefined;\n    replaceLastMessage: boolean;\n  }) => void;\n  onFinish: UseChatOptions['onFinish'];\n  getCurrentDate?: () => Date;\n  generateId?: () => string;\n}) {\n  const textPart: TextUIPart = { type: 'text', text: '' };\n\n  const resultMessage: UIMessage = {\n    id: generateId(),\n    createdAt: getCurrentDate(),\n    role: 'assistant' as const,\n    content: '',\n    parts: [textPart],\n  };\n\n  await processTextStream({\n    stream,\n    onTextPart: chunk => {\n      resultMessage.content += chunk;\n      textPart.text += chunk;\n\n      // note: creating a new message object is required for Solid.js streaming\n      update({\n        message: { ...resultMessage },\n        data: [],\n        replaceLastMessage: false,\n      });\n    },\n  });\n\n  // in text mode, we don't have usage information or finish reason:\n  onFinish?.(resultMessage, {\n    usage: { completionTokens: NaN, promptTokens: NaN, totalTokens: NaN },\n    finishReason: 'unknown',\n  });\n}\n","export async function processTextStream({\n  stream,\n  onTextPart,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  onTextPart: (chunk: string) => Promise<void> | void;\n}): Promise<void> {\n  const reader = stream.pipeThrough(new TextDecoderStream()).getReader();\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) {\n      break;\n    }\n    await onTextPart(value);\n  }\n}\n","import { processChatResponse } from './process-chat-response';\nimport { processChatTextResponse } from './process-chat-text-response';\nimport { IdGenerator, JSONValue, UIMessage, UseChatOptions } from './types';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => fetch;\n\nexport async function callChatApi({\n  api,\n  body,\n  streamProtocol = 'data',\n  credentials,\n  headers,\n  abortController,\n  restoreMessagesOnFailure,\n  onResponse,\n  onUpdate,\n  onFinish,\n  onToolCall,\n  generateId,\n  fetch = getOriginalFetch(),\n  lastMessage,\n}: {\n  api: string;\n  body: Record<string, any>;\n  streamProtocol: 'data' | 'text' | undefined;\n  credentials: RequestCredentials | undefined;\n  headers: HeadersInit | undefined;\n  abortController: (() => AbortController | null) | undefined;\n  restoreMessagesOnFailure: () => void;\n  onResponse: ((response: Response) => void | Promise<void>) | undefined;\n  onUpdate: (options: {\n    message: UIMessage;\n    data: JSONValue[] | undefined;\n    replaceLastMessage: boolean;\n  }) => void;\n  onFinish: UseChatOptions['onFinish'];\n  onToolCall: UseChatOptions['onToolCall'];\n  generateId: IdGenerator;\n  fetch: ReturnType<typeof getOriginalFetch> | undefined;\n  lastMessage: UIMessage | undefined;\n}) {\n  const response = await fetch(api, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    signal: abortController?.()?.signal,\n    credentials,\n  }).catch(err => {\n    restoreMessagesOnFailure();\n    throw err;\n  });\n\n  if (onResponse) {\n    try {\n      await onResponse(response);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  if (!response.ok) {\n    restoreMessagesOnFailure();\n    throw new Error(\n      (await response.text()) ?? 'Failed to fetch the chat response.',\n    );\n  }\n\n  if (!response.body) {\n    throw new Error('The response body is empty.');\n  }\n\n  switch (streamProtocol) {\n    case 'text': {\n      await processChatTextResponse({\n        stream: response.body,\n        update: onUpdate,\n        onFinish,\n        generateId,\n      });\n      return;\n    }\n\n    case 'data': {\n      await processChatResponse({\n        stream: response.body,\n        update: onUpdate,\n        lastMessage,\n        onToolCall,\n        onFinish({ message, finishReason, usage }) {\n          if (onFinish && message != null) {\n            onFinish(message, { usage, finishReason });\n          }\n        },\n        generateId,\n      });\n      return;\n    }\n\n    default: {\n      const exhaustiveCheck: never = streamProtocol;\n      throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n    }\n  }\n}\n","import { processTextStream } from './process-text-stream';\nimport { processDataStream } from './process-data-stream';\nimport { JSONValue } from './types';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => fetch;\n\nexport async function callCompletionApi({\n  api,\n  prompt,\n  credentials,\n  headers,\n  body,\n  streamProtocol = 'data',\n  setCompletion,\n  setLoading,\n  setError,\n  setAbortController,\n  onResponse,\n  onFinish,\n  onError,\n  onData,\n  fetch = getOriginalFetch(),\n}: {\n  api: string;\n  prompt: string;\n  credentials: RequestCredentials | undefined;\n  headers: HeadersInit | undefined;\n  body: Record<string, any>;\n  streamProtocol: 'data' | 'text' | undefined;\n  setCompletion: (completion: string) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: Error | undefined) => void;\n  setAbortController: (abortController: AbortController | null) => void;\n  onResponse: ((response: Response) => void | Promise<void>) | undefined;\n  onFinish: ((prompt: string, completion: string) => void) | undefined;\n  onError: ((error: Error) => void) | undefined;\n  onData: ((data: JSONValue[]) => void) | undefined;\n  fetch: ReturnType<typeof getOriginalFetch> | undefined;\n}) {\n  try {\n    setLoading(true);\n    setError(undefined);\n\n    const abortController = new AbortController();\n    setAbortController(abortController);\n\n    // Empty the completion immediately.\n    setCompletion('');\n\n    const response = await fetch(api, {\n      method: 'POST',\n      body: JSON.stringify({\n        prompt,\n        ...body,\n      }),\n      credentials,\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers,\n      },\n      signal: abortController.signal,\n    }).catch(err => {\n      throw err;\n    });\n\n    if (onResponse) {\n      try {\n        await onResponse(response);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    if (!response.ok) {\n      throw new Error(\n        (await response.text()) ?? 'Failed to fetch the chat response.',\n      );\n    }\n\n    if (!response.body) {\n      throw new Error('The response body is empty.');\n    }\n\n    let result = '';\n\n    switch (streamProtocol) {\n      case 'text': {\n        await processTextStream({\n          stream: response.body,\n          onTextPart: chunk => {\n            result += chunk;\n            setCompletion(result);\n          },\n        });\n        break;\n      }\n      case 'data': {\n        await processDataStream({\n          stream: response.body,\n          onTextPart(value) {\n            result += value;\n            setCompletion(result);\n          },\n          onDataPart(value) {\n            onData?.(value);\n          },\n          onErrorPart(value) {\n            throw new Error(value);\n          },\n        });\n        break;\n      }\n      default: {\n        const exhaustiveCheck: never = streamProtocol;\n        throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n      }\n    }\n\n    if (onFinish) {\n      onFinish(prompt, result);\n    }\n\n    setAbortController(null);\n    return result;\n  } catch (err) {\n    // Ignore abort errors as they are expected.\n    if ((err as any).name === 'AbortError') {\n      setAbortController(null);\n      return null;\n    }\n\n    if (err instanceof Error) {\n      if (onError) {\n        onError(err);\n      }\n    }\n\n    setError(err as Error);\n  } finally {\n    setLoading(false);\n  }\n}\n","/**\n * Converts a data URL of type text/* to a text string.\n */\nexport function getTextFromDataUrl(dataUrl: string): string {\n  const [header, base64Content] = dataUrl.split(',');\n  const mimeType = header.split(';')[0].split(':')[1];\n\n  if (mimeType == null || base64Content == null) {\n    throw new Error('Invalid data URL format');\n  }\n\n  try {\n    return window.atob(base64Content);\n  } catch (error) {\n    throw new Error(`Error decoding data URL`);\n  }\n}\n","import { ToolInvocation } from './types';\n\nexport function extractMaxToolInvocationStep(\n  toolInvocations: ToolInvocation[] | undefined,\n): number | undefined {\n  return toolInvocations?.reduce((max, toolInvocation) => {\n    return Math.max(max, toolInvocation.step ?? 0);\n  }, 0);\n}\n","import {\n  CreateMessage,\n  Message,\n  ReasoningUIPart,\n  SourceUIPart,\n  TextUIPart,\n  ToolInvocationUIPart,\n  UIMessage,\n} from './types';\n\nexport function getMessageParts(\n  message: Message | CreateMessage | UIMessage,\n): (TextUIPart | ReasoningUIPart | ToolInvocationUIPart | SourceUIPart)[] {\n  return (\n    message.parts ?? [\n      ...(message.toolInvocations\n        ? message.toolInvocations.map(toolInvocation => ({\n            type: 'tool-invocation' as const,\n            toolInvocation,\n          }))\n        : []),\n      ...(message.reasoning\n        ? [\n            {\n              type: 'reasoning' as const,\n              reasoning: message.reasoning,\n              details: [{ type: 'text' as const, text: message.reasoning }],\n            },\n          ]\n        : []),\n      ...(message.content\n        ? [{ type: 'text' as const, text: message.content }]\n        : []),\n    ]\n  );\n}\n","import { getMessageParts } from './get-message-parts';\nimport { Message, UIMessage } from './types';\n\nexport function fillMessageParts(messages: Message[]): UIMessage[] {\n  return messages.map(message => ({\n    ...message,\n    parts: getMessageParts(message),\n  }));\n}\n","/**\n * Performs a deep-equal comparison of two parsed JSON objects.\n *\n * @param {any} obj1 - The first object to compare.\n * @param {any} obj2 - The second object to compare.\n * @returns {boolean} - Returns true if the two objects are deeply equal, false otherwise.\n */\nexport function isDeepEqualData(obj1: any, obj2: any): boolean {\n  // Check for strict equality first\n  if (obj1 === obj2) return true;\n\n  // Check if either is null or undefined\n  if (obj1 == null || obj2 == null) return false;\n\n  // Check if both are objects\n  if (typeof obj1 !== 'object' && typeof obj2 !== 'object')\n    return obj1 === obj2;\n\n  // If they are not strictly equal, they both need to be Objects\n  if (obj1.constructor !== obj2.constructor) return false;\n\n  // Special handling for Date objects\n  if (obj1 instanceof Date && obj2 instanceof Date) {\n    return obj1.getTime() === obj2.getTime();\n  }\n\n  // Handle arrays: compare length and then perform a recursive deep comparison on each item\n  if (Array.isArray(obj1)) {\n    if (obj1.length !== obj2.length) return false;\n    for (let i = 0; i < obj1.length; i++) {\n      if (!isDeepEqualData(obj1[i], obj2[i])) return false;\n    }\n    return true; // All array elements matched\n  }\n\n  // Compare the set of keys in each object\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  if (keys1.length !== keys2.length) return false;\n\n  // Check each key-value pair recursively\n  for (const key of keys1) {\n    if (!keys2.includes(key)) return false;\n    if (!isDeepEqualData(obj1[key], obj2[key])) return false;\n  }\n\n  return true; // All keys and values matched\n}\n","import { Attachment } from './types';\n\nexport async function prepareAttachmentsForRequest(\n  attachmentsFromOptions: FileList | Array<Attachment> | undefined,\n) {\n  if (!attachmentsFromOptions) {\n    return [];\n  }\n\n  if (attachmentsFromOptions instanceof FileList) {\n    return Promise.all(\n      Array.from(attachmentsFromOptions).map(async attachment => {\n        const { name, type } = attachment;\n\n        const dataUrl = await new Promise<string>((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onload = readerEvent => {\n            resolve(readerEvent.target?.result as string);\n          };\n          reader.onerror = error => reject(error);\n          reader.readAsDataURL(attachment);\n        });\n\n        return {\n          name,\n          contentType: type,\n          url: dataUrl,\n        };\n      }),\n    );\n  }\n\n  if (Array.isArray(attachmentsFromOptions)) {\n    return attachmentsFromOptions;\n  }\n\n  throw new Error('Invalid attachments type');\n}\n","import {\n  AssistantStreamPartType,\n  parseAssistantStreamPart,\n} from './assistant-stream-parts';\n\nconst NEWLINE = '\\n'.charCodeAt(0);\n\n// concatenates all the chunks into a single Uint8Array\nfunction concatChunks(chunks: Uint8Array[], totalLength: number) {\n  const concatenatedChunks = new Uint8Array(totalLength);\n\n  let offset = 0;\n  for (const chunk of chunks) {\n    concatenatedChunks.set(chunk, offset);\n    offset += chunk.length;\n  }\n  chunks.length = 0;\n\n  return concatenatedChunks;\n}\n\nexport async function processAssistantStream({\n  stream,\n  onTextPart,\n  onErrorPart,\n  onAssistantMessagePart,\n  onAssistantControlDataPart,\n  onDataMessagePart,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  onTextPart?: (\n    streamPart: (AssistantStreamPartType & { type: 'text' })['value'],\n  ) => Promise<void> | void;\n  onErrorPart?: (\n    streamPart: (AssistantStreamPartType & { type: 'error' })['value'],\n  ) => Promise<void> | void;\n  onAssistantMessagePart?: (\n    streamPart: (AssistantStreamPartType & {\n      type: 'assistant_message';\n    })['value'],\n  ) => Promise<void> | void;\n  onAssistantControlDataPart?: (\n    streamPart: (AssistantStreamPartType & {\n      type: 'assistant_control_data';\n    })['value'],\n  ) => Promise<void> | void;\n  onDataMessagePart?: (\n    streamPart: (AssistantStreamPartType & { type: 'data_message' })['value'],\n  ) => Promise<void> | void;\n}): Promise<void> {\n  // implementation note: this slightly more complex algorithm is required\n  // to pass the tests in the edge environment.\n\n  const reader = stream.getReader();\n  const decoder = new TextDecoder();\n  const chunks: Uint8Array[] = [];\n  let totalLength = 0;\n\n  while (true) {\n    const { value } = await reader.read();\n\n    if (value) {\n      chunks.push(value);\n      totalLength += value.length;\n      if (value[value.length - 1] !== NEWLINE) {\n        // if the last character is not a newline, we have not read the whole JSON value\n        continue;\n      }\n    }\n\n    if (chunks.length === 0) {\n      break; // we have reached the end of the stream\n    }\n\n    const concatenatedChunks = concatChunks(chunks, totalLength);\n    totalLength = 0;\n\n    const streamParts = decoder\n      .decode(concatenatedChunks, { stream: true })\n      .split('\\n')\n      .filter(line => line !== '')\n      .map(parseAssistantStreamPart);\n\n    for (const { type, value } of streamParts) {\n      switch (type) {\n        case 'text':\n          await onTextPart?.(value);\n          break;\n        case 'error':\n          await onErrorPart?.(value);\n          break;\n        case 'assistant_message':\n          await onAssistantMessagePart?.(value);\n          break;\n        case 'assistant_control_data':\n          await onAssistantControlDataPart?.(value);\n          break;\n        case 'data_message':\n          await onDataMessagePart?.(value);\n          break;\n        default: {\n          const exhaustiveCheck: never = type;\n          throw new Error(`Unknown stream part type: ${exhaustiveCheck}`);\n        }\n      }\n    }\n  }\n}\n","import { Validator, validatorSymbol } from '@ai-sdk/provider-utils';\nimport { JSONSchema7 } from 'json-schema';\nimport { z } from 'zod';\nimport { zodSchema } from './zod-schema';\n\n/**\n * Used to mark schemas so we can support both Zod and custom schemas.\n */\nconst schemaSymbol = Symbol.for('vercel.ai.schema');\n\nexport type Schema<OBJECT = unknown> = Validator<OBJECT> & {\n  /**\n   * Used to mark schemas so we can support both Zod and custom schemas.\n   */\n  [schemaSymbol]: true;\n\n  /**\n   * Schema type for inference.\n   */\n  _type: OBJECT;\n\n  /**\n   * The JSON Schema for the schema. It is passed to the providers.\n   */\n  readonly jsonSchema: JSONSchema7;\n};\n\n/**\n * Create a schema using a JSON Schema.\n *\n * @param jsonSchema The JSON Schema for the schema.\n * @param options.validate Optional. A validation function for the schema.\n */\nexport function jsonSchema<OBJECT = unknown>(\n  jsonSchema: JSONSchema7,\n  {\n    validate,\n  }: {\n    validate?: (\n      value: unknown,\n    ) => { success: true; value: OBJECT } | { success: false; error: Error };\n  } = {},\n): Schema<OBJECT> {\n  return {\n    [schemaSymbol]: true,\n    _type: undefined as OBJECT, // should never be used directly\n    [validatorSymbol]: true,\n    jsonSchema,\n    validate,\n  };\n}\n\nfunction isSchema(value: unknown): value is Schema {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    schemaSymbol in value &&\n    value[schemaSymbol] === true &&\n    'jsonSchema' in value &&\n    'validate' in value\n  );\n}\n\nexport function asSchema<OBJECT>(\n  schema: z.Schema<OBJECT, z.ZodTypeDef, any> | Schema<OBJECT>,\n): Schema<OBJECT> {\n  return isSchema(schema) ? schema : zodSchema(schema);\n}\n","import { JSONSchema7 } from 'json-schema';\nimport { z } from 'zod';\nimport zodToJsonSchema from 'zod-to-json-schema';\nimport { jsonSchema, Schema } from './schema';\n\nexport function zodSchema<OBJECT>(\n  zodSchema: z.Schema<OBJECT, z.ZodTypeDef, any>,\n  options?: {\n    /**\n     * Enables support for references in the schema.\n     * This is required for recursive schemas, e.g. with `z.lazy`.\n     * However, not all language models and providers support such references.\n     * Defaults to `false`.\n     */\n    useReferences?: boolean;\n  },\n): Schema<OBJECT> {\n  // default to no references (to support openapi conversion for google)\n  const useReferences = options?.useReferences ?? false;\n\n  return jsonSchema(\n    zodToJsonSchema(zodSchema, {\n      $refStrategy: useReferences ? 'root' : 'none',\n      target: 'jsonSchema7', // note: openai mode breaks various gemini conversions\n    }) as JSONSchema7,\n    {\n      validate: value => {\n        const result = zodSchema.safeParse(value);\n        return result.success\n          ? { success: true, value: result.data }\n          : { success: false, error: result.error };\n      },\n    },\n  );\n}\n","import { extractMaxToolInvocationStep } from './extract-max-tool-invocation-step';\nimport { UIMessage } from './types';\n\nexport function shouldResubmitMessages({\n  originalMaxToolInvocationStep,\n  originalMessageCount,\n  maxSteps,\n  messages,\n}: {\n  originalMaxToolInvocationStep: number | undefined;\n  originalMessageCount: number;\n  maxSteps: number;\n  messages: UIMessage[];\n}) {\n  const lastMessage = messages[messages.length - 1];\n  return (\n    // check if the feature is enabled:\n    maxSteps > 1 &&\n    // ensure there is a last message:\n    lastMessage != null &&\n    // ensure we actually have new steps (to prevent infinite loops in case of errors):\n    (messages.length > originalMessageCount ||\n      extractMaxToolInvocationStep(lastMessage.toolInvocations) !==\n        originalMaxToolInvocationStep) &&\n    // check that next step is possible:\n    isAssistantMessageWithCompletedToolCalls(lastMessage) &&\n    // check that assistant has not answered yet:\n    !isLastToolInvocationFollowedByText(lastMessage) &&\n    // limit the number of automatic steps:\n    (extractMaxToolInvocationStep(lastMessage.toolInvocations) ?? 0) < maxSteps\n  );\n}\n\nfunction isLastToolInvocationFollowedByText(message: UIMessage) {\n  let isLastToolInvocationFollowedByText = false;\n\n  message.parts.forEach(part => {\n    if (part.type === 'text') {\n      isLastToolInvocationFollowedByText = true;\n    }\n    if (part.type === 'tool-invocation') {\n      isLastToolInvocationFollowedByText = false;\n    }\n  });\n  return isLastToolInvocationFollowedByText;\n}\n\n/**\nCheck if the message is an assistant message with completed tool calls.\nThe message must have at least one tool invocation and all tool invocations\nmust have a result.\n */\nexport function isAssistantMessageWithCompletedToolCalls(\n  message: UIMessage,\n): message is UIMessage & {\n  role: 'assistant';\n} {\n  return (\n    message.role === 'assistant' &&\n    message.parts\n      .filter(part => part.type === 'tool-invocation')\n      .every(part => 'result' in part.toolInvocation)\n  );\n}\n","import { ToolInvocationUIPart, UIMessage } from './types';\n\n/**\n * Updates the result of a specific tool invocation in the last message of the given messages array.\n *\n * @param {object} params - The parameters object.\n * @param {UIMessage[]} params.messages - An array of messages, from which the last one is updated.\n * @param {string} params.toolCallId - The unique identifier for the tool invocation to update.\n * @param {unknown} params.toolResult - The result object to attach to the tool invocation.\n * @returns {void} This function does not return anything.\n */\nexport function updateToolCallResult({\n  messages,\n  toolCallId,\n  toolResult: result,\n}: {\n  messages: UIMessage[];\n  toolCallId: string;\n  toolResult: unknown;\n}) {\n  const lastMessage = messages[messages.length - 1];\n\n  const invocationPart = lastMessage.parts.find(\n    (part): part is ToolInvocationUIPart =>\n      part.type === 'tool-invocation' &&\n      part.toolInvocation.toolCallId === toolCallId,\n  );\n\n  if (invocationPart == null) {\n    return;\n  }\n\n  const toolResult = {\n    ...invocationPart.toolInvocation,\n    state: 'result' as const,\n    result,\n  };\n\n  invocationPart.toolInvocation = toolResult;\n\n  lastMessage.toolInvocations = lastMessage.toolInvocations?.map(\n    toolInvocation =>\n      toolInvocation.toolCallId === toolCallId ? toolResult : toolInvocation,\n  );\n}\n"],"names":["textStreamPart","errorStreamPart","validCodes","value","generateId","_a","part","invocation","generateIdFunction","generateId","generateIdFunction","generateId","fetch","getOriginalFetch","fetch","NEWLINE","concatChunks","value","zodSchema","jsonSchema","isLastToolInvocationFollowedByText"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"debugId":null}},
    {"offset": {"line": 9448, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/index.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/data-stream/create-data-stream.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/prepare-response-headers.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/data-stream/create-data-stream-response.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/prepare-outgoing-http-headers.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/write-to-server-response.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/data-stream/pipe-data-stream-to-response.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/invalid-argument-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/util/retry-with-exponential-backoff.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/util/retry-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/prepare-retries.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/telemetry/assemble-operation-name.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/telemetry/get-base-telemetry-attributes.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/telemetry/get-tracer.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/telemetry/noop-tracer.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/telemetry/record-span.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/telemetry/select-telemetry-attributes.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/embed/embed.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/split-array.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/embed/embed-many.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-image/generate-image.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/no-image-generated-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-object/generate-object.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/no-object-generated-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/util/download-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/util/download.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/detect-image-mimetype.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/data-content.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/invalid-data-content-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/invalid-message-role-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/split-data-url.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/convert-to-language-model-prompt.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/prepare-call-settings.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/standardize-prompt.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/attachments-to-parts.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/message-conversion-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/convert-to-core-messages.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/detect-prompt-type.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/message.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/types/provider-metadata.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/types/json-value.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/content-part.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/tool-result-content.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/types/usage.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-object/inject-json-instruction.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-object/output-strategy.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/async-iterable-stream.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-object/validate-object-generation-input.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-object/stream-object.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/util/delayed-promise.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/util/create-resolvable-promise.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/create-stitchable-stream.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/now.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-text/generate-text.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/no-output-specified-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/tool-execution-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/prepare-tools-and-tool-choice.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/is-non-empty-object.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/split-on-last-whitespace.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/remove-text-after-last-whitespace.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-text/parse-tool-call.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/invalid-tool-arguments-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/no-such-tool-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/tool-call-repair-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-text/reasoning-detail.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-text/to-response-messages.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-text/output.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/index.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/invalid-stream-part-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/errors/mcp-client-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-text/smooth-stream.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-text/stream-text.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/util/as-array.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/merge-streams.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/generate-text/run-tools-transformation.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/merge-objects.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/middleware/default-settings-middleware.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/get-potential-start-index.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/middleware/extract-reasoning-middleware.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/middleware/simulate-streaming-middleware.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/middleware/wrap-language-model.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/append-client-message.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/prompt/append-response-messages.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/registry/custom-provider.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/registry/no-such-provider-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/registry/provider-registry.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/tool/mcp/mcp-client.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/tool/tool.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/tool/mcp/create-child-process.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/tool/mcp/types.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/tool/mcp/mcp-stdio-transport.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/tool/mcp/mcp-sse-transport.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/tool/mcp/mcp-transport.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/cosine-similarity.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/core/util/simulate-readable-stream.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/streams/assistant-response.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/streams/langchain-adapter.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/streams/stream-callbacks.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/streams/llamaindex-adapter.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/streams/stream-data.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/ai/util/constants.ts"],"sourcesContent":["// re-exports:\nexport { createIdGenerator, generateId } from '@ai-sdk/provider-utils';\nexport type { IDGenerator } from '@ai-sdk/provider-utils';\nexport {\n  formatAssistantStreamPart,\n  formatDataStreamPart,\n  jsonSchema,\n  parseAssistantStreamPart,\n  parseDataStreamPart,\n  processDataStream,\n  processTextStream,\n  zodSchema,\n} from '@ai-sdk/ui-utils';\nexport type {\n  AssistantMessage,\n  AssistantStatus,\n  Attachment,\n  ChatRequest,\n  ChatRequestOptions,\n  CreateMessage,\n  DataMessage,\n  DataStreamPart,\n  DeepPartial,\n  IdGenerator,\n  JSONValue,\n  Message,\n  UIMessage,\n  RequestOptions,\n  Schema,\n  ToolInvocation,\n  UseAssistantOptions,\n} from '@ai-sdk/ui-utils';\n\n// directory exports:\nexport * from './data-stream';\nexport * from './embed';\nexport * from './generate-image';\nexport * from './generate-object';\nexport * from './generate-text';\nexport * from './middleware';\nexport * from './prompt';\nexport * from './registry';\nexport * from './tool';\nexport * from './types';\n\n// telemetry types:\nexport type { TelemetrySettings } from './telemetry/telemetry-settings';\n\n// util exports:\nexport { cosineSimilarity } from './util/cosine-similarity';\nexport { simulateReadableStream } from './util/simulate-readable-stream';\n","import { DataStreamString, formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { DataStreamWriter } from './data-stream-writer';\n\nexport function createDataStream({\n  execute,\n  onError = () => 'An error occurred.', // mask error messages for safety by default\n}: {\n  execute: (dataStream: DataStreamWriter) => Promise<void> | void;\n  onError?: (error: unknown) => string;\n}): ReadableStream<DataStreamString> {\n  let controller!: ReadableStreamDefaultController<string>;\n\n  const ongoingStreamPromises: Promise<void>[] = [];\n\n  const stream = new ReadableStream({\n    start(controllerArg) {\n      controller = controllerArg;\n    },\n  });\n\n  function safeEnqueue(data: DataStreamString) {\n    try {\n      controller.enqueue(data);\n    } catch (error) {\n      // suppress errors when the stream has been closed\n    }\n  }\n\n  try {\n    const result = execute({\n      write(data: DataStreamString) {\n        safeEnqueue(data);\n      },\n      writeData(data) {\n        safeEnqueue(formatDataStreamPart('data', [data]));\n      },\n      writeMessageAnnotation(annotation) {\n        safeEnqueue(formatDataStreamPart('message_annotations', [annotation]));\n      },\n      writeSource(source) {\n        safeEnqueue(formatDataStreamPart('source', source));\n      },\n      merge(streamArg) {\n        ongoingStreamPromises.push(\n          (async () => {\n            const reader = streamArg.getReader();\n            while (true) {\n              const { done, value } = await reader.read();\n              if (done) break;\n              safeEnqueue(value);\n            }\n          })().catch(error => {\n            safeEnqueue(formatDataStreamPart('error', onError(error)));\n          }),\n        );\n      },\n      onError,\n    });\n\n    if (result) {\n      ongoingStreamPromises.push(\n        result.catch(error => {\n          safeEnqueue(formatDataStreamPart('error', onError(error)));\n        }),\n      );\n    }\n  } catch (error) {\n    safeEnqueue(formatDataStreamPart('error', onError(error)));\n  }\n\n  // Wait until all ongoing streams are done. This approach enables merging\n  // streams even after execute has returned, as long as there is still an\n  // open merged stream. This is important to e.g. forward new streams and\n  // from callbacks.\n  const waitForStreams: Promise<void> = new Promise(async resolve => {\n    while (ongoingStreamPromises.length > 0) {\n      await ongoingStreamPromises.shift();\n    }\n    resolve();\n  });\n\n  waitForStreams.finally(() => {\n    try {\n      controller.close();\n    } catch (error) {\n      // suppress errors when the stream has been closed\n    }\n  });\n\n  return stream;\n}\n","export function prepareResponseHeaders(\n  headers: HeadersInit | undefined,\n  {\n    contentType,\n    dataStreamVersion,\n  }: { contentType: string; dataStreamVersion?: 'v1' | undefined },\n) {\n  const responseHeaders = new Headers(headers ?? {});\n\n  if (!responseHeaders.has('Content-Type')) {\n    responseHeaders.set('Content-Type', contentType);\n  }\n\n  if (dataStreamVersion !== undefined) {\n    responseHeaders.set('X-Vercel-AI-Data-Stream', dataStreamVersion);\n  }\n\n  return responseHeaders;\n}\n","import { prepareResponseHeaders } from '../util/prepare-response-headers';\nimport { createDataStream } from './create-data-stream';\nimport { DataStreamWriter } from './data-stream-writer';\n\nexport function createDataStreamResponse({\n  status,\n  statusText,\n  headers,\n  execute,\n  onError,\n}: ResponseInit & {\n  execute: (dataStream: DataStreamWriter) => Promise<void> | void;\n  onError?: (error: unknown) => string;\n}): Response {\n  return new Response(\n    createDataStream({ execute, onError }).pipeThrough(new TextEncoderStream()),\n    {\n      status,\n      statusText,\n      headers: prepareResponseHeaders(headers, {\n        contentType: 'text/plain; charset=utf-8',\n        dataStreamVersion: 'v1',\n      }),\n    },\n  );\n}\n","export function prepareOutgoingHttpHeaders(\n  headers: HeadersInit | undefined,\n  {\n    contentType,\n    dataStreamVersion,\n  }: { contentType: string; dataStreamVersion?: 'v1' | undefined },\n) {\n  const outgoingHeaders: Record<string, string | number | string[]> = {};\n\n  if (headers != null) {\n    for (const [key, value] of Object.entries(headers)) {\n      outgoingHeaders[key] = value;\n    }\n  }\n\n  if (outgoingHeaders['Content-Type'] == null) {\n    outgoingHeaders['Content-Type'] = contentType;\n  }\n\n  if (dataStreamVersion !== undefined) {\n    outgoingHeaders['X-Vercel-AI-Data-Stream'] = dataStreamVersion;\n  }\n\n  return outgoingHeaders;\n}\n","import { ServerResponse } from 'node:http';\n\n/**\n * Writes the content of a stream to a server response.\n */\nexport function writeToServerResponse({\n  response,\n  status,\n  statusText,\n  headers,\n  stream,\n}: {\n  response: ServerResponse;\n  status?: number;\n  statusText?: string;\n  headers?: Record<string, string | number | string[]>;\n  stream: ReadableStream<Uint8Array>;\n}): void {\n  response.writeHead(status ?? 200, statusText, headers);\n\n  const reader = stream.getReader();\n  const read = async () => {\n    try {\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        response.write(value);\n      }\n    } catch (error) {\n      throw error;\n    } finally {\n      response.end();\n    }\n  };\n\n  read();\n}\n","import { ServerResponse } from 'node:http';\nimport { prepareOutgoingHttpHeaders } from '../util/prepare-outgoing-http-headers';\nimport { writeToServerResponse } from '../util/write-to-server-response';\nimport { createDataStream } from './create-data-stream';\nimport { DataStreamWriter } from './data-stream-writer';\n\nexport function pipeDataStreamToResponse(\n  response: ServerResponse,\n  {\n    status,\n    statusText,\n    headers,\n    execute,\n    onError,\n  }: ResponseInit & {\n    execute: (writer: DataStreamWriter) => Promise<void> | void;\n    onError?: (error: unknown) => string;\n  },\n): void {\n  writeToServerResponse({\n    response,\n    status,\n    statusText,\n    headers: prepareOutgoingHttpHeaders(headers, {\n      contentType: 'text/plain; charset=utf-8',\n      dataStreamVersion: 'v1',\n    }),\n    stream: createDataStream({ execute, onError }).pipeThrough(\n      new TextEncoderStream(),\n    ),\n  });\n}\n","import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidArgumentError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidArgumentError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly parameter: string;\n  readonly value: unknown;\n\n  constructor({\n    parameter,\n    value,\n    message,\n  }: {\n    parameter: string;\n    value: unknown;\n    message: string;\n  }) {\n    super({\n      name,\n      message: `Invalid argument for parameter ${parameter}: ${message}`,\n    });\n\n    this.parameter = parameter;\n    this.value = value;\n  }\n\n  static isInstance(error: unknown): error is InvalidArgumentError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { APICallError } from '@ai-sdk/provider';\nimport { delay, getErrorMessage, isAbortError } from '@ai-sdk/provider-utils';\nimport { RetryError } from './retry-error';\n\nexport type RetryFunction = <OUTPUT>(\n  fn: () => PromiseLike<OUTPUT>,\n) => PromiseLike<OUTPUT>;\n\n/**\nThe `retryWithExponentialBackoff` strategy retries a failed API call with an exponential backoff.\nYou can configure the maximum number of retries, the initial delay, and the backoff factor.\n */\nexport const retryWithExponentialBackoff =\n  ({\n    maxRetries = 2,\n    initialDelayInMs = 2000,\n    backoffFactor = 2,\n  } = {}): RetryFunction =>\n  async <OUTPUT>(f: () => PromiseLike<OUTPUT>) =>\n    _retryWithExponentialBackoff(f, {\n      maxRetries,\n      delayInMs: initialDelayInMs,\n      backoffFactor,\n    });\n\nasync function _retryWithExponentialBackoff<OUTPUT>(\n  f: () => PromiseLike<OUTPUT>,\n  {\n    maxRetries,\n    delayInMs,\n    backoffFactor,\n  }: { maxRetries: number; delayInMs: number; backoffFactor: number },\n  errors: unknown[] = [],\n): Promise<OUTPUT> {\n  try {\n    return await f();\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error; // don't retry when the request was aborted\n    }\n\n    if (maxRetries === 0) {\n      throw error; // don't wrap the error when retries are disabled\n    }\n\n    const errorMessage = getErrorMessage(error);\n    const newErrors = [...errors, error];\n    const tryNumber = newErrors.length;\n\n    if (tryNumber > maxRetries) {\n      throw new RetryError({\n        message: `Failed after ${tryNumber} attempts. Last error: ${errorMessage}`,\n        reason: 'maxRetriesExceeded',\n        errors: newErrors,\n      });\n    }\n\n    if (\n      error instanceof Error &&\n      APICallError.isInstance(error) &&\n      error.isRetryable === true &&\n      tryNumber <= maxRetries\n    ) {\n      await delay(delayInMs);\n      return _retryWithExponentialBackoff(\n        f,\n        { maxRetries, delayInMs: backoffFactor * delayInMs, backoffFactor },\n        newErrors,\n      );\n    }\n\n    if (tryNumber === 1) {\n      throw error; // don't wrap the error when a non-retryable error occurs on the first try\n    }\n\n    throw new RetryError({\n      message: `Failed after ${tryNumber} attempts with non-retryable error: '${errorMessage}'`,\n      reason: 'errorNotRetryable',\n      errors: newErrors,\n    });\n  }\n}\n","import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_RetryError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport type RetryErrorReason =\n  | 'maxRetriesExceeded'\n  | 'errorNotRetryable'\n  | 'abort';\n\nexport class RetryError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  // note: property order determines debugging output\n  readonly reason: RetryErrorReason;\n  readonly lastError: unknown;\n  readonly errors: Array<unknown>;\n\n  constructor({\n    message,\n    reason,\n    errors,\n  }: {\n    message: string;\n    reason: RetryErrorReason;\n    errors: Array<unknown>;\n  }) {\n    super({ name, message });\n\n    this.reason = reason;\n    this.errors = errors;\n\n    // separate our last error to make debugging via log easier:\n    this.lastError = errors[errors.length - 1];\n  }\n\n  static isInstance(error: unknown): error is RetryError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport {\n  RetryFunction,\n  retryWithExponentialBackoff,\n} from '../../util/retry-with-exponential-backoff';\n\n/**\n * Validate and prepare retries.\n */\nexport function prepareRetries({\n  maxRetries,\n}: {\n  maxRetries: number | undefined;\n}): {\n  maxRetries: number;\n  retry: RetryFunction;\n} {\n  if (maxRetries != null) {\n    if (!Number.isInteger(maxRetries)) {\n      throw new InvalidArgumentError({\n        parameter: 'maxRetries',\n        value: maxRetries,\n        message: 'maxRetries must be an integer',\n      });\n    }\n\n    if (maxRetries < 0) {\n      throw new InvalidArgumentError({\n        parameter: 'maxRetries',\n        value: maxRetries,\n        message: 'maxRetries must be >= 0',\n      });\n    }\n  }\n\n  const maxRetriesResult = maxRetries ?? 2;\n\n  return {\n    maxRetries: maxRetriesResult,\n    retry: retryWithExponentialBackoff({ maxRetries: maxRetriesResult }),\n  };\n}\n","import { TelemetrySettings } from './telemetry-settings';\n\nexport function assembleOperationName({\n  operationId,\n  telemetry,\n}: {\n  operationId: string;\n  telemetry?: TelemetrySettings;\n}) {\n  return {\n    // standardized operation and resource name:\n    'operation.name': `${operationId}${\n      telemetry?.functionId != null ? ` ${telemetry.functionId}` : ''\n    }`,\n    'resource.name': telemetry?.functionId,\n\n    // detailed, AI SDK specific data:\n    'ai.operationId': operationId,\n    'ai.telemetry.functionId': telemetry?.functionId,\n  };\n}\n","import { Attributes } from '@opentelemetry/api';\nimport { CallSettings } from '../prompt/call-settings';\nimport { TelemetrySettings } from './telemetry-settings';\n\nexport function getBaseTelemetryAttributes({\n  model,\n  settings,\n  telemetry,\n  headers,\n}: {\n  model: { modelId: string; provider: string };\n  settings: Omit<CallSettings, 'abortSignal' | 'headers'>;\n  telemetry: TelemetrySettings | undefined;\n  headers: Record<string, string | undefined> | undefined;\n}): Attributes {\n  return {\n    'ai.model.provider': model.provider,\n    'ai.model.id': model.modelId,\n\n    // settings:\n    ...Object.entries(settings).reduce((attributes, [key, value]) => {\n      attributes[`ai.settings.${key}`] = value;\n      return attributes;\n    }, {} as Attributes),\n\n    // add metadata as attributes:\n    ...Object.entries(telemetry?.metadata ?? {}).reduce(\n      (attributes, [key, value]) => {\n        attributes[`ai.telemetry.metadata.${key}`] = value;\n        return attributes;\n      },\n      {} as Attributes,\n    ),\n\n    // request headers\n    ...Object.entries(headers ?? {}).reduce((attributes, [key, value]) => {\n      if (value !== undefined) {\n        attributes[`ai.request.headers.${key}`] = value;\n      }\n      return attributes;\n    }, {} as Attributes),\n  };\n}\n","import { Tracer, trace } from '@opentelemetry/api';\nimport { noopTracer } from './noop-tracer';\n\nexport function getTracer({\n  isEnabled = false,\n  tracer,\n}: {\n  isEnabled?: boolean;\n  tracer?: Tracer;\n} = {}): Tracer {\n  if (!isEnabled) {\n    return noopTracer;\n  }\n\n  if (tracer) {\n    return tracer;\n  }\n\n  return trace.getTracer('ai');\n}\n","import { Span, SpanContext, Tracer } from '@opentelemetry/api';\n\n/**\n * Tracer implementation that does nothing (null object).\n */\nexport const noopTracer: Tracer = {\n  startSpan(): Span {\n    return noopSpan;\n  },\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    name: unknown,\n    arg1: unknown,\n    arg2?: unknown,\n    arg3?: F,\n  ): ReturnType<any> {\n    if (typeof arg1 === 'function') {\n      return arg1(noopSpan);\n    }\n    if (typeof arg2 === 'function') {\n      return arg2(noopSpan);\n    }\n    if (typeof arg3 === 'function') {\n      return arg3(noopSpan);\n    }\n  },\n};\n\nconst noopSpan: Span = {\n  spanContext() {\n    return noopSpanContext;\n  },\n  setAttribute() {\n    return this;\n  },\n  setAttributes() {\n    return this;\n  },\n  addEvent() {\n    return this;\n  },\n  addLink() {\n    return this;\n  },\n  addLinks() {\n    return this;\n  },\n  setStatus() {\n    return this;\n  },\n  updateName() {\n    return this;\n  },\n  end() {\n    return this;\n  },\n  isRecording() {\n    return false;\n  },\n  recordException() {\n    return this;\n  },\n};\n\nconst noopSpanContext: SpanContext = {\n  traceId: '',\n  spanId: '',\n  traceFlags: 0,\n};\n","import { Attributes, Span, Tracer, SpanStatusCode } from '@opentelemetry/api';\n\nexport function recordSpan<T>({\n  name,\n  tracer,\n  attributes,\n  fn,\n  endWhenDone = true,\n}: {\n  name: string;\n  tracer: Tracer;\n  attributes: Attributes;\n  fn: (span: Span) => Promise<T>;\n  endWhenDone?: boolean;\n}) {\n  return tracer.startActiveSpan(name, { attributes }, async span => {\n    try {\n      const result = await fn(span);\n\n      if (endWhenDone) {\n        span.end();\n      }\n\n      return result;\n    } catch (error) {\n      try {\n        if (error instanceof Error) {\n          span.recordException({\n            name: error.name,\n            message: error.message,\n            stack: error.stack,\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error.message,\n          });\n        } else {\n          span.setStatus({ code: SpanStatusCode.ERROR });\n        }\n      } finally {\n        // always stop the span when there is an error:\n        span.end();\n      }\n\n      throw error;\n    }\n  });\n}\n","import type { Attributes, AttributeValue } from '@opentelemetry/api';\nimport type { TelemetrySettings } from './telemetry-settings';\n\nexport function selectTelemetryAttributes({\n  telemetry,\n  attributes,\n}: {\n  telemetry?: TelemetrySettings;\n  attributes: {\n    [attributeKey: string]:\n      | AttributeValue\n      | { input: () => AttributeValue | undefined }\n      | { output: () => AttributeValue | undefined }\n      | undefined;\n  };\n}): Attributes {\n  // when telemetry is disabled, return an empty object to avoid serialization overhead:\n  if (telemetry?.isEnabled !== true) {\n    return {};\n  }\n\n  return Object.entries(attributes).reduce((attributes, [key, value]) => {\n    if (value === undefined) {\n      return attributes;\n    }\n\n    // input value, check if it should be recorded:\n    if (\n      typeof value === 'object' &&\n      'input' in value &&\n      typeof value.input === 'function'\n    ) {\n      // default to true:\n      if (telemetry?.recordInputs === false) {\n        return attributes;\n      }\n\n      const result = value.input();\n\n      return result === undefined\n        ? attributes\n        : { ...attributes, [key]: result };\n    }\n\n    // output value, check if it should be recorded:\n    if (\n      typeof value === 'object' &&\n      'output' in value &&\n      typeof value.output === 'function'\n    ) {\n      // default to true:\n      if (telemetry?.recordOutputs === false) {\n        return attributes;\n      }\n\n      const result = value.output();\n\n      return result === undefined\n        ? attributes\n        : { ...attributes, [key]: result };\n    }\n\n    // value is an attribute value already:\n    return { ...attributes, [key]: value };\n  }, {});\n}\n","import { prepareRetries } from '../prompt/prepare-retries';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { EmbeddingModel } from '../types';\nimport { EmbedResult } from './embed-result';\n\n/**\nEmbed a value using an embedding model. The type of the value is defined by the embedding model.\n\n@param model - The embedding model to use.\n@param value - The value that should be embedded.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the embedding, the value, and additional information.\n */\nexport async function embed<VALUE>({\n  model,\n  value,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry,\n}: {\n  /**\nThe embedding model to use.\n     */\n  model: EmbeddingModel<VALUE>;\n\n  /**\nThe value that should be embedded.\n   */\n  value: VALUE;\n\n  /**\nMaximum number of retries per embedding model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n\n  /**\n   * Optional telemetry configuration (experimental).\n   */\n  experimental_telemetry?: TelemetrySettings;\n}): Promise<EmbedResult<VALUE>> {\n  const { maxRetries, retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { maxRetries },\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.embed',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({ operationId: 'ai.embed', telemetry }),\n        ...baseTelemetryAttributes,\n        'ai.value': { input: () => JSON.stringify(value) },\n      },\n    }),\n    tracer,\n    fn: async span => {\n      const { embedding, usage, rawResponse } = await retry(() =>\n        // nested spans to align with the embedMany telemetry data:\n        recordSpan({\n          name: 'ai.embed.doEmbed',\n          attributes: selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              ...assembleOperationName({\n                operationId: 'ai.embed.doEmbed',\n                telemetry,\n              }),\n              ...baseTelemetryAttributes,\n              // specific settings that only make sense on the outer level:\n              'ai.values': { input: () => [JSON.stringify(value)] },\n            },\n          }),\n          tracer,\n          fn: async doEmbedSpan => {\n            const modelResponse = await model.doEmbed({\n              values: [value],\n              abortSignal,\n              headers,\n            });\n\n            const embedding = modelResponse.embeddings[0];\n            const usage = modelResponse.usage ?? { tokens: NaN };\n\n            doEmbedSpan.setAttributes(\n              selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  'ai.embeddings': {\n                    output: () =>\n                      modelResponse.embeddings.map(embedding =>\n                        JSON.stringify(embedding),\n                      ),\n                  },\n                  'ai.usage.tokens': usage.tokens,\n                },\n              }),\n            );\n\n            return {\n              embedding,\n              usage,\n              rawResponse: modelResponse.rawResponse,\n            };\n          },\n        }),\n      );\n\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.embedding': { output: () => JSON.stringify(embedding) },\n            'ai.usage.tokens': usage.tokens,\n          },\n        }),\n      );\n\n      return new DefaultEmbedResult({ value, embedding, usage, rawResponse });\n    },\n  });\n}\n\nclass DefaultEmbedResult<VALUE> implements EmbedResult<VALUE> {\n  readonly value: EmbedResult<VALUE>['value'];\n  readonly embedding: EmbedResult<VALUE>['embedding'];\n  readonly usage: EmbedResult<VALUE>['usage'];\n  readonly rawResponse: EmbedResult<VALUE>['rawResponse'];\n\n  constructor(options: {\n    value: EmbedResult<VALUE>['value'];\n    embedding: EmbedResult<VALUE>['embedding'];\n    usage: EmbedResult<VALUE>['usage'];\n    rawResponse?: EmbedResult<VALUE>['rawResponse'];\n  }) {\n    this.value = options.value;\n    this.embedding = options.embedding;\n    this.usage = options.usage;\n    this.rawResponse = options.rawResponse;\n  }\n}\n","/**\n * Splits an array into chunks of a specified size.\n *\n * @template T - The type of elements in the array.\n * @param {T[]} array - The array to split.\n * @param {number} chunkSize - The size of each chunk.\n * @returns {T[][]} - A new array containing the chunks.\n */\nexport function splitArray<T>(array: T[], chunkSize: number): T[][] {\n  if (chunkSize <= 0) {\n    throw new Error('chunkSize must be greater than 0');\n  }\n\n  const result = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    result.push(array.slice(i, i + chunkSize));\n  }\n\n  return result;\n}\n","import { prepareRetries } from '../prompt/prepare-retries';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { Embedding, EmbeddingModel } from '../types';\nimport { splitArray } from '../util/split-array';\nimport { EmbedManyResult } from './embed-many-result';\n\n/**\nEmbed several values using an embedding model. The type of the value is defined\nby the embedding model.\n\n`embedMany` automatically splits large requests into smaller chunks if the model\nhas a limit on how many embeddings can be generated in a single call.\n\n@param model - The embedding model to use.\n@param values - The values that should be embedded.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the embeddings, the value, and additional information.\n */\nexport async function embedMany<VALUE>({\n  model,\n  values,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry,\n}: {\n  /**\nThe embedding model to use.\n     */\n  model: EmbeddingModel<VALUE>;\n\n  /**\nThe values that should be embedded.\n   */\n  values: Array<VALUE>;\n\n  /**\nMaximum number of retries per embedding model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n\n  /**\n   * Optional telemetry configuration (experimental).\n   */\n  experimental_telemetry?: TelemetrySettings;\n}): Promise<EmbedManyResult<VALUE>> {\n  const { maxRetries, retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { maxRetries },\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.embedMany',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({ operationId: 'ai.embedMany', telemetry }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        'ai.values': {\n          input: () => values.map(value => JSON.stringify(value)),\n        },\n      },\n    }),\n    tracer,\n    fn: async span => {\n      const maxEmbeddingsPerCall = model.maxEmbeddingsPerCall;\n\n      // the model has not specified limits on\n      // how many embeddings can be generated in a single call\n      if (maxEmbeddingsPerCall == null) {\n        const { embeddings, usage } = await retry(() => {\n          // nested spans to align with the embedMany telemetry data:\n          return recordSpan({\n            name: 'ai.embedMany.doEmbed',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.embedMany.doEmbed',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                // specific settings that only make sense on the outer level:\n                'ai.values': {\n                  input: () => values.map(value => JSON.stringify(value)),\n                },\n              },\n            }),\n            tracer,\n            fn: async doEmbedSpan => {\n              const modelResponse = await model.doEmbed({\n                values,\n                abortSignal,\n                headers,\n              });\n\n              const embeddings = modelResponse.embeddings;\n              const usage = modelResponse.usage ?? { tokens: NaN };\n\n              doEmbedSpan.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.embeddings': {\n                      output: () =>\n                        embeddings.map(embedding => JSON.stringify(embedding)),\n                    },\n                    'ai.usage.tokens': usage.tokens,\n                  },\n                }),\n              );\n\n              return { embeddings, usage };\n            },\n          });\n        });\n\n        span.setAttributes(\n          selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              'ai.embeddings': {\n                output: () =>\n                  embeddings.map(embedding => JSON.stringify(embedding)),\n              },\n              'ai.usage.tokens': usage.tokens,\n            },\n          }),\n        );\n\n        return new DefaultEmbedManyResult({ values, embeddings, usage });\n      }\n\n      // split the values into chunks that are small enough for the model:\n      const valueChunks = splitArray(values, maxEmbeddingsPerCall);\n\n      // serially embed the chunks:\n      const embeddings: Array<Embedding> = [];\n      let tokens = 0;\n\n      for (const chunk of valueChunks) {\n        const { embeddings: responseEmbeddings, usage } = await retry(() => {\n          // nested spans to align with the embedMany telemetry data:\n          return recordSpan({\n            name: 'ai.embedMany.doEmbed',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.embedMany.doEmbed',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                // specific settings that only make sense on the outer level:\n                'ai.values': {\n                  input: () => chunk.map(value => JSON.stringify(value)),\n                },\n              },\n            }),\n            tracer,\n            fn: async doEmbedSpan => {\n              const modelResponse = await model.doEmbed({\n                values: chunk,\n                abortSignal,\n                headers,\n              });\n\n              const embeddings = modelResponse.embeddings;\n              const usage = modelResponse.usage ?? { tokens: NaN };\n\n              doEmbedSpan.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.embeddings': {\n                      output: () =>\n                        embeddings.map(embedding => JSON.stringify(embedding)),\n                    },\n                    'ai.usage.tokens': usage.tokens,\n                  },\n                }),\n              );\n\n              return { embeddings, usage };\n            },\n          });\n        });\n\n        embeddings.push(...responseEmbeddings);\n        tokens += usage.tokens;\n      }\n\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.embeddings': {\n              output: () =>\n                embeddings.map(embedding => JSON.stringify(embedding)),\n            },\n            'ai.usage.tokens': tokens,\n          },\n        }),\n      );\n\n      return new DefaultEmbedManyResult({\n        values,\n        embeddings,\n        usage: { tokens },\n      });\n    },\n  });\n}\n\nclass DefaultEmbedManyResult<VALUE> implements EmbedManyResult<VALUE> {\n  readonly values: EmbedManyResult<VALUE>['values'];\n  readonly embeddings: EmbedManyResult<VALUE>['embeddings'];\n  readonly usage: EmbedManyResult<VALUE>['usage'];\n\n  constructor(options: {\n    values: EmbedManyResult<VALUE>['values'];\n    embeddings: EmbedManyResult<VALUE>['embeddings'];\n    usage: EmbedManyResult<VALUE>['usage'];\n  }) {\n    this.values = options.values;\n    this.embeddings = options.embeddings;\n    this.usage = options.usage;\n  }\n}\n","import { ImageModelV1, JSONValue } from '@ai-sdk/provider';\nimport {\n  convertBase64ToUint8Array,\n  convertUint8ArrayToBase64,\n} from '@ai-sdk/provider-utils';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { ImageGenerationWarning } from '../types/image-model';\nimport { GeneratedImage, GenerateImageResult } from './generate-image-result';\nimport { NoImageGeneratedError } from '../../errors/no-image-generated-error';\nimport { ImageModelResponseMetadata } from '../types/image-model-response-metadata';\n\n/**\nGenerates images using an image model.\n\n@param model - The image model to use.\n@param prompt - The prompt that should be used to generate the image.\n@param n - Number of images to generate. Default: 1.\n@param size - Size of the images to generate. Must have the format `{width}x{height}`.\n@param aspectRatio - Aspect ratio of the images to generate. Must have the format `{width}:{height}`.\n@param seed - Seed for the image generation.\n@param providerOptions - Additional provider-specific options that are passed through to the provider\nas body parameters.\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the generated images.\n */\nexport async function generateImage({\n  model,\n  prompt,\n  n = 1,\n  size,\n  aspectRatio,\n  seed,\n  providerOptions,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  _internal = {\n    currentDate: () => new Date(),\n  },\n}: {\n  /**\nThe image model to use.\n     */\n  model: ImageModelV1;\n\n  /**\nThe prompt that should be used to generate the image.\n   */\n  prompt: string;\n\n  /**\nNumber of images to generate.\n   */\n  n?: number;\n\n  /**\nSize of the images to generate. Must have the format `{width}x{height}`. If not provided, the default size will be used.\n   */\n  size?: `${number}x${number}`;\n\n  /**\nAspect ratio of the images to generate. Must have the format `{width}:{height}`. If not provided, the default aspect ratio will be used.\n   */\n  aspectRatio?: `${number}:${number}`;\n\n  /**\nSeed for the image generation. If not provided, the default seed will be used.\n   */\n  seed?: number;\n\n  /**\nAdditional provider-specific options that are passed through to the provider\nas body parameters.\n\nThe outer record is keyed by the provider name, and the inner\nrecord is keyed by the provider-specific metadata key.\n```ts\n{\n  \"openai\": {\n    \"style\": \"vivid\"\n  }\n}\n```\n     */\n  providerOptions?: Record<string, Record<string, JSONValue>>;\n\n  /**\nMaximum number of retries per embedding model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n\n  /**\n   * Internal. For test use only. May change without notice.\n   */\n  _internal?: {\n    currentDate?: () => Date;\n  };\n}): Promise<GenerateImageResult> {\n  const { retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  // default to 1 if the model has not specified limits on\n  // how many images can be generated in a single call\n  const maxImagesPerCall = model.maxImagesPerCall ?? 1;\n\n  // parallelize calls to the model:\n  const callCount = Math.ceil(n / maxImagesPerCall);\n  const callImageCounts = Array.from({ length: callCount }, (_, i) => {\n    if (i < callCount - 1) {\n      return maxImagesPerCall;\n    }\n\n    const remainder = n % maxImagesPerCall;\n    return remainder === 0 ? maxImagesPerCall : remainder;\n  });\n  const results = await Promise.all(\n    callImageCounts.map(async callImageCount =>\n      retry(() =>\n        model.doGenerate({\n          prompt,\n          n: callImageCount,\n          abortSignal,\n          headers,\n          size,\n          aspectRatio,\n          seed,\n          providerOptions: providerOptions ?? {},\n        }),\n      ),\n    ),\n  );\n\n  // collect result images, warnings, and response metadata\n  const images: Array<DefaultGeneratedImage> = [];\n  const warnings: Array<ImageGenerationWarning> = [];\n  const responses: Array<ImageModelResponseMetadata> = [];\n  for (const result of results) {\n    images.push(\n      ...result.images.map(image => new DefaultGeneratedImage({ image })),\n    );\n    warnings.push(...result.warnings);\n    responses.push(result.response);\n  }\n\n  if (!images.length) {\n    throw new NoImageGeneratedError({ responses });\n  }\n\n  return new DefaultGenerateImageResult({ images, warnings, responses });\n}\n\nclass DefaultGenerateImageResult implements GenerateImageResult {\n  readonly images: Array<GeneratedImage>;\n  readonly warnings: Array<ImageGenerationWarning>;\n  readonly responses: Array<ImageModelResponseMetadata>;\n\n  constructor(options: {\n    images: Array<DefaultGeneratedImage>;\n    warnings: Array<ImageGenerationWarning>;\n    responses: Array<ImageModelResponseMetadata>;\n  }) {\n    this.images = options.images;\n    this.warnings = options.warnings;\n    this.responses = options.responses;\n  }\n\n  get image() {\n    return this.images[0];\n  }\n}\n\nclass DefaultGeneratedImage implements GeneratedImage {\n  private base64Data: string | undefined;\n  private uint8ArrayData: Uint8Array | undefined;\n\n  constructor({ image }: { image: string | Uint8Array }) {\n    const isUint8Array = image instanceof Uint8Array;\n\n    this.base64Data = isUint8Array ? undefined : image;\n    this.uint8ArrayData = isUint8Array ? image : undefined;\n  }\n\n  // lazy conversion with caching to avoid unnecessary conversion overhead:\n  get base64() {\n    if (this.base64Data == null) {\n      this.base64Data = convertUint8ArrayToBase64(this.uint8ArrayData!);\n    }\n    return this.base64Data;\n  }\n\n  // lazy conversion with caching to avoid unnecessary conversion overhead:\n  get uint8Array() {\n    if (this.uint8ArrayData == null) {\n      this.uint8ArrayData = convertBase64ToUint8Array(this.base64Data!);\n    }\n    return this.uint8ArrayData;\n  }\n}\n","import { AISDKError } from '@ai-sdk/provider';\nimport { ImageModelResponseMetadata } from '../core/types/image-model-response-metadata';\n\nconst name = 'AI_NoImageGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no image could be generated. This can have multiple causes:\n\n- The model failed to generate a response.\n- The model generated a response that could not be parsed.\n */\nexport class NoImageGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\nThe response metadata for each call.\n   */\n  readonly responses: Array<ImageModelResponseMetadata> | undefined;\n\n  constructor({\n    message = 'No image generated.',\n    cause,\n    responses,\n  }: {\n    message?: string;\n    cause?: Error;\n    responses?: Array<ImageModelResponseMetadata>;\n  }) {\n    super({ name, message, cause });\n\n    this.responses = responses;\n  }\n\n  static isInstance(error: unknown): error is NoImageGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import {\n  JSONParseError,\n  JSONValue,\n  TypeValidationError,\n} from '@ai-sdk/provider';\nimport { createIdGenerator, safeParseJSON } from '@ai-sdk/provider-utils';\nimport { Schema } from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { NoObjectGeneratedError } from '../../errors/no-object-generated-error';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport {\n  CallWarning,\n  FinishReason,\n  LanguageModel,\n  LogProbs,\n  ProviderMetadata,\n} from '../types';\nimport { LanguageModelRequestMetadata } from '../types/language-model-request-metadata';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { ProviderOptions } from '../types/provider-metadata';\nimport { calculateLanguageModelUsage } from '../types/usage';\nimport { prepareResponseHeaders } from '../util/prepare-response-headers';\nimport { GenerateObjectResult } from './generate-object-result';\nimport { injectJsonInstruction } from './inject-json-instruction';\nimport { getOutputStrategy } from './output-strategy';\nimport { validateObjectGenerationInput } from './validate-object-generation-input';\n\nconst originalGenerateId = createIdGenerator({ prefix: 'aiobj', size: 24 });\n\n/**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n\nShould return the repaired text or null if the text cannot be repaired.\n     */\nexport type RepairTextFunction = (options: {\n  text: string;\n  error: JSONParseError | TypeValidationError;\n}) => Promise<string | null>;\n\n/**\nGenerate a structured, typed object for a given prompt and schema using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamObject` instead.\n\n@returns\nA result object that contains the generated object, the finish reason, the token usage, and additional information.\n */\nexport async function generateObject<OBJECT>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output?: 'object' | undefined;\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe schema of the object that the model should generate.\n     */\n      schema: z.Schema<OBJECT, z.ZodTypeDef, any> | Schema<OBJECT>;\n\n      /**\nOptional name of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n     */\n      schemaName?: string;\n\n      /**\nOptional description of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n     */\n      schemaDescription?: string;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n     */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\nOptional telemetry configuration (experimental).\n       */\n\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n      };\n    },\n): Promise<GenerateObjectResult<OBJECT>>;\n/**\nGenerate an array with structured, typed elements for a given prompt and element schema using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamObject` instead.\n\n@return\nA result object that contains the generated object, the finish reason, the token usage, and additional information.\n */\nexport async function generateObject<ELEMENT>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'array';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe element schema of the array that the model should generate.\n */\n      schema: z.Schema<ELEMENT, z.ZodTypeDef, any> | Schema<ELEMENT>;\n\n      /**\nOptional name of the array that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n     */\n      schemaName?: string;\n\n      /**\nOptional description of the array that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n */\n      schemaDescription?: string;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n     */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n      };\n    },\n): Promise<GenerateObjectResult<Array<ELEMENT>>>;\n/**\nGenerate a value from an enum (limited list of string values) using a language model.\n\nThis function does not stream the output.\n\n@return\nA result object that contains the generated value, the finish reason, the token usage, and additional information.\n */\nexport async function generateObject<ENUM extends string>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'enum';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe enum values that the model should use.\n     */\n      enum: Array<ENUM>;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n     */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n      };\n    },\n): Promise<GenerateObjectResult<ENUM>>;\n/**\nGenerate JSON with any schema for a given prompt using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamObject` instead.\n\n@returns\nA result object that contains the generated object, the finish reason, the token usage, and additional information.\n */\nexport async function generateObject(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'no-schema';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe mode to use for object generation. Must be \"json\" for no-schema output.\n     */\n      mode?: 'json';\n\n      /**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n     */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\nOptional telemetry configuration (experimental).\n       */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n      };\n    },\n): Promise<GenerateObjectResult<JSONValue>>;\nexport async function generateObject<SCHEMA, RESULT>({\n  model,\n  enum: enumValues, // rename bc enum is reserved by typescript\n  schema: inputSchema,\n  schemaName,\n  schemaDescription,\n  mode,\n  output = 'object',\n  system,\n  prompt,\n  messages,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  experimental_repairText: repairText,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata,\n  providerOptions = experimental_providerMetadata,\n  _internal: {\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n  } = {},\n  ...settings\n}: Omit<CallSettings, 'stopSequences'> &\n  Prompt & {\n    /**\n     * The expected structure of the output.\n     *\n     * - 'object': Generate a single object that conforms to the schema.\n     * - 'array': Generate an array of objects that conform to the schema.\n     * - 'no-schema': Generate any JSON object. No schema is specified.\n     *\n     * Default is 'object' if not specified.\n     */\n    output?: 'object' | 'array' | 'enum' | 'no-schema';\n\n    model: LanguageModel;\n    enum?: Array<SCHEMA>;\n    schema?: z.Schema<SCHEMA, z.ZodTypeDef, any> | Schema<SCHEMA>;\n    schemaName?: string;\n    schemaDescription?: string;\n    mode?: 'auto' | 'json' | 'tool';\n    experimental_repairText?: RepairTextFunction;\n    experimental_telemetry?: TelemetrySettings;\n    experimental_providerMetadata?: ProviderMetadata;\n    providerOptions?: ProviderOptions;\n\n    /**\n     * Internal. For test use only. May change without notice.\n     */\n    _internal?: {\n      generateId?: () => string;\n      currentDate?: () => Date;\n    };\n  }): Promise<GenerateObjectResult<RESULT>> {\n  validateObjectGenerationInput({\n    output,\n    mode,\n    schema: inputSchema,\n    schemaName,\n    schemaDescription,\n    enumValues,\n  });\n\n  const { maxRetries, retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  const outputStrategy = getOutputStrategy({\n    output,\n    schema: inputSchema,\n    enumValues,\n  });\n\n  // automatically set mode to 'json' for no-schema output\n  if (outputStrategy.type === 'no-schema' && mode === undefined) {\n    mode = 'json';\n  }\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...settings, maxRetries },\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.generateObject',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({\n          operationId: 'ai.generateObject',\n          telemetry,\n        }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        'ai.prompt': {\n          input: () => JSON.stringify({ system, prompt, messages }),\n        },\n        'ai.schema':\n          outputStrategy.jsonSchema != null\n            ? { input: () => JSON.stringify(outputStrategy.jsonSchema) }\n            : undefined,\n        'ai.schema.name': schemaName,\n        'ai.schema.description': schemaDescription,\n        'ai.settings.output': outputStrategy.type,\n        'ai.settings.mode': mode,\n      },\n    }),\n    tracer,\n    fn: async span => {\n      // use the default provider mode when the mode is set to 'auto' or unspecified\n      if (mode === 'auto' || mode == null) {\n        mode = model.defaultObjectGenerationMode;\n      }\n\n      let result: string;\n      let finishReason: FinishReason;\n      let usage: Parameters<typeof calculateLanguageModelUsage>[0];\n      let warnings: CallWarning[] | undefined;\n      let rawResponse:\n        | { headers?: Record<string, string>; body?: unknown }\n        | undefined;\n      let response: LanguageModelResponseMetadata;\n      let request: LanguageModelRequestMetadata;\n      let logprobs: LogProbs | undefined;\n      let resultProviderMetadata: ProviderMetadata | undefined;\n\n      switch (mode) {\n        case 'json': {\n          const standardizedPrompt = standardizePrompt({\n            prompt: {\n              system:\n                outputStrategy.jsonSchema == null\n                  ? injectJsonInstruction({ prompt: system })\n                  : model.supportsStructuredOutputs\n                    ? system\n                    : injectJsonInstruction({\n                        prompt: system,\n                        schema: outputStrategy.jsonSchema,\n                      }),\n              prompt,\n              messages,\n            },\n            tools: undefined,\n          });\n\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: standardizedPrompt,\n            modelSupportsImageUrls: model.supportsImageUrls,\n            modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context\n          });\n\n          const generateResult = await retry(() =>\n            recordSpan({\n              name: 'ai.generateObject.doGenerate',\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: 'ai.generateObject.doGenerate',\n                    telemetry,\n                  }),\n                  ...baseTelemetryAttributes,\n                  'ai.prompt.format': {\n                    input: () => standardizedPrompt.type,\n                  },\n                  'ai.prompt.messages': {\n                    input: () => JSON.stringify(promptMessages),\n                  },\n                  'ai.settings.mode': mode,\n\n                  // standardized gen-ai llm span attributes:\n                  'gen_ai.system': model.provider,\n                  'gen_ai.request.model': model.modelId,\n                  'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                  'gen_ai.request.max_tokens': settings.maxTokens,\n                  'gen_ai.request.presence_penalty': settings.presencePenalty,\n                  'gen_ai.request.temperature': settings.temperature,\n                  'gen_ai.request.top_k': settings.topK,\n                  'gen_ai.request.top_p': settings.topP,\n                },\n              }),\n              tracer,\n              fn: async span => {\n                const result = await model.doGenerate({\n                  mode: {\n                    type: 'object-json',\n                    schema: outputStrategy.jsonSchema,\n                    name: schemaName,\n                    description: schemaDescription,\n                  },\n                  ...prepareCallSettings(settings),\n                  inputFormat: standardizedPrompt.type,\n                  prompt: promptMessages,\n                  providerMetadata: providerOptions,\n                  abortSignal,\n                  headers,\n                });\n\n                const responseData = {\n                  id: result.response?.id ?? generateId(),\n                  timestamp: result.response?.timestamp ?? currentDate(),\n                  modelId: result.response?.modelId ?? model.modelId,\n                };\n\n                if (result.text === undefined) {\n                  throw new NoObjectGeneratedError({\n                    message:\n                      'No object generated: the model did not return a response.',\n                    response: responseData,\n                    usage: calculateLanguageModelUsage(result.usage),\n                  });\n                }\n\n                // Add response information to the span:\n                span.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      'ai.response.finishReason': result.finishReason,\n                      'ai.response.object': { output: () => result.text },\n                      'ai.response.id': responseData.id,\n                      'ai.response.model': responseData.modelId,\n                      'ai.response.timestamp':\n                        responseData.timestamp.toISOString(),\n\n                      'ai.usage.promptTokens': result.usage.promptTokens,\n                      'ai.usage.completionTokens':\n                        result.usage.completionTokens,\n\n                      // standardized gen-ai llm span attributes:\n                      'gen_ai.response.finish_reasons': [result.finishReason],\n                      'gen_ai.response.id': responseData.id,\n                      'gen_ai.response.model': responseData.modelId,\n                      'gen_ai.usage.prompt_tokens': result.usage.promptTokens,\n                      'gen_ai.usage.completion_tokens':\n                        result.usage.completionTokens,\n                    },\n                  }),\n                );\n\n                return { ...result, objectText: result.text, responseData };\n              },\n            }),\n          );\n\n          result = generateResult.objectText;\n          finishReason = generateResult.finishReason;\n          usage = generateResult.usage;\n          warnings = generateResult.warnings;\n          rawResponse = generateResult.rawResponse;\n          logprobs = generateResult.logprobs;\n          resultProviderMetadata = generateResult.providerMetadata;\n          request = generateResult.request ?? {};\n          response = generateResult.responseData;\n\n          break;\n        }\n\n        case 'tool': {\n          const standardizedPrompt = standardizePrompt({\n            prompt: { system, prompt, messages },\n            tools: undefined,\n          });\n\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: standardizedPrompt,\n            modelSupportsImageUrls: model.supportsImageUrls,\n            modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context,\n          });\n          const inputFormat = standardizedPrompt.type;\n\n          const generateResult = await retry(() =>\n            recordSpan({\n              name: 'ai.generateObject.doGenerate',\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: 'ai.generateObject.doGenerate',\n                    telemetry,\n                  }),\n                  ...baseTelemetryAttributes,\n                  'ai.prompt.format': {\n                    input: () => inputFormat,\n                  },\n                  'ai.prompt.messages': {\n                    input: () => JSON.stringify(promptMessages),\n                  },\n                  'ai.settings.mode': mode,\n\n                  // standardized gen-ai llm span attributes:\n                  'gen_ai.system': model.provider,\n                  'gen_ai.request.model': model.modelId,\n                  'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                  'gen_ai.request.max_tokens': settings.maxTokens,\n                  'gen_ai.request.presence_penalty': settings.presencePenalty,\n                  'gen_ai.request.temperature': settings.temperature,\n                  'gen_ai.request.top_k': settings.topK,\n                  'gen_ai.request.top_p': settings.topP,\n                },\n              }),\n              tracer,\n              fn: async span => {\n                const result = await model.doGenerate({\n                  mode: {\n                    type: 'object-tool',\n                    tool: {\n                      type: 'function',\n                      name: schemaName ?? 'json',\n                      description:\n                        schemaDescription ?? 'Respond with a JSON object.',\n                      parameters: outputStrategy.jsonSchema!,\n                    },\n                  },\n                  ...prepareCallSettings(settings),\n                  inputFormat,\n                  prompt: promptMessages,\n                  providerMetadata: providerOptions,\n                  abortSignal,\n                  headers,\n                });\n\n                const objectText = result.toolCalls?.[0]?.args;\n\n                const responseData = {\n                  id: result.response?.id ?? generateId(),\n                  timestamp: result.response?.timestamp ?? currentDate(),\n                  modelId: result.response?.modelId ?? model.modelId,\n                };\n\n                if (objectText === undefined) {\n                  throw new NoObjectGeneratedError({\n                    message: 'No object generated: the tool was not called.',\n                    response: responseData,\n                    usage: calculateLanguageModelUsage(result.usage),\n                  });\n                }\n\n                // Add response information to the span:\n                span.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      'ai.response.finishReason': result.finishReason,\n                      'ai.response.object': { output: () => objectText },\n                      'ai.response.id': responseData.id,\n                      'ai.response.model': responseData.modelId,\n                      'ai.response.timestamp':\n                        responseData.timestamp.toISOString(),\n\n                      'ai.usage.promptTokens': result.usage.promptTokens,\n                      'ai.usage.completionTokens':\n                        result.usage.completionTokens,\n\n                      // standardized gen-ai llm span attributes:\n                      'gen_ai.response.finish_reasons': [result.finishReason],\n                      'gen_ai.response.id': responseData.id,\n                      'gen_ai.response.model': responseData.modelId,\n                      'gen_ai.usage.input_tokens': result.usage.promptTokens,\n                      'gen_ai.usage.output_tokens':\n                        result.usage.completionTokens,\n                    },\n                  }),\n                );\n\n                return { ...result, objectText, responseData };\n              },\n            }),\n          );\n\n          result = generateResult.objectText;\n          finishReason = generateResult.finishReason;\n          usage = generateResult.usage;\n          warnings = generateResult.warnings;\n          rawResponse = generateResult.rawResponse;\n          logprobs = generateResult.logprobs;\n          resultProviderMetadata = generateResult.providerMetadata;\n          request = generateResult.request ?? {};\n          response = generateResult.responseData;\n\n          break;\n        }\n\n        case undefined: {\n          throw new Error(\n            'Model does not have a default object generation mode.',\n          );\n        }\n\n        default: {\n          const _exhaustiveCheck: never = mode;\n          throw new Error(`Unsupported mode: ${_exhaustiveCheck}`);\n        }\n      }\n\n      function processResult(result: string): RESULT {\n        const parseResult = safeParseJSON({ text: result });\n\n        if (!parseResult.success) {\n          throw new NoObjectGeneratedError({\n            message: 'No object generated: could not parse the response.',\n            cause: parseResult.error,\n            text: result,\n            response,\n            usage: calculateLanguageModelUsage(usage),\n          });\n        }\n\n        const validationResult = outputStrategy.validateFinalResult(\n          parseResult.value,\n          {\n            text: result,\n            response,\n            usage: calculateLanguageModelUsage(usage),\n          },\n        );\n\n        if (!validationResult.success) {\n          throw new NoObjectGeneratedError({\n            message: 'No object generated: response did not match schema.',\n            cause: validationResult.error,\n            text: result,\n            response,\n            usage: calculateLanguageModelUsage(usage),\n          });\n        }\n\n        return validationResult.value;\n      }\n\n      let object: RESULT;\n      try {\n        object = processResult(result);\n      } catch (error) {\n        if (\n          repairText != null &&\n          NoObjectGeneratedError.isInstance(error) &&\n          (JSONParseError.isInstance(error.cause) ||\n            TypeValidationError.isInstance(error.cause))\n        ) {\n          const repairedText = await repairText({\n            text: result,\n            error: error.cause,\n          });\n\n          if (repairedText === null) {\n            throw error;\n          }\n\n          object = processResult(repairedText);\n        } else {\n          throw error;\n        }\n      }\n\n      // Add response information to the span:\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.response.finishReason': finishReason,\n            'ai.response.object': {\n              output: () => JSON.stringify(object),\n            },\n\n            'ai.usage.promptTokens': usage.promptTokens,\n            'ai.usage.completionTokens': usage.completionTokens,\n          },\n        }),\n      );\n\n      return new DefaultGenerateObjectResult({\n        object,\n        finishReason,\n        usage: calculateLanguageModelUsage(usage),\n        warnings,\n        request,\n        response: {\n          ...response,\n          headers: rawResponse?.headers,\n          body: rawResponse?.body,\n        },\n        logprobs,\n        providerMetadata: resultProviderMetadata,\n      });\n    },\n  });\n}\n\nclass DefaultGenerateObjectResult<T> implements GenerateObjectResult<T> {\n  readonly object: GenerateObjectResult<T>['object'];\n  readonly finishReason: GenerateObjectResult<T>['finishReason'];\n  readonly usage: GenerateObjectResult<T>['usage'];\n  readonly warnings: GenerateObjectResult<T>['warnings'];\n  readonly logprobs: GenerateObjectResult<T>['logprobs'];\n  readonly experimental_providerMetadata: GenerateObjectResult<T>['experimental_providerMetadata'];\n  readonly providerMetadata: GenerateObjectResult<T>['providerMetadata'];\n  readonly response: GenerateObjectResult<T>['response'];\n  readonly request: GenerateObjectResult<T>['request'];\n\n  constructor(options: {\n    object: GenerateObjectResult<T>['object'];\n    finishReason: GenerateObjectResult<T>['finishReason'];\n    usage: GenerateObjectResult<T>['usage'];\n    warnings: GenerateObjectResult<T>['warnings'];\n    logprobs: GenerateObjectResult<T>['logprobs'];\n    providerMetadata: GenerateObjectResult<T>['providerMetadata'];\n    response: GenerateObjectResult<T>['response'];\n    request: GenerateObjectResult<T>['request'];\n  }) {\n    this.object = options.object;\n    this.finishReason = options.finishReason;\n    this.usage = options.usage;\n    this.warnings = options.warnings;\n    this.providerMetadata = options.providerMetadata;\n    this.experimental_providerMetadata = options.providerMetadata;\n    this.response = options.response;\n    this.request = options.request;\n    this.logprobs = options.logprobs;\n  }\n\n  toJsonResponse(init?: ResponseInit): Response {\n    return new Response(JSON.stringify(this.object), {\n      status: init?.status ?? 200,\n      headers: prepareResponseHeaders(init?.headers, {\n        contentType: 'application/json; charset=utf-8',\n      }),\n    });\n  }\n}\n","import { AISDKError } from '@ai-sdk/provider';\nimport { LanguageModelResponseMetadata } from '../core/types/language-model-response-metadata';\nimport { LanguageModelUsage } from '../core/types/usage';\n\nconst name = 'AI_NoObjectGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no object could be generated. This can have several causes:\n\n- The model failed to generate a response.\n- The model generated a response that could not be parsed.\n- The model generated a response that could not be validated against the schema.\n\nThe error contains the following properties:\n\n- `text`: The text that was generated by the model. This can be the raw text or the tool call text, depending on the model.\n */\nexport class NoObjectGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\n  The text that was generated by the model. This can be the raw text or the tool call text, depending on the model.\n   */\n  readonly text: string | undefined;\n\n  /**\n  The response metadata.\n   */\n  readonly response: LanguageModelResponseMetadata | undefined;\n\n  /**\n  The usage of the model.\n   */\n  readonly usage: LanguageModelUsage | undefined;\n\n  constructor({\n    message = 'No object generated.',\n    cause,\n    text,\n    response,\n    usage,\n  }: {\n    message?: string;\n    cause?: Error;\n    text?: string;\n    response: LanguageModelResponseMetadata;\n    usage: LanguageModelUsage;\n  }) {\n    super({ name, message, cause });\n\n    this.text = text;\n    this.response = response;\n    this.usage = usage;\n  }\n\n  static isInstance(error: unknown): error is NoObjectGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n\nexport function verifyNoObjectGeneratedError(\n  error: unknown,\n  expected: {\n    message: string;\n    response: LanguageModelResponseMetadata;\n    usage: LanguageModelUsage;\n  },\n) {\n  expect(NoObjectGeneratedError.isInstance(error)).toBeTruthy();\n  const noObjectGeneratedError = error as NoObjectGeneratedError;\n  expect(noObjectGeneratedError.message).toStrictEqual(expected.message);\n  expect(noObjectGeneratedError.response).toStrictEqual(expected.response);\n  expect(noObjectGeneratedError.usage).toStrictEqual(expected.usage);\n}\n","import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_DownloadError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class DownloadError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly url: string;\n  readonly statusCode?: number;\n  readonly statusText?: string;\n\n  constructor({\n    url,\n    statusCode,\n    statusText,\n    cause,\n    message = cause == null\n      ? `Failed to download ${url}: ${statusCode} ${statusText}`\n      : `Failed to download ${url}: ${cause}`,\n  }: {\n    url: string;\n    statusCode?: number;\n    statusText?: string;\n    message?: string;\n    cause?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.url = url;\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n  }\n\n  static isInstance(error: unknown): error is DownloadError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { DownloadError } from './download-error';\n\nexport async function download({\n  url,\n  fetchImplementation = fetch,\n}: {\n  url: URL;\n  fetchImplementation?: typeof fetch;\n}): Promise<{\n  data: Uint8Array;\n  mimeType: string | undefined;\n}> {\n  const urlText = url.toString();\n  try {\n    const response = await fetchImplementation(urlText);\n\n    if (!response.ok) {\n      throw new DownloadError({\n        url: urlText,\n        statusCode: response.status,\n        statusText: response.statusText,\n      });\n    }\n\n    return {\n      data: new Uint8Array(await response.arrayBuffer()),\n      mimeType: response.headers.get('content-type') ?? undefined,\n    };\n  } catch (error) {\n    if (DownloadError.isInstance(error)) {\n      throw error;\n    }\n\n    throw new DownloadError({ url: urlText, cause: error });\n  }\n}\n","const mimeTypeSignatures = [\n  { mimeType: 'image/gif' as const, bytes: [0x47, 0x49, 0x46] },\n  { mimeType: 'image/png' as const, bytes: [0x89, 0x50, 0x4e, 0x47] },\n  { mimeType: 'image/jpeg' as const, bytes: [0xff, 0xd8] },\n  { mimeType: 'image/webp' as const, bytes: [0x52, 0x49, 0x46, 0x46] },\n];\n\nexport function detectImageMimeType(\n  image: Uint8Array,\n): 'image/jpeg' | 'image/png' | 'image/gif' | 'image/webp' | undefined {\n  for (const { bytes, mimeType } of mimeTypeSignatures) {\n    if (\n      image.length >= bytes.length &&\n      bytes.every((byte, index) => image[index] === byte)\n    ) {\n      return mimeType;\n    }\n  }\n\n  return undefined;\n}\n","import {\n  convertBase64ToUint8Array,\n  convertUint8ArrayToBase64,\n} from '@ai-sdk/provider-utils';\nimport { InvalidDataContentError } from './invalid-data-content-error';\nimport { z } from 'zod';\n\n/**\nData content. Can either be a base64-encoded string, a Uint8Array, an ArrayBuffer, or a Buffer.\n */\nexport type DataContent = string | Uint8Array | ArrayBuffer | Buffer;\n\n/**\n@internal\n */\nexport const dataContentSchema: z.ZodType<DataContent> = z.union([\n  z.string(),\n  z.instanceof(Uint8Array),\n  z.instanceof(ArrayBuffer),\n  z.custom(\n    // Buffer might not be available in some environments such as CloudFlare:\n    (value: unknown): value is Buffer =>\n      globalThis.Buffer?.isBuffer(value) ?? false,\n    { message: 'Must be a Buffer' },\n  ),\n]);\n\n/**\nConverts data content to a base64-encoded string.\n\n@param content - Data content to convert.\n@returns Base64-encoded string.\n*/\nexport function convertDataContentToBase64String(content: DataContent): string {\n  if (typeof content === 'string') {\n    return content;\n  }\n\n  if (content instanceof ArrayBuffer) {\n    return convertUint8ArrayToBase64(new Uint8Array(content));\n  }\n\n  return convertUint8ArrayToBase64(content);\n}\n\n/**\nConverts data content to a Uint8Array.\n\n@param content - Data content to convert.\n@returns Uint8Array.\n */\nexport function convertDataContentToUint8Array(\n  content: DataContent,\n): Uint8Array {\n  if (content instanceof Uint8Array) {\n    return content;\n  }\n\n  if (typeof content === 'string') {\n    try {\n      return convertBase64ToUint8Array(content);\n    } catch (error) {\n      throw new InvalidDataContentError({\n        message:\n          'Invalid data content. Content string is not a base64-encoded media.',\n        content,\n        cause: error,\n      });\n    }\n  }\n\n  if (content instanceof ArrayBuffer) {\n    return new Uint8Array(content);\n  }\n\n  throw new InvalidDataContentError({ content });\n}\n\n/**\n * Converts a Uint8Array to a string of text.\n *\n * @param uint8Array - The Uint8Array to convert.\n * @returns The converted string.\n */\nexport function convertUint8ArrayToText(uint8Array: Uint8Array): string {\n  try {\n    return new TextDecoder().decode(uint8Array);\n  } catch (error) {\n    throw new Error('Error decoding Uint8Array to text');\n  }\n}\n","import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidDataContentError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidDataContentError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly content: unknown;\n\n  constructor({\n    content,\n    cause,\n    message = `Invalid data content. Expected a base64 string, Uint8Array, ArrayBuffer, or Buffer, but got ${typeof content}.`,\n  }: {\n    content: unknown;\n    cause?: unknown;\n    message?: string;\n  }) {\n    super({ name, message, cause });\n\n    this.content = content;\n  }\n\n  static isInstance(error: unknown): error is InvalidDataContentError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidMessageRoleError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidMessageRoleError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly role: string;\n\n  constructor({\n    role,\n    message = `Invalid message role: '${role}'. Must be one of: \"system\", \"user\", \"assistant\", \"tool\".`,\n  }: {\n    role: string;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.role = role;\n  }\n\n  static isInstance(error: unknown): error is InvalidMessageRoleError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","export function splitDataUrl(dataUrl: string): {\n  mimeType: string | undefined;\n  base64Content: string | undefined;\n} {\n  try {\n    const [header, base64Content] = dataUrl.split(',');\n    return {\n      mimeType: header.split(';')[0].split(':')[1],\n      base64Content,\n    };\n  } catch (error) {\n    return {\n      mimeType: undefined,\n      base64Content: undefined,\n    };\n  }\n}\n","import {\n  LanguageModelV1FilePart,\n  LanguageModelV1ImagePart,\n  LanguageModelV1Message,\n  LanguageModelV1Prompt,\n  LanguageModelV1TextPart,\n} from '@ai-sdk/provider';\nimport { download } from '../../util/download';\nimport { CoreMessage } from '../prompt/message';\nimport { detectImageMimeType } from '../util/detect-image-mimetype';\nimport { FilePart, ImagePart, TextPart } from './content-part';\nimport {\n  convertDataContentToBase64String,\n  convertDataContentToUint8Array,\n  DataContent,\n} from './data-content';\nimport { InvalidMessageRoleError } from './invalid-message-role-error';\nimport { splitDataUrl } from './split-data-url';\nimport { StandardizedPrompt } from './standardize-prompt';\n\nexport async function convertToLanguageModelPrompt({\n  prompt,\n  modelSupportsImageUrls = true,\n  modelSupportsUrl = () => false,\n  downloadImplementation = download,\n}: {\n  prompt: StandardizedPrompt;\n  modelSupportsImageUrls: boolean | undefined;\n  modelSupportsUrl: undefined | ((url: URL) => boolean);\n  downloadImplementation?: typeof download;\n}): Promise<LanguageModelV1Prompt> {\n  const downloadedAssets = await downloadAssets(\n    prompt.messages,\n    downloadImplementation,\n    modelSupportsImageUrls,\n    modelSupportsUrl,\n  );\n\n  return [\n    ...(prompt.system != null\n      ? [{ role: 'system' as const, content: prompt.system }]\n      : []),\n    ...prompt.messages.map(message =>\n      convertToLanguageModelMessage(message, downloadedAssets),\n    ),\n  ];\n}\n\n/**\n * Convert a CoreMessage to a LanguageModelV1Message.\n *\n * @param message The CoreMessage to convert.\n * @param downloadedAssets A map of URLs to their downloaded data. Only\n *   available if the model does not support URLs, null otherwise.\n */\nexport function convertToLanguageModelMessage(\n  message: CoreMessage,\n  downloadedAssets: Record<\n    string,\n    { mimeType: string | undefined; data: Uint8Array }\n  >,\n): LanguageModelV1Message {\n  const role = message.role;\n  switch (role) {\n    case 'system': {\n      return {\n        role: 'system',\n        content: message.content,\n        providerMetadata:\n          message.providerOptions ?? message.experimental_providerMetadata,\n      };\n    }\n\n    case 'user': {\n      if (typeof message.content === 'string') {\n        return {\n          role: 'user',\n          content: [{ type: 'text', text: message.content }],\n          providerMetadata:\n            message.providerOptions ?? message.experimental_providerMetadata,\n        };\n      }\n\n      return {\n        role: 'user',\n        content: message.content\n          .map(part => convertPartToLanguageModelPart(part, downloadedAssets))\n          // remove empty text parts:\n          .filter(part => part.type !== 'text' || part.text !== ''),\n        providerMetadata:\n          message.providerOptions ?? message.experimental_providerMetadata,\n      };\n    }\n\n    case 'assistant': {\n      if (typeof message.content === 'string') {\n        return {\n          role: 'assistant',\n          content: [{ type: 'text', text: message.content }],\n          providerMetadata:\n            message.providerOptions ?? message.experimental_providerMetadata,\n        };\n      }\n\n      return {\n        role: 'assistant',\n        content: message.content\n          .filter(\n            // remove empty text parts:\n            part => part.type !== 'text' || part.text !== '',\n          )\n          .map(part => {\n            const { experimental_providerMetadata, providerOptions, ...rest } =\n              part;\n            return {\n              ...rest,\n              providerMetadata:\n                providerOptions ?? experimental_providerMetadata,\n            };\n          }),\n        providerMetadata:\n          message.providerOptions ?? message.experimental_providerMetadata,\n      };\n    }\n\n    case 'tool': {\n      return {\n        role: 'tool',\n        content: message.content.map(part => ({\n          type: 'tool-result',\n          toolCallId: part.toolCallId,\n          toolName: part.toolName,\n          result: part.result,\n          content: part.experimental_content,\n          isError: part.isError,\n          providerMetadata:\n            part.providerOptions ?? part.experimental_providerMetadata,\n        })),\n        providerMetadata:\n          message.providerOptions ?? message.experimental_providerMetadata,\n      };\n    }\n\n    default: {\n      const _exhaustiveCheck: never = role;\n      throw new InvalidMessageRoleError({ role: _exhaustiveCheck });\n    }\n  }\n}\n\n/**\n * Downloads images and files from URLs in the messages.\n */\nasync function downloadAssets(\n  messages: CoreMessage[],\n  downloadImplementation: typeof download,\n  modelSupportsImageUrls: boolean | undefined,\n  modelSupportsUrl: (url: URL) => boolean,\n): Promise<Record<string, { mimeType: string | undefined; data: Uint8Array }>> {\n  const urls = messages\n    .filter(message => message.role === 'user')\n    .map(message => message.content)\n    .filter((content): content is Array<TextPart | ImagePart | FilePart> =>\n      Array.isArray(content),\n    )\n    .flat()\n    .filter(\n      (part): part is ImagePart | FilePart =>\n        part.type === 'image' || part.type === 'file',\n    )\n    /**\n     * Filter out image parts if the model supports image URLs, before letting it\n     * decide if it supports a particular URL.\n     */\n    .filter(\n      (part): part is ImagePart | FilePart =>\n        !(part.type === 'image' && modelSupportsImageUrls === true),\n    )\n    .map(part => (part.type === 'image' ? part.image : part.data))\n    .map(part =>\n      // support string urls:\n      typeof part === 'string' &&\n      (part.startsWith('http:') || part.startsWith('https:'))\n        ? new URL(part)\n        : part,\n    )\n    .filter((image): image is URL => image instanceof URL)\n    /**\n     * Filter out URLs that the model supports natively, so we don't download them.\n     */\n    .filter(url => !modelSupportsUrl(url));\n\n  // download in parallel:\n  const downloadedImages = await Promise.all(\n    urls.map(async url => ({\n      url,\n      data: await downloadImplementation({ url }),\n    })),\n  );\n\n  return Object.fromEntries(\n    downloadedImages.map(({ url, data }) => [url.toString(), data]),\n  );\n}\n\n/**\n * Convert part of a message to a LanguageModelV1Part.\n * @param part The part to convert.\n * @param downloadedAssets A map of URLs to their downloaded data. Only\n *  available if the model does not support URLs, null otherwise.\n *\n * @returns The converted part.\n */\nfunction convertPartToLanguageModelPart(\n  part: TextPart | ImagePart | FilePart,\n  downloadedAssets: Record<\n    string,\n    { mimeType: string | undefined; data: Uint8Array }\n  >,\n):\n  | LanguageModelV1TextPart\n  | LanguageModelV1ImagePart\n  | LanguageModelV1FilePart {\n  if (part.type === 'text') {\n    return {\n      type: 'text',\n      text: part.text,\n      providerMetadata:\n        part.providerOptions ?? part.experimental_providerMetadata,\n    };\n  }\n\n  let mimeType: string | undefined = part.mimeType;\n  let data: DataContent | URL;\n  let content: URL | ArrayBuffer | string;\n  let normalizedData: Uint8Array | URL;\n\n  const type = part.type;\n  switch (type) {\n    case 'image':\n      data = part.image;\n      break;\n    case 'file':\n      data = part.data;\n      break;\n    default:\n      throw new Error(`Unsupported part type: ${type}`);\n  }\n\n  // Attempt to create a URL from the data. If it fails, we can assume the data\n  // is not a URL and likely some other sort of data.\n  try {\n    content = typeof data === 'string' ? new URL(data) : data;\n  } catch (error) {\n    content = data;\n  }\n\n  // If we successfully created a URL, we can use that to normalize the data\n  // either by passing it through or converting normalizing the base64 content\n  // to a Uint8Array.\n  if (content instanceof URL) {\n    // If the content is a data URL, we want to convert that to a Uint8Array\n    if (content.protocol === 'data:') {\n      const { mimeType: dataUrlMimeType, base64Content } = splitDataUrl(\n        content.toString(),\n      );\n\n      if (dataUrlMimeType == null || base64Content == null) {\n        throw new Error(`Invalid data URL format in part ${type}`);\n      }\n\n      mimeType = dataUrlMimeType;\n      normalizedData = convertDataContentToUint8Array(base64Content);\n    } else {\n      /**\n       * If the content is a URL, we should first see if it was downloaded. And if not,\n       * we can let the model decide if it wants to support the URL. This also allows\n       * for non-HTTP URLs to be passed through (e.g. gs://).\n       */\n      const downloadedFile = downloadedAssets[content.toString()];\n      if (downloadedFile) {\n        normalizedData = downloadedFile.data;\n        mimeType ??= downloadedFile.mimeType;\n      } else {\n        normalizedData = content;\n      }\n    }\n  } else {\n    // Since we know now the content is not a URL, we can attempt to normalize\n    // the data assuming it is some sort of data.\n    normalizedData = convertDataContentToUint8Array(content);\n  }\n\n  // Now that we have the normalized data either as a URL or a Uint8Array,\n  // we can create the LanguageModelV1Part.\n  switch (type) {\n    case 'image': {\n      // When possible, try to detect the mimetype automatically\n      // to deal with incorrect mimetype inputs.\n      // When detection fails, use provided mimetype.\n\n      if (normalizedData instanceof Uint8Array) {\n        mimeType = detectImageMimeType(normalizedData) ?? mimeType;\n      }\n      return {\n        type: 'image',\n        image: normalizedData,\n        mimeType,\n        providerMetadata:\n          part.providerOptions ?? part.experimental_providerMetadata,\n      };\n    }\n\n    case 'file': {\n      // We should have a mimeType at this point, if not, throw an error.\n      if (mimeType == null) {\n        throw new Error(`Mime type is missing for file part`);\n      }\n\n      return {\n        type: 'file',\n        data:\n          normalizedData instanceof Uint8Array\n            ? convertDataContentToBase64String(normalizedData)\n            : normalizedData,\n        filename: part.filename,\n        mimeType,\n        providerMetadata:\n          part.providerOptions ?? part.experimental_providerMetadata,\n      };\n    }\n  }\n}\n","import { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport { CallSettings } from './call-settings';\n\n/**\n * Validates call settings and sets default values.\n */\nexport function prepareCallSettings({\n  maxTokens,\n  temperature,\n  topP,\n  topK,\n  presencePenalty,\n  frequencyPenalty,\n  stopSequences,\n  seed,\n}: Omit<CallSettings, 'abortSignal' | 'headers' | 'maxRetries'>): Omit<\n  CallSettings,\n  'abortSignal' | 'headers' | 'maxRetries'\n> {\n  if (maxTokens != null) {\n    if (!Number.isInteger(maxTokens)) {\n      throw new InvalidArgumentError({\n        parameter: 'maxTokens',\n        value: maxTokens,\n        message: 'maxTokens must be an integer',\n      });\n    }\n\n    if (maxTokens < 1) {\n      throw new InvalidArgumentError({\n        parameter: 'maxTokens',\n        value: maxTokens,\n        message: 'maxTokens must be >= 1',\n      });\n    }\n  }\n\n  if (temperature != null) {\n    if (typeof temperature !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'temperature',\n        value: temperature,\n        message: 'temperature must be a number',\n      });\n    }\n  }\n\n  if (topP != null) {\n    if (typeof topP !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'topP',\n        value: topP,\n        message: 'topP must be a number',\n      });\n    }\n  }\n\n  if (topK != null) {\n    if (typeof topK !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'topK',\n        value: topK,\n        message: 'topK must be a number',\n      });\n    }\n  }\n\n  if (presencePenalty != null) {\n    if (typeof presencePenalty !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'presencePenalty',\n        value: presencePenalty,\n        message: 'presencePenalty must be a number',\n      });\n    }\n  }\n\n  if (frequencyPenalty != null) {\n    if (typeof frequencyPenalty !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'frequencyPenalty',\n        value: frequencyPenalty,\n        message: 'frequencyPenalty must be a number',\n      });\n    }\n  }\n\n  if (seed != null) {\n    if (!Number.isInteger(seed)) {\n      throw new InvalidArgumentError({\n        parameter: 'seed',\n        value: seed,\n        message: 'seed must be an integer',\n      });\n    }\n  }\n\n  return {\n    maxTokens,\n    // TODO v5 remove default 0 for temperature\n    temperature: temperature ?? 0,\n    topP,\n    topK,\n    presencePenalty,\n    frequencyPenalty,\n    stopSequences:\n      stopSequences != null && stopSequences.length > 0\n        ? stopSequences\n        : undefined,\n    seed,\n  };\n}\n","import { InvalidPromptError } from '@ai-sdk/provider';\nimport { safeValidateTypes } from '@ai-sdk/provider-utils';\nimport { Message } from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { ToolSet } from '../generate-text/tool-set';\nimport { convertToCoreMessages } from './convert-to-core-messages';\nimport { detectPromptType } from './detect-prompt-type';\nimport { CoreMessage, coreMessageSchema } from './message';\nimport { Prompt } from './prompt';\n\nexport type StandardizedPrompt = {\n  /**\n   * Original prompt type. This is forwarded to the providers and can be used\n   * to write send raw text to providers that support it.\n   */\n  type: 'prompt' | 'messages';\n\n  /**\n   * System message.\n   */\n  system?: string;\n\n  /**\n   * Messages.\n   */\n  messages: CoreMessage[];\n};\n\nexport function standardizePrompt<TOOLS extends ToolSet>({\n  prompt,\n  tools,\n}: {\n  prompt: Prompt;\n  tools: undefined | TOOLS;\n}): StandardizedPrompt {\n  if (prompt.prompt == null && prompt.messages == null) {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'prompt or messages must be defined',\n    });\n  }\n\n  if (prompt.prompt != null && prompt.messages != null) {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'prompt and messages cannot be defined at the same time',\n    });\n  }\n\n  // validate that system is a string\n  if (prompt.system != null && typeof prompt.system !== 'string') {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'system must be a string',\n    });\n  }\n\n  // type: prompt\n  if (prompt.prompt != null) {\n    // validate that prompt is a string\n    if (typeof prompt.prompt !== 'string') {\n      throw new InvalidPromptError({\n        prompt,\n        message: 'prompt must be a string',\n      });\n    }\n\n    return {\n      type: 'prompt',\n      system: prompt.system,\n      messages: [\n        {\n          role: 'user',\n          content: prompt.prompt,\n        },\n      ],\n    };\n  }\n\n  // type: messages\n  if (prompt.messages != null) {\n    const promptType = detectPromptType(prompt.messages);\n\n    if (promptType === 'other') {\n      throw new InvalidPromptError({\n        prompt,\n        message: 'messages must be an array of CoreMessage or UIMessage',\n      });\n    }\n\n    const messages: CoreMessage[] =\n      promptType === 'ui-messages'\n        ? convertToCoreMessages(prompt.messages as Omit<Message, 'id'>[], {\n            tools,\n          })\n        : (prompt.messages as CoreMessage[]);\n\n    const validationResult = safeValidateTypes({\n      value: messages,\n      schema: z.array(coreMessageSchema),\n    });\n\n    if (!validationResult.success) {\n      throw new InvalidPromptError({\n        prompt,\n        message: 'messages must be an array of CoreMessage or UIMessage',\n        cause: validationResult.error,\n      });\n    }\n\n    return {\n      type: 'messages',\n      messages,\n      system: prompt.system,\n    };\n  }\n\n  throw new Error('unreachable');\n}\n","import { Attachment } from '@ai-sdk/ui-utils';\nimport { FilePart, ImagePart, TextPart } from './content-part';\nimport {\n  convertDataContentToUint8Array,\n  convertUint8ArrayToText,\n} from './data-content';\n\ntype ContentPart = TextPart | ImagePart | FilePart;\n\n/**\n * Converts a list of attachments to a list of content parts\n * for consumption by `ai/core` functions.\n * Currently only supports images and text attachments.\n */\nexport function attachmentsToParts(attachments: Attachment[]): ContentPart[] {\n  const parts: ContentPart[] = [];\n\n  for (const attachment of attachments) {\n    let url;\n\n    try {\n      url = new URL(attachment.url);\n    } catch (error) {\n      throw new Error(`Invalid URL: ${attachment.url}`);\n    }\n\n    switch (url.protocol) {\n      case 'http:':\n      case 'https:': {\n        if (attachment.contentType?.startsWith('image/')) {\n          parts.push({ type: 'image', image: url });\n        } else {\n          if (!attachment.contentType) {\n            throw new Error(\n              'If the attachment is not an image, it must specify a content type',\n            );\n          }\n\n          parts.push({\n            type: 'file',\n            data: url,\n            mimeType: attachment.contentType,\n          });\n        }\n        break;\n      }\n\n      case 'data:': {\n        let header;\n        let base64Content;\n        let mimeType;\n\n        try {\n          [header, base64Content] = attachment.url.split(',');\n          mimeType = header.split(';')[0].split(':')[1];\n        } catch (error) {\n          throw new Error(`Error processing data URL: ${attachment.url}`);\n        }\n\n        if (mimeType == null || base64Content == null) {\n          throw new Error(`Invalid data URL format: ${attachment.url}`);\n        }\n\n        if (attachment.contentType?.startsWith('image/')) {\n          parts.push({\n            type: 'image',\n            image: convertDataContentToUint8Array(base64Content),\n          });\n        } else if (attachment.contentType?.startsWith('text/')) {\n          parts.push({\n            type: 'text',\n            text: convertUint8ArrayToText(\n              convertDataContentToUint8Array(base64Content),\n            ),\n          });\n        } else {\n          if (!attachment.contentType) {\n            throw new Error(\n              'If the attachment is not an image or text, it must specify a content type',\n            );\n          }\n\n          parts.push({\n            type: 'file',\n            data: base64Content,\n            mimeType: attachment.contentType,\n          });\n        }\n\n        break;\n      }\n\n      default: {\n        throw new Error(`Unsupported URL protocol: ${url.protocol}`);\n      }\n    }\n  }\n\n  return parts;\n}\n","import { AISDKError } from '@ai-sdk/provider';\nimport { Message } from '@ai-sdk/ui-utils';\n\nconst name = 'AI_MessageConversionError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class MessageConversionError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly originalMessage: Omit<Message, 'id'>;\n\n  constructor({\n    originalMessage,\n    message,\n  }: {\n    originalMessage: Omit<Message, 'id'>;\n    message: string;\n  }) {\n    super({ name, message });\n\n    this.originalMessage = originalMessage;\n  }\n\n  static isInstance(error: unknown): error is MessageConversionError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import {\n  Message,\n  ReasoningUIPart,\n  TextUIPart,\n  ToolInvocationUIPart,\n} from '@ai-sdk/ui-utils';\nimport { ToolSet } from '../generate-text/tool-set';\nimport {\n  AssistantContent,\n  CoreMessage,\n  ToolCallPart,\n  ToolResultPart,\n} from '../prompt';\nimport { attachmentsToParts } from './attachments-to-parts';\nimport { MessageConversionError } from './message-conversion-error';\n\n/**\nConverts an array of messages from useChat into an array of CoreMessages that can be used\nwith the AI core functions (e.g. `streamText`).\n */\nexport function convertToCoreMessages<TOOLS extends ToolSet = never>(\n  messages: Array<Omit<Message, 'id'>>,\n  options?: { tools?: TOOLS },\n) {\n  const tools = options?.tools ?? ({} as TOOLS);\n  const coreMessages: CoreMessage[] = [];\n\n  for (let i = 0; i < messages.length; i++) {\n    const message = messages[i];\n    const isLastMessage = i === messages.length - 1;\n    const { role, content, experimental_attachments } = message;\n\n    switch (role) {\n      case 'system': {\n        coreMessages.push({\n          role: 'system',\n          content,\n        });\n        break;\n      }\n\n      case 'user': {\n        coreMessages.push({\n          role: 'user',\n          content: experimental_attachments\n            ? [\n                { type: 'text', text: content },\n                ...attachmentsToParts(experimental_attachments),\n              ]\n            : content,\n        });\n        break;\n      }\n\n      case 'assistant': {\n        if (message.parts != null) {\n          let currentStep = 0;\n          let blockHasToolInvocations = false;\n          let block: Array<\n            TextUIPart | ToolInvocationUIPart | ReasoningUIPart\n          > = [];\n\n          function processBlock() {\n            const content: AssistantContent = [];\n\n            for (const part of block) {\n              switch (part.type) {\n                case 'text':\n                  content.push({\n                    type: 'text' as const,\n                    text: part.text,\n                  });\n                  break;\n                case 'reasoning': {\n                  for (const detail of part.details) {\n                    switch (detail.type) {\n                      case 'text':\n                        content.push({\n                          type: 'reasoning' as const,\n                          text: detail.text,\n                          signature: detail.signature,\n                        });\n                        break;\n                      case 'redacted':\n                        content.push({\n                          type: 'redacted-reasoning' as const,\n                          data: detail.data,\n                        });\n                        break;\n                    }\n                  }\n                  break;\n                }\n                case 'tool-invocation':\n                  content.push({\n                    type: 'tool-call' as const,\n                    toolCallId: part.toolInvocation.toolCallId,\n                    toolName: part.toolInvocation.toolName,\n                    args: part.toolInvocation.args,\n                  });\n                  break;\n                default: {\n                  const _exhaustiveCheck: never = part;\n                  throw new Error(`Unsupported part: ${_exhaustiveCheck}`);\n                }\n              }\n            }\n\n            coreMessages.push({\n              role: 'assistant',\n              content,\n            });\n\n            // check if there are tool invocations with results in the block\n            const stepInvocations = block\n              .filter(\n                (\n                  part: TextUIPart | ToolInvocationUIPart | ReasoningUIPart,\n                ): part is ToolInvocationUIPart =>\n                  part.type === 'tool-invocation',\n              )\n              .map(part => part.toolInvocation);\n\n            // tool message with tool results\n            if (stepInvocations.length > 0) {\n              coreMessages.push({\n                role: 'tool',\n                content: stepInvocations.map(\n                  (toolInvocation): ToolResultPart => {\n                    if (!('result' in toolInvocation)) {\n                      throw new MessageConversionError({\n                        originalMessage: message,\n                        message:\n                          'ToolInvocation must have a result: ' +\n                          JSON.stringify(toolInvocation),\n                      });\n                    }\n\n                    const { toolCallId, toolName, result } = toolInvocation;\n\n                    const tool = tools[toolName];\n                    return tool?.experimental_toToolResultContent != null\n                      ? {\n                          type: 'tool-result',\n                          toolCallId,\n                          toolName,\n                          result: tool.experimental_toToolResultContent(result),\n                          experimental_content:\n                            tool.experimental_toToolResultContent(result),\n                        }\n                      : {\n                          type: 'tool-result',\n                          toolCallId,\n                          toolName,\n                          result,\n                        };\n                  },\n                ),\n              });\n            }\n\n            // updates for next block\n            block = [];\n            blockHasToolInvocations = false;\n            currentStep++;\n          }\n\n          for (const part of message.parts) {\n            switch (part.type) {\n              case 'reasoning':\n                block.push(part);\n                break;\n              case 'text': {\n                if (blockHasToolInvocations) {\n                  processBlock(); // text must come before tool invocations\n                }\n                block.push(part);\n                break;\n              }\n              case 'tool-invocation': {\n                if ((part.toolInvocation.step ?? 0) !== currentStep) {\n                  processBlock();\n                }\n                block.push(part);\n                blockHasToolInvocations = true;\n                break;\n              }\n            }\n          }\n\n          processBlock();\n\n          break;\n        }\n\n        const toolInvocations = message.toolInvocations;\n\n        if (toolInvocations == null || toolInvocations.length === 0) {\n          coreMessages.push({ role: 'assistant', content });\n          break;\n        }\n\n        const maxStep = toolInvocations.reduce((max, toolInvocation) => {\n          return Math.max(max, toolInvocation.step ?? 0);\n        }, 0);\n\n        for (let i = 0; i <= maxStep; i++) {\n          const stepInvocations = toolInvocations.filter(\n            toolInvocation => (toolInvocation.step ?? 0) === i,\n          );\n\n          if (stepInvocations.length === 0) {\n            continue;\n          }\n\n          // assistant message with tool calls\n          coreMessages.push({\n            role: 'assistant',\n            content: [\n              ...(isLastMessage && content && i === 0\n                ? [{ type: 'text' as const, text: content }]\n                : []),\n              ...stepInvocations.map(\n                ({ toolCallId, toolName, args }): ToolCallPart => ({\n                  type: 'tool-call' as const,\n                  toolCallId,\n                  toolName,\n                  args,\n                }),\n              ),\n            ],\n          });\n\n          // tool message with tool results\n          coreMessages.push({\n            role: 'tool',\n            content: stepInvocations.map((toolInvocation): ToolResultPart => {\n              if (!('result' in toolInvocation)) {\n                throw new MessageConversionError({\n                  originalMessage: message,\n                  message:\n                    'ToolInvocation must have a result: ' +\n                    JSON.stringify(toolInvocation),\n                });\n              }\n\n              const { toolCallId, toolName, result } = toolInvocation;\n\n              const tool = tools[toolName];\n              return tool?.experimental_toToolResultContent != null\n                ? {\n                    type: 'tool-result',\n                    toolCallId,\n                    toolName,\n                    result: tool.experimental_toToolResultContent(result),\n                    experimental_content:\n                      tool.experimental_toToolResultContent(result),\n                  }\n                : {\n                    type: 'tool-result',\n                    toolCallId,\n                    toolName,\n                    result,\n                  };\n            }),\n          });\n        }\n\n        if (content && !isLastMessage) {\n          coreMessages.push({ role: 'assistant', content });\n        }\n\n        break;\n      }\n\n      case 'data': {\n        // ignore\n        break;\n      }\n\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new MessageConversionError({\n          originalMessage: message,\n          message: `Unsupported role: ${_exhaustiveCheck}`,\n        });\n      }\n    }\n  }\n\n  return coreMessages;\n}\n","export function detectPromptType(\n  prompt: Array<any>,\n): 'ui-messages' | 'messages' | 'other' {\n  if (!Array.isArray(prompt)) {\n    return 'other';\n  }\n\n  if (prompt.length === 0) {\n    return 'messages';\n  }\n\n  const characteristics = prompt.map(detectSingleMessageCharacteristics);\n\n  if (characteristics.some(c => c === 'has-ui-specific-parts')) {\n    return 'ui-messages';\n  } else if (\n    characteristics.every(\n      c => c === 'has-core-specific-parts' || c === 'message',\n    )\n  ) {\n    return 'messages';\n  } else {\n    return 'other';\n  }\n}\n\nfunction detectSingleMessageCharacteristics(\n  message: any,\n): 'has-ui-specific-parts' | 'has-core-specific-parts' | 'message' | 'other' {\n  if (\n    typeof message === 'object' &&\n    message !== null &&\n    (message.role === 'function' || // UI-only role\n      message.role === 'data' || // UI-only role\n      'toolInvocations' in message || // UI-specific field\n      'experimental_attachments' in message)\n  ) {\n    return 'has-ui-specific-parts';\n  } else if (\n    typeof message === 'object' &&\n    message !== null &&\n    'content' in message &&\n    (Array.isArray(message.content) || // Core messages can have array content\n      'experimental_providerMetadata' in message ||\n      'providerOptions' in message)\n  ) {\n    return 'has-core-specific-parts';\n  } else if (\n    typeof message === 'object' &&\n    message !== null &&\n    'role' in message &&\n    'content' in message &&\n    typeof message.content === 'string' &&\n    ['system', 'user', 'assistant', 'tool'].includes(message.role)\n  ) {\n    return 'message';\n  } else {\n    return 'other';\n  }\n}\n","import { z } from 'zod';\nimport { ProviderMetadata } from '../types';\nimport {\n  providerMetadataSchema,\n  ProviderOptions,\n} from '../types/provider-metadata';\nimport {\n  FilePart,\n  filePartSchema,\n  ImagePart,\n  imagePartSchema,\n  ReasoningPart,\n  reasoningPartSchema,\n  RedactedReasoningPart,\n  redactedReasoningPartSchema,\n  TextPart,\n  textPartSchema,\n  ToolCallPart,\n  toolCallPartSchema,\n  ToolResultPart,\n  toolResultPartSchema,\n} from './content-part';\n\n/**\n A system message. It can contain system information.\n\n Note: using the \"system\" part of the prompt is strongly preferred\n to increase the resilience against prompt injection attacks,\n and because not all providers support several system messages.\n */\nexport type CoreSystemMessage = {\n  role: 'system';\n  content: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n};\n\nexport const coreSystemMessageSchema: z.ZodType<CoreSystemMessage> = z.object({\n  role: z.literal('system'),\n  content: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nA user message. It can contain text or a combination of text and images.\n */\nexport type CoreUserMessage = {\n  role: 'user';\n  content: UserContent;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n*/\n  experimental_providerMetadata?: ProviderMetadata;\n};\n\nexport const coreUserMessageSchema: z.ZodType<CoreUserMessage> = z.object({\n  role: z.literal('user'),\n  content: z.union([\n    z.string(),\n    z.array(z.union([textPartSchema, imagePartSchema, filePartSchema])),\n  ]),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nContent of a user message. It can be a string or an array of text and image parts.\n */\nexport type UserContent = string | Array<TextPart | ImagePart | FilePart>;\n\n/**\nAn assistant message. It can contain text, tool calls, or a combination of text and tool calls.\n */\nexport type CoreAssistantMessage = {\n  role: 'assistant';\n  content: AssistantContent;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n*/\n  experimental_providerMetadata?: ProviderMetadata;\n};\n\nexport const coreAssistantMessageSchema: z.ZodType<CoreAssistantMessage> =\n  z.object({\n    role: z.literal('assistant'),\n    content: z.union([\n      z.string(),\n      z.array(\n        z.union([\n          textPartSchema,\n          reasoningPartSchema,\n          redactedReasoningPartSchema,\n          toolCallPartSchema,\n        ]),\n      ),\n    ]),\n    providerOptions: providerMetadataSchema.optional(),\n    experimental_providerMetadata: providerMetadataSchema.optional(),\n  });\n\n/**\nContent of an assistant message. It can be a string or an array of text and tool call parts.\n */\nexport type AssistantContent =\n  | string\n  | Array<TextPart | ReasoningPart | RedactedReasoningPart | ToolCallPart>;\n\n/**\nA tool message. It contains the result of one or more tool calls.\n */\nexport type CoreToolMessage = {\n  role: 'tool';\n  content: ToolContent;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n*/\n  experimental_providerMetadata?: ProviderMetadata;\n};\n\nexport const coreToolMessageSchema: z.ZodType<CoreToolMessage> = z.object({\n  role: z.literal('tool'),\n  content: z.array(toolResultPartSchema),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nContent of a tool message. It is an array of tool result parts.\n */\nexport type ToolContent = Array<ToolResultPart>;\n\n/**\nA message that can be used in the `messages` field of a prompt.\nIt can be a user message, an assistant message, or a tool message.\n */\nexport type CoreMessage =\n  | CoreSystemMessage\n  | CoreUserMessage\n  | CoreAssistantMessage\n  | CoreToolMessage;\n\nexport const coreMessageSchema: z.ZodType<CoreMessage> = z.union([\n  coreSystemMessageSchema,\n  coreUserMessageSchema,\n  coreAssistantMessageSchema,\n  coreToolMessageSchema,\n]);\n","import { LanguageModelV1ProviderMetadata } from '@ai-sdk/provider';\nimport { z } from 'zod';\nimport { jsonValueSchema } from './json-value';\n\n/**\nAdditional provider-specific metadata that is returned from the provider.\n\nThis is needed to enable provider-specific functionality that can be\nfully encapsulated in the provider.\n */\nexport type ProviderMetadata = LanguageModelV1ProviderMetadata;\n\n/**\nAdditional provider-specific options.\n\nThey are passed through to the provider from the AI SDK and enable\nprovider-specific functionality that can be fully encapsulated in the provider.\n */\n// TODO change to LanguageModelV2ProviderOptions in language model v2\nexport type ProviderOptions = LanguageModelV1ProviderMetadata;\n\nexport const providerMetadataSchema: z.ZodType<ProviderMetadata> = z.record(\n  z.string(),\n  z.record(z.string(), jsonValueSchema),\n);\n","import { JSONValue } from '@ai-sdk/provider';\nimport { z } from 'zod';\n\nexport const jsonValueSchema: z.ZodType<JSONValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.string(),\n    z.number(),\n    z.boolean(),\n    z.record(z.string(), jsonValueSchema),\n    z.array(jsonValueSchema),\n  ]),\n);\n","import { z } from 'zod';\nimport {\n  ProviderMetadata,\n  providerMetadataSchema,\n  ProviderOptions,\n} from '../types/provider-metadata';\nimport { DataContent, dataContentSchema } from './data-content';\nimport {\n  ToolResultContent,\n  toolResultContentSchema,\n} from './tool-result-content';\n\n/**\nText content part of a prompt. It contains a string of text.\n */\nexport interface TextPart {\n  type: 'text';\n\n  /**\nThe text content.\n   */\n  text: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const textPartSchema: z.ZodType<TextPart> = z.object({\n  type: z.literal('text'),\n  text: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nImage content part of a prompt. It contains an image.\n */\nexport interface ImagePart {\n  type: 'image';\n\n  /**\nImage data. Can either be:\n\n- data: a base64-encoded string, a Uint8Array, an ArrayBuffer, or a Buffer\n- URL: a URL that points to the image\n   */\n  image: DataContent | URL;\n\n  /**\nOptional mime type of the image.\n   */\n  mimeType?: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const imagePartSchema: z.ZodType<ImagePart> = z.object({\n  type: z.literal('image'),\n  image: z.union([dataContentSchema, z.instanceof(URL)]),\n  mimeType: z.string().optional(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nFile content part of a prompt. It contains a file.\n */\nexport interface FilePart {\n  type: 'file';\n\n  /**\nFile data. Can either be:\n\n- data: a base64-encoded string, a Uint8Array, an ArrayBuffer, or a Buffer\n- URL: a URL that points to the image\n   */\n  data: DataContent | URL;\n\n  /**\nOptional filename of the file.\n   */\n  filename?: string;\n\n  /**\nMime type of the file.\n   */\n  mimeType: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const filePartSchema: z.ZodType<FilePart> = z.object({\n  type: z.literal('file'),\n  data: z.union([dataContentSchema, z.instanceof(URL)]),\n  filename: z.string().optional(),\n  mimeType: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\n * Reasoning content part of a prompt. It contains a reasoning.\n */\nexport interface ReasoningPart {\n  type: 'reasoning';\n\n  /**\nThe reasoning text.\n   */\n  text: string;\n\n  /**\nAn optional signature for verifying that the reasoning originated from the model.\n   */\n  signature?: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const reasoningPartSchema: z.ZodType<ReasoningPart> = z.object({\n  type: z.literal('reasoning'),\n  text: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nRedacted reasoning content part of a prompt.\n */\nexport interface RedactedReasoningPart {\n  type: 'redacted-reasoning';\n\n  /**\nRedacted reasoning data.\n   */\n  data: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const redactedReasoningPartSchema: z.ZodType<RedactedReasoningPart> =\n  z.object({\n    type: z.literal('redacted-reasoning'),\n    data: z.string(),\n    providerOptions: providerMetadataSchema.optional(),\n    experimental_providerMetadata: providerMetadataSchema.optional(),\n  });\n\n/**\nTool call content part of a prompt. It contains a tool call (usually generated by the AI model).\n */\nexport interface ToolCallPart {\n  type: 'tool-call';\n\n  /**\nID of the tool call. This ID is used to match the tool call with the tool result.\n */\n  toolCallId: string;\n\n  /**\nName of the tool that is being called.\n */\n  toolName: string;\n\n  /**\nArguments of the tool call. This is a JSON-serializable object that matches the tool's input schema.\n   */\n  args: unknown;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const toolCallPartSchema: z.ZodType<ToolCallPart> = z.object({\n  type: z.literal('tool-call'),\n  toolCallId: z.string(),\n  toolName: z.string(),\n  args: z.unknown(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n}) as z.ZodType<ToolCallPart>; // necessary bc args is optional on Zod type\n\n/**\nTool result content part of a prompt. It contains the result of the tool call with the matching ID.\n */\nexport interface ToolResultPart {\n  type: 'tool-result';\n\n  /**\nID of the tool call that this result is associated with.\n */\n  toolCallId: string;\n\n  /**\nName of the tool that generated this result.\n  */\n  toolName: string;\n\n  /**\nResult of the tool call. This is a JSON-serializable object.\n   */\n  result: unknown;\n\n  /**\nMulti-part content of the tool result. Only for tools that support multipart results.\n   */\n  experimental_content?: ToolResultContent;\n\n  /**\nOptional flag if the result is an error or an error message.\n   */\n  isError?: boolean;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const toolResultPartSchema: z.ZodType<ToolResultPart> = z.object({\n  type: z.literal('tool-result'),\n  toolCallId: z.string(),\n  toolName: z.string(),\n  result: z.unknown(),\n  content: toolResultContentSchema.optional(),\n  isError: z.boolean().optional(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n}) as z.ZodType<ToolResultPart>; // necessary bc result is optional on Zod type\n","import { z } from 'zod';\n\nexport type ToolResultContent = Array<\n  | {\n      type: 'text';\n      text: string;\n    }\n  | {\n      type: 'image';\n      data: string; // base64 encoded png image, e.g. screenshot\n      mimeType?: string; // e.g. 'image/png';\n    }\n>;\n\nexport const toolResultContentSchema: z.ZodType<ToolResultContent> = z.array(\n  z.union([\n    z.object({ type: z.literal('text'), text: z.string() }),\n    z.object({\n      type: z.literal('image'),\n      data: z.string(),\n      mimeType: z.string().optional(),\n    }),\n  ]),\n);\n\nexport function isToolResultContent(\n  value: unknown,\n): value is ToolResultContent {\n  if (!Array.isArray(value) || value.length === 0) {\n    return false;\n  }\n\n  return value.every(part => {\n    if (typeof part !== 'object' || part === null) {\n      return false;\n    }\n\n    if (part.type === 'text') {\n      return typeof part.text === 'string';\n    }\n\n    if (part.type === 'image') {\n      return (\n        typeof part.data === 'string' &&\n        (part.mimeType === undefined || typeof part.mimeType === 'string')\n      );\n    }\n\n    return false;\n  });\n}\n","/**\nRepresents the number of tokens used in a prompt and completion.\n */\nexport type LanguageModelUsage = {\n  /**\nThe number of tokens used in the prompt.\n   */\n  promptTokens: number;\n\n  /**\nThe number of tokens used in the completion.\n */\n  completionTokens: number;\n\n  /**\nThe total number of tokens used (promptTokens + completionTokens).\n   */\n  totalTokens: number;\n};\n\n/**\nRepresents the number of tokens used in an embedding.\n */\nexport type EmbeddingModelUsage = {\n  /**\nThe number of tokens used in the embedding.\n   */\n  tokens: number;\n};\n\nexport function calculateLanguageModelUsage({\n  promptTokens,\n  completionTokens,\n}: {\n  promptTokens: number;\n  completionTokens: number;\n}): LanguageModelUsage {\n  return {\n    promptTokens,\n    completionTokens,\n    totalTokens: promptTokens + completionTokens,\n  };\n}\n\nexport function addLanguageModelUsage(\n  usage1: LanguageModelUsage,\n  usage2: LanguageModelUsage,\n): LanguageModelUsage {\n  return {\n    promptTokens: usage1.promptTokens + usage2.promptTokens,\n    completionTokens: usage1.completionTokens + usage2.completionTokens,\n    totalTokens: usage1.totalTokens + usage2.totalTokens,\n  };\n}\n","import { JSONSchema7 } from '@ai-sdk/provider';\n\nconst DEFAULT_SCHEMA_PREFIX = 'JSON schema:';\nconst DEFAULT_SCHEMA_SUFFIX =\n  'You MUST answer with a JSON object that matches the JSON schema above.';\nconst DEFAULT_GENERIC_SUFFIX = 'You MUST answer with JSON.';\n\nexport function injectJsonInstruction({\n  prompt,\n  schema,\n  schemaPrefix = schema != null ? DEFAULT_SCHEMA_PREFIX : undefined,\n  schemaSuffix = schema != null\n    ? DEFAULT_SCHEMA_SUFFIX\n    : DEFAULT_GENERIC_SUFFIX,\n}: {\n  prompt?: string;\n  schema?: JSONSchema7;\n  schemaPrefix?: string;\n  schemaSuffix?: string;\n}): string {\n  return [\n    prompt != null && prompt.length > 0 ? prompt : undefined,\n    prompt != null && prompt.length > 0 ? '' : undefined, // add a newline if prompt is not null\n    schemaPrefix,\n    schema != null ? JSON.stringify(schema) : undefined,\n    schemaSuffix,\n  ]\n    .filter(line => line != null)\n    .join('\\n');\n}\n","import {\n  isJSONArray,\n  isJSONObject,\n  JSONObject,\n  JSONSchema7,\n  JSONValue,\n  TypeValidationError,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { safeValidateTypes, ValidationResult } from '@ai-sdk/provider-utils';\nimport { asSchema, DeepPartial, Schema } from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { NoObjectGeneratedError } from '../../errors/no-object-generated-error';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { ObjectStreamPart } from './stream-object-result';\nimport { LanguageModelResponseMetadata, LanguageModelUsage } from '../types';\n\nexport interface OutputStrategy<PARTIAL, RESULT, ELEMENT_STREAM> {\n  readonly type: 'object' | 'array' | 'enum' | 'no-schema';\n  readonly jsonSchema: JSONSchema7 | undefined;\n\n  validatePartialResult({\n    value,\n    textDelta,\n    isFinalDelta,\n  }: {\n    value: JSONValue;\n    textDelta: string;\n    isFirstDelta: boolean;\n    isFinalDelta: boolean;\n    latestObject: PARTIAL | undefined;\n  }): ValidationResult<{\n    partial: PARTIAL;\n    textDelta: string;\n  }>;\n  validateFinalResult(\n    value: JSONValue | undefined,\n    context: {\n      text: string;\n      response: LanguageModelResponseMetadata;\n      usage: LanguageModelUsage;\n    },\n  ): ValidationResult<RESULT>;\n\n  createElementStream(\n    originalStream: ReadableStream<ObjectStreamPart<PARTIAL>>,\n  ): ELEMENT_STREAM;\n}\n\nconst noSchemaOutputStrategy: OutputStrategy<JSONValue, JSONValue, never> = {\n  type: 'no-schema',\n  jsonSchema: undefined,\n\n  validatePartialResult({ value, textDelta }) {\n    return { success: true, value: { partial: value, textDelta } };\n  },\n\n  validateFinalResult(\n    value: JSONValue | undefined,\n    context: {\n      text: string;\n      response: LanguageModelResponseMetadata;\n      usage: LanguageModelUsage;\n    },\n  ): ValidationResult<JSONValue> {\n    return value === undefined\n      ? {\n          success: false,\n          error: new NoObjectGeneratedError({\n            message: 'No object generated: response did not match schema.',\n            text: context.text,\n            response: context.response,\n            usage: context.usage,\n          }),\n        }\n      : { success: true, value };\n  },\n\n  createElementStream() {\n    throw new UnsupportedFunctionalityError({\n      functionality: 'element streams in no-schema mode',\n    });\n  },\n};\n\nconst objectOutputStrategy = <OBJECT>(\n  schema: Schema<OBJECT>,\n): OutputStrategy<DeepPartial<OBJECT>, OBJECT, never> => ({\n  type: 'object',\n  jsonSchema: schema.jsonSchema,\n\n  validatePartialResult({ value, textDelta }) {\n    return {\n      success: true,\n      value: {\n        // Note: currently no validation of partial results:\n        partial: value as DeepPartial<OBJECT>,\n        textDelta,\n      },\n    };\n  },\n\n  validateFinalResult(value: JSONValue | undefined): ValidationResult<OBJECT> {\n    return safeValidateTypes({ value, schema });\n  },\n\n  createElementStream() {\n    throw new UnsupportedFunctionalityError({\n      functionality: 'element streams in object mode',\n    });\n  },\n});\n\nconst arrayOutputStrategy = <ELEMENT>(\n  schema: Schema<ELEMENT>,\n): OutputStrategy<ELEMENT[], ELEMENT[], AsyncIterableStream<ELEMENT>> => {\n  // remove $schema from schema.jsonSchema:\n  const { $schema, ...itemSchema } = schema.jsonSchema;\n\n  return {\n    type: 'enum',\n\n    // wrap in object that contains array of elements, since most LLMs will not\n    // be able to generate an array directly:\n    // possible future optimization: use arrays directly when model supports grammar-guided generation\n    jsonSchema: {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      type: 'object',\n      properties: {\n        elements: { type: 'array', items: itemSchema },\n      },\n      required: ['elements'],\n      additionalProperties: false,\n    },\n\n    validatePartialResult({ value, latestObject, isFirstDelta, isFinalDelta }) {\n      // check that the value is an object that contains an array of elements:\n      if (!isJSONObject(value) || !isJSONArray(value.elements)) {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: 'value must be an object that contains an array of elements',\n          }),\n        };\n      }\n\n      const inputArray = value.elements as Array<JSONObject>;\n      const resultArray: Array<ELEMENT> = [];\n\n      for (let i = 0; i < inputArray.length; i++) {\n        const element = inputArray[i];\n        const result = safeValidateTypes({ value: element, schema });\n\n        // special treatment for last processed element:\n        // ignore parse or validation failures, since they indicate that the\n        // last element is incomplete and should not be included in the result,\n        // unless it is the final delta\n        if (i === inputArray.length - 1 && !isFinalDelta) {\n          continue;\n        }\n\n        if (!result.success) {\n          return result;\n        }\n\n        resultArray.push(result.value);\n      }\n\n      // calculate delta:\n      const publishedElementCount = latestObject?.length ?? 0;\n\n      let textDelta = '';\n\n      if (isFirstDelta) {\n        textDelta += '[';\n      }\n\n      if (publishedElementCount > 0) {\n        textDelta += ',';\n      }\n\n      textDelta += resultArray\n        .slice(publishedElementCount) // only new elements\n        .map(element => JSON.stringify(element))\n        .join(',');\n\n      if (isFinalDelta) {\n        textDelta += ']';\n      }\n\n      return {\n        success: true,\n        value: {\n          partial: resultArray,\n          textDelta,\n        },\n      };\n    },\n\n    validateFinalResult(\n      value: JSONValue | undefined,\n    ): ValidationResult<Array<ELEMENT>> {\n      // check that the value is an object that contains an array of elements:\n      if (!isJSONObject(value) || !isJSONArray(value.elements)) {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: 'value must be an object that contains an array of elements',\n          }),\n        };\n      }\n\n      const inputArray = value.elements as Array<JSONObject>;\n\n      // check that each element in the array is of the correct type:\n      for (const element of inputArray) {\n        const result = safeValidateTypes({ value: element, schema });\n        if (!result.success) {\n          return result;\n        }\n      }\n\n      return { success: true, value: inputArray as Array<ELEMENT> };\n    },\n\n    createElementStream(\n      originalStream: ReadableStream<ObjectStreamPart<ELEMENT[]>>,\n    ) {\n      let publishedElements = 0;\n\n      return createAsyncIterableStream(\n        originalStream.pipeThrough(\n          new TransformStream<ObjectStreamPart<ELEMENT[]>, ELEMENT>({\n            transform(chunk, controller) {\n              switch (chunk.type) {\n                case 'object': {\n                  const array = chunk.object;\n\n                  // publish new elements one by one:\n                  for (\n                    ;\n                    publishedElements < array.length;\n                    publishedElements++\n                  ) {\n                    controller.enqueue(array[publishedElements]);\n                  }\n\n                  break;\n                }\n\n                case 'text-delta':\n                case 'finish':\n                case 'error': // suppress error (use onError instead)\n                  break;\n\n                default: {\n                  const _exhaustiveCheck: never = chunk;\n                  throw new Error(\n                    `Unsupported chunk type: ${_exhaustiveCheck}`,\n                  );\n                }\n              }\n            },\n          }),\n        ),\n      );\n    },\n  };\n};\n\nconst enumOutputStrategy = <ENUM extends string>(\n  enumValues: Array<ENUM>,\n): OutputStrategy<ENUM, ENUM, never> => {\n  return {\n    type: 'enum',\n\n    // wrap in object that contains result, since most LLMs will not\n    // be able to generate an enum value directly:\n    // possible future optimization: use enums directly when model supports top-level enums\n    jsonSchema: {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      type: 'object',\n      properties: {\n        result: { type: 'string', enum: enumValues },\n      },\n      required: ['result'],\n      additionalProperties: false,\n    },\n\n    validateFinalResult(value: JSONValue | undefined): ValidationResult<ENUM> {\n      // check that the value is an object that contains an array of elements:\n      if (!isJSONObject(value) || typeof value.result !== 'string') {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause:\n              'value must be an object that contains a string in the \"result\" property.',\n          }),\n        };\n      }\n\n      const result = value.result as string;\n\n      return enumValues.includes(result as ENUM)\n        ? { success: true, value: result as ENUM }\n        : {\n            success: false,\n            error: new TypeValidationError({\n              value,\n              cause: 'value must be a string in the enum',\n            }),\n          };\n    },\n\n    validatePartialResult() {\n      // no streaming in enum mode\n      throw new UnsupportedFunctionalityError({\n        functionality: 'partial results in enum mode',\n      });\n    },\n\n    createElementStream() {\n      // no streaming in enum mode\n      throw new UnsupportedFunctionalityError({\n        functionality: 'element streams in enum mode',\n      });\n    },\n  };\n};\n\nexport function getOutputStrategy<SCHEMA>({\n  output,\n  schema,\n  enumValues,\n}: {\n  output: 'object' | 'array' | 'enum' | 'no-schema';\n  schema?: z.Schema<SCHEMA, z.ZodTypeDef, any> | Schema<SCHEMA>;\n  enumValues?: Array<SCHEMA>;\n}): OutputStrategy<any, any, any> {\n  switch (output) {\n    case 'object':\n      return objectOutputStrategy(asSchema(schema!));\n    case 'array':\n      return arrayOutputStrategy(asSchema(schema!));\n    case 'enum':\n      return enumOutputStrategy(enumValues! as Array<string>);\n    case 'no-schema':\n      return noSchemaOutputStrategy;\n    default: {\n      const _exhaustiveCheck: never = output;\n      throw new Error(`Unsupported output: ${_exhaustiveCheck}`);\n    }\n  }\n}\n","export type AsyncIterableStream<T> = AsyncIterable<T> & ReadableStream<T>;\n\nexport function createAsyncIterableStream<T>(\n  source: ReadableStream<T>,\n): AsyncIterableStream<T> {\n  const stream = source.pipeThrough(new TransformStream<T, T>());\n\n  (stream as AsyncIterableStream<T>)[Symbol.asyncIterator] = () => {\n    const reader = stream.getReader();\n    return {\n      async next(): Promise<IteratorResult<T>> {\n        const { done, value } = await reader.read();\n        return done ? { done: true, value: undefined } : { done: false, value };\n      },\n    };\n  };\n\n  return stream as AsyncIterableStream<T>;\n}\n","import { z } from 'zod';\nimport { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport { Schema } from '@ai-sdk/ui-utils';\n\nexport function validateObjectGenerationInput({\n  output,\n  mode,\n  schema,\n  schemaName,\n  schemaDescription,\n  enumValues,\n}: {\n  output?: 'object' | 'array' | 'enum' | 'no-schema';\n  schema?: z.Schema<any, z.ZodTypeDef, any> | Schema<any>;\n  schemaName?: string;\n  schemaDescription?: string;\n  enumValues?: Array<unknown>;\n  mode?: 'auto' | 'json' | 'tool';\n}) {\n  if (\n    output != null &&\n    output !== 'object' &&\n    output !== 'array' &&\n    output !== 'enum' &&\n    output !== 'no-schema'\n  ) {\n    throw new InvalidArgumentError({\n      parameter: 'output',\n      value: output,\n      message: 'Invalid output type.',\n    });\n  }\n\n  if (output === 'no-schema') {\n    if (mode === 'auto' || mode === 'tool') {\n      throw new InvalidArgumentError({\n        parameter: 'mode',\n        value: mode,\n        message: 'Mode must be \"json\" for no-schema output.',\n      });\n    }\n\n    if (schema != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Schema is not supported for no-schema output.',\n      });\n    }\n\n    if (schemaDescription != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaDescription',\n        value: schemaDescription,\n        message: 'Schema description is not supported for no-schema output.',\n      });\n    }\n\n    if (schemaName != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaName',\n        value: schemaName,\n        message: 'Schema name is not supported for no-schema output.',\n      });\n    }\n\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are not supported for no-schema output.',\n      });\n    }\n  }\n\n  if (output === 'object') {\n    if (schema == null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Schema is required for object output.',\n      });\n    }\n\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are not supported for object output.',\n      });\n    }\n  }\n\n  if (output === 'array') {\n    if (schema == null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Element schema is required for array output.',\n      });\n    }\n\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are not supported for array output.',\n      });\n    }\n  }\n\n  if (output === 'enum') {\n    if (schema != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Schema is not supported for enum output.',\n      });\n    }\n\n    if (schemaDescription != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaDescription',\n        value: schemaDescription,\n        message: 'Schema description is not supported for enum output.',\n      });\n    }\n\n    if (schemaName != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaName',\n        value: schemaName,\n        message: 'Schema name is not supported for enum output.',\n      });\n    }\n\n    if (enumValues == null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are required for enum output.',\n      });\n    }\n\n    for (const value of enumValues) {\n      if (typeof value !== 'string') {\n        throw new InvalidArgumentError({\n          parameter: 'enumValues',\n          value,\n          message: 'Enum values must be strings.',\n        });\n      }\n    }\n  }\n}\n","import {\n  JSONValue,\n  LanguageModelV1CallOptions,\n  LanguageModelV1FinishReason,\n  LanguageModelV1StreamPart,\n} from '@ai-sdk/provider';\nimport { createIdGenerator } from '@ai-sdk/provider-utils';\nimport {\n  DeepPartial,\n  Schema,\n  isDeepEqualData,\n  parsePartialJson,\n} from '@ai-sdk/ui-utils';\nimport { ServerResponse } from 'http';\nimport { z } from 'zod';\nimport { NoObjectGeneratedError } from '../../errors/no-object-generated-error';\nimport { DelayedPromise } from '../../util/delayed-promise';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport {\n  CallWarning,\n  FinishReason,\n  LanguageModel,\n  LogProbs,\n} from '../types/language-model';\nimport { LanguageModelRequestMetadata } from '../types/language-model-request-metadata';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { ProviderMetadata, ProviderOptions } from '../types/provider-metadata';\nimport {\n  LanguageModelUsage,\n  calculateLanguageModelUsage,\n} from '../types/usage';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { createStitchableStream } from '../util/create-stitchable-stream';\nimport { now as originalNow } from '../util/now';\nimport { prepareOutgoingHttpHeaders } from '../util/prepare-outgoing-http-headers';\nimport { prepareResponseHeaders } from '../util/prepare-response-headers';\nimport { writeToServerResponse } from '../util/write-to-server-response';\nimport { injectJsonInstruction } from './inject-json-instruction';\nimport { OutputStrategy, getOutputStrategy } from './output-strategy';\nimport { ObjectStreamPart, StreamObjectResult } from './stream-object-result';\nimport { validateObjectGenerationInput } from './validate-object-generation-input';\n\nconst originalGenerateId = createIdGenerator({ prefix: 'aiobj', size: 24 });\n\n/**\nCallback that is set using the `onError` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamObjectOnErrorCallback = (event: {\n  error: unknown;\n}) => Promise<void> | void;\n\n/**\nCallback that is set using the `onFinish` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamObjectOnFinishCallback<RESULT> = (event: {\n  /**\nThe token usage of the generated response.\n*/\n  usage: LanguageModelUsage;\n\n  /**\nThe generated object. Can be undefined if the final object does not match the schema.\n*/\n  object: RESULT | undefined;\n\n  /**\nOptional error object. This is e.g. a TypeValidationError when the final object does not match the schema.\n*/\n  error: unknown | undefined;\n\n  /**\nResponse metadata.\n */\n  response: LanguageModelResponseMetadata;\n\n  /**\nWarnings from the model provider (e.g. unsupported settings).\n*/\n  warnings?: CallWarning[];\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n*/\n  providerMetadata: ProviderMetadata | undefined;\n\n  /**\n@deprecated Use `providerMetadata` instead.\n*/\n  experimental_providerMetadata?: ProviderMetadata;\n}) => Promise<void> | void;\n\n/**\nGenerate a structured, typed object for a given prompt and schema using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateObject` instead.\n\n@return\nA result object for accessing the partial object stream and additional information.\n */\nexport function streamObject<OBJECT>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output?: 'object' | undefined;\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe schema of the object that the model should generate.\n */\n      schema: z.Schema<OBJECT, z.ZodTypeDef, any> | Schema<OBJECT>;\n\n      /**\nOptional name of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n     */\n      schemaName?: string;\n\n      /**\nOptional description of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n */\n      schemaDescription?: string;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n      onError?: StreamObjectOnErrorCallback;\n\n      /**\nCallback that is called when the LLM response and the final object validation are finished.\n     */\n      onFinish?: StreamObjectOnFinishCallback<OBJECT>;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n        now?: () => number;\n      };\n    },\n): StreamObjectResult<DeepPartial<OBJECT>, OBJECT, never>;\n/**\nGenerate an array with structured, typed elements for a given prompt and element schema using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateObject` instead.\n\n@return\nA result object for accessing the partial object stream and additional information.\n */\nexport function streamObject<ELEMENT>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'array';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe element schema of the array that the model should generate.\n */\n      schema: z.Schema<ELEMENT, z.ZodTypeDef, any> | Schema<ELEMENT>;\n\n      /**\nOptional name of the array that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n     */\n      schemaName?: string;\n\n      /**\nOptional description of the array that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n */\n      schemaDescription?: string;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n      onError?: StreamObjectOnErrorCallback;\n\n      /**\nCallback that is called when the LLM response and the final object validation are finished.\n     */\n      onFinish?: StreamObjectOnFinishCallback<Array<ELEMENT>>;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n        now?: () => number;\n      };\n    },\n): StreamObjectResult<\n  Array<ELEMENT>,\n  Array<ELEMENT>,\n  AsyncIterableStream<ELEMENT>\n>;\n/**\nGenerate JSON with any schema for a given prompt using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateObject` instead.\n\n@return\nA result object for accessing the partial object stream and additional information.\n */\nexport function streamObject(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'no-schema';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe mode to use for object generation. Must be \"json\" for no-schema output.\n     */\n      mode?: 'json';\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n      onError?: StreamObjectOnErrorCallback;\n\n      /**\nCallback that is called when the LLM response and the final object validation are finished.\n     */\n      onFinish?: StreamObjectOnFinishCallback<JSONValue>;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n        now?: () => number;\n      };\n    },\n): StreamObjectResult<JSONValue, JSONValue, never>;\nexport function streamObject<SCHEMA, PARTIAL, RESULT, ELEMENT_STREAM>({\n  model,\n  schema: inputSchema,\n  schemaName,\n  schemaDescription,\n  mode,\n  output = 'object',\n  system,\n  prompt,\n  messages,\n  maxRetries,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata,\n  providerOptions = experimental_providerMetadata,\n  onError,\n  onFinish,\n  _internal: {\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n    now = originalNow,\n  } = {},\n  ...settings\n}: Omit<CallSettings, 'stopSequences'> &\n  Prompt & {\n    /**\n     * The expected structure of the output.\n     *\n     * - 'object': Generate a single object that conforms to the schema.\n     * - 'array': Generate an array of objects that conform to the schema.\n     * - 'no-schema': Generate any JSON object. No schema is specified.\n     *\n     * Default is 'object' if not specified.\n     */\n    output?: 'object' | 'array' | 'no-schema';\n\n    model: LanguageModel;\n    schema?: z.Schema<SCHEMA, z.ZodTypeDef, any> | Schema<SCHEMA>;\n    schemaName?: string;\n    schemaDescription?: string;\n    mode?: 'auto' | 'json' | 'tool';\n    experimental_telemetry?: TelemetrySettings;\n    providerOptions?: ProviderOptions;\n    experimental_providerMetadata?: ProviderMetadata;\n    onError?: StreamObjectOnErrorCallback;\n    onFinish?: StreamObjectOnFinishCallback<RESULT>;\n    _internal?: {\n      generateId?: () => string;\n      currentDate?: () => Date;\n      now?: () => number;\n    };\n  }): StreamObjectResult<PARTIAL, RESULT, ELEMENT_STREAM> {\n  validateObjectGenerationInput({\n    output,\n    mode,\n    schema: inputSchema,\n    schemaName,\n    schemaDescription,\n  });\n\n  const outputStrategy = getOutputStrategy({ output, schema: inputSchema });\n\n  // automatically set mode to 'json' for no-schema output\n  if (outputStrategy.type === 'no-schema' && mode === undefined) {\n    mode = 'json';\n  }\n\n  return new DefaultStreamObjectResult({\n    model,\n    telemetry,\n    headers,\n    settings,\n    maxRetries,\n    abortSignal,\n    outputStrategy,\n    system,\n    prompt,\n    messages,\n    schemaName,\n    schemaDescription,\n    providerOptions,\n    mode,\n    onError,\n    onFinish,\n    generateId,\n    currentDate,\n    now,\n  });\n}\n\nclass DefaultStreamObjectResult<PARTIAL, RESULT, ELEMENT_STREAM>\n  implements StreamObjectResult<PARTIAL, RESULT, ELEMENT_STREAM>\n{\n  private readonly objectPromise = new DelayedPromise<RESULT>();\n  private readonly usagePromise = new DelayedPromise<LanguageModelUsage>();\n  private readonly providerMetadataPromise = new DelayedPromise<\n    ProviderMetadata | undefined\n  >();\n  private readonly warningsPromise = new DelayedPromise<\n    CallWarning[] | undefined\n  >();\n  private readonly requestPromise =\n    new DelayedPromise<LanguageModelRequestMetadata>();\n  private readonly responsePromise =\n    new DelayedPromise<LanguageModelResponseMetadata>();\n\n  private readonly baseStream: ReadableStream<ObjectStreamPart<PARTIAL>>;\n\n  private readonly outputStrategy: OutputStrategy<\n    PARTIAL,\n    RESULT,\n    ELEMENT_STREAM\n  >;\n\n  constructor({\n    model,\n    headers,\n    telemetry,\n    settings,\n    maxRetries: maxRetriesArg,\n    abortSignal,\n    outputStrategy,\n    system,\n    prompt,\n    messages,\n    schemaName,\n    schemaDescription,\n    providerOptions,\n    mode,\n    onError,\n    onFinish,\n    generateId,\n    currentDate,\n    now,\n  }: {\n    model: LanguageModel;\n    telemetry: TelemetrySettings | undefined;\n    headers: Record<string, string | undefined> | undefined;\n    settings: Omit<CallSettings, 'abortSignal' | 'headers'>;\n    maxRetries: number | undefined;\n    abortSignal: AbortSignal | undefined;\n    outputStrategy: OutputStrategy<PARTIAL, RESULT, ELEMENT_STREAM>;\n    system: Prompt['system'];\n    prompt: Prompt['prompt'];\n    messages: Prompt['messages'];\n    schemaName: string | undefined;\n    schemaDescription: string | undefined;\n    providerOptions: ProviderOptions | undefined;\n    mode: 'auto' | 'json' | 'tool' | undefined;\n    onError: StreamObjectOnErrorCallback | undefined;\n    onFinish: StreamObjectOnFinishCallback<RESULT> | undefined;\n    generateId: () => string;\n    currentDate: () => Date;\n    now: () => number;\n  }) {\n    const { maxRetries, retry } = prepareRetries({\n      maxRetries: maxRetriesArg,\n    });\n\n    const baseTelemetryAttributes = getBaseTelemetryAttributes({\n      model,\n      telemetry,\n      headers,\n      settings: { ...settings, maxRetries },\n    });\n\n    const tracer = getTracer(telemetry);\n    const self = this;\n\n    const stitchableStream =\n      createStitchableStream<ObjectStreamPart<PARTIAL>>();\n\n    const eventProcessor = new TransformStream<\n      ObjectStreamPart<PARTIAL>,\n      ObjectStreamPart<PARTIAL>\n    >({\n      transform(chunk, controller) {\n        controller.enqueue(chunk);\n\n        if (chunk.type === 'error') {\n          onError?.({ error: chunk.error });\n        }\n      },\n    });\n\n    this.baseStream = stitchableStream.stream.pipeThrough(eventProcessor);\n\n    recordSpan({\n      name: 'ai.streamObject',\n      attributes: selectTelemetryAttributes({\n        telemetry,\n        attributes: {\n          ...assembleOperationName({\n            operationId: 'ai.streamObject',\n            telemetry,\n          }),\n          ...baseTelemetryAttributes,\n          // specific settings that only make sense on the outer level:\n          'ai.prompt': {\n            input: () => JSON.stringify({ system, prompt, messages }),\n          },\n          'ai.schema':\n            outputStrategy.jsonSchema != null\n              ? { input: () => JSON.stringify(outputStrategy.jsonSchema) }\n              : undefined,\n          'ai.schema.name': schemaName,\n          'ai.schema.description': schemaDescription,\n          'ai.settings.output': outputStrategy.type,\n          'ai.settings.mode': mode,\n        },\n      }),\n      tracer,\n      endWhenDone: false,\n      fn: async rootSpan => {\n        // use the default provider mode when the mode is set to 'auto' or unspecified\n        if (mode === 'auto' || mode == null) {\n          mode = model.defaultObjectGenerationMode;\n        }\n\n        let callOptions: LanguageModelV1CallOptions;\n        let transformer: Transformer<\n          LanguageModelV1StreamPart,\n          string | Omit<LanguageModelV1StreamPart, 'text-delta'>\n        >;\n\n        switch (mode) {\n          case 'json': {\n            const standardizedPrompt = standardizePrompt({\n              prompt: {\n                system:\n                  outputStrategy.jsonSchema == null\n                    ? injectJsonInstruction({ prompt: system })\n                    : model.supportsStructuredOutputs\n                      ? system\n                      : injectJsonInstruction({\n                          prompt: system,\n                          schema: outputStrategy.jsonSchema,\n                        }),\n                prompt,\n                messages,\n              },\n              tools: undefined,\n            });\n\n            callOptions = {\n              mode: {\n                type: 'object-json',\n                schema: outputStrategy.jsonSchema,\n                name: schemaName,\n                description: schemaDescription,\n              },\n              ...prepareCallSettings(settings),\n              inputFormat: standardizedPrompt.type,\n              prompt: await convertToLanguageModelPrompt({\n                prompt: standardizedPrompt,\n                modelSupportsImageUrls: model.supportsImageUrls,\n                modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context\n              }),\n              providerMetadata: providerOptions,\n              abortSignal,\n              headers,\n            };\n\n            transformer = {\n              transform: (chunk, controller) => {\n                switch (chunk.type) {\n                  case 'text-delta':\n                    controller.enqueue(chunk.textDelta);\n                    break;\n                  case 'response-metadata':\n                  case 'finish':\n                  case 'error':\n                    controller.enqueue(chunk);\n                    break;\n                }\n              },\n            };\n\n            break;\n          }\n\n          case 'tool': {\n            const standardizedPrompt = standardizePrompt({\n              prompt: { system, prompt, messages },\n              tools: undefined,\n            });\n\n            callOptions = {\n              mode: {\n                type: 'object-tool',\n                tool: {\n                  type: 'function',\n                  name: schemaName ?? 'json',\n                  description:\n                    schemaDescription ?? 'Respond with a JSON object.',\n                  parameters: outputStrategy.jsonSchema!,\n                },\n              },\n              ...prepareCallSettings(settings),\n              inputFormat: standardizedPrompt.type,\n              prompt: await convertToLanguageModelPrompt({\n                prompt: standardizedPrompt,\n                modelSupportsImageUrls: model.supportsImageUrls,\n                modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context,\n              }),\n              providerMetadata: providerOptions,\n              abortSignal,\n              headers,\n            };\n\n            transformer = {\n              transform(chunk, controller) {\n                switch (chunk.type) {\n                  case 'tool-call-delta':\n                    controller.enqueue(chunk.argsTextDelta);\n                    break;\n                  case 'response-metadata':\n                  case 'finish':\n                  case 'error':\n                    controller.enqueue(chunk);\n                    break;\n                }\n              },\n            };\n\n            break;\n          }\n\n          case undefined: {\n            throw new Error(\n              'Model does not have a default object generation mode.',\n            );\n          }\n\n          default: {\n            const _exhaustiveCheck: never = mode;\n            throw new Error(`Unsupported mode: ${_exhaustiveCheck}`);\n          }\n        }\n\n        const {\n          result: { stream, warnings, rawResponse, request },\n          doStreamSpan,\n          startTimestampMs,\n        } = await retry(() =>\n          recordSpan({\n            name: 'ai.streamObject.doStream',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.streamObject.doStream',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                'ai.prompt.format': {\n                  input: () => callOptions.inputFormat,\n                },\n                'ai.prompt.messages': {\n                  input: () => JSON.stringify(callOptions.prompt),\n                },\n                'ai.settings.mode': mode,\n\n                // standardized gen-ai llm span attributes:\n                'gen_ai.system': model.provider,\n                'gen_ai.request.model': model.modelId,\n                'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                'gen_ai.request.max_tokens': settings.maxTokens,\n                'gen_ai.request.presence_penalty': settings.presencePenalty,\n                'gen_ai.request.temperature': settings.temperature,\n                'gen_ai.request.top_k': settings.topK,\n                'gen_ai.request.top_p': settings.topP,\n              },\n            }),\n            tracer,\n            endWhenDone: false,\n            fn: async doStreamSpan => ({\n              startTimestampMs: now(),\n              doStreamSpan,\n              result: await model.doStream(callOptions),\n            }),\n          }),\n        );\n\n        self.requestPromise.resolve(request ?? {});\n\n        // store information for onFinish callback:\n        let usage: LanguageModelUsage | undefined;\n        let finishReason: LanguageModelV1FinishReason | undefined;\n        let providerMetadata: ProviderMetadata | undefined;\n        let object: RESULT | undefined;\n        let error: unknown | undefined;\n\n        // pipe chunks through a transformation stream that extracts metadata:\n        let accumulatedText = '';\n        let textDelta = '';\n        let response: {\n          id: string;\n          timestamp: Date;\n          modelId: string;\n        } = {\n          id: generateId(),\n          timestamp: currentDate(),\n          modelId: model.modelId,\n        };\n\n        // Keep track of raw parse result before type validation, since e.g. Zod might\n        // change the object by mapping properties.\n        let latestObjectJson: JSONValue | undefined = undefined;\n        let latestObject: PARTIAL | undefined = undefined;\n        let isFirstChunk = true;\n        let isFirstDelta = true;\n\n        const transformedStream = stream\n          .pipeThrough(new TransformStream(transformer))\n          .pipeThrough(\n            new TransformStream<\n              string | ObjectStreamInputPart,\n              ObjectStreamPart<PARTIAL>\n            >({\n              async transform(chunk, controller): Promise<void> {\n                // Telemetry event for first chunk:\n                if (isFirstChunk) {\n                  const msToFirstChunk = now() - startTimestampMs;\n\n                  isFirstChunk = false;\n\n                  doStreamSpan.addEvent('ai.stream.firstChunk', {\n                    'ai.stream.msToFirstChunk': msToFirstChunk,\n                  });\n\n                  doStreamSpan.setAttributes({\n                    'ai.stream.msToFirstChunk': msToFirstChunk,\n                  });\n                }\n\n                // process partial text chunks\n                if (typeof chunk === 'string') {\n                  accumulatedText += chunk;\n                  textDelta += chunk;\n\n                  const { value: currentObjectJson, state: parseState } =\n                    parsePartialJson(accumulatedText);\n\n                  if (\n                    currentObjectJson !== undefined &&\n                    !isDeepEqualData(latestObjectJson, currentObjectJson)\n                  ) {\n                    const validationResult =\n                      outputStrategy.validatePartialResult({\n                        value: currentObjectJson,\n                        textDelta,\n                        latestObject,\n                        isFirstDelta,\n                        isFinalDelta: parseState === 'successful-parse',\n                      });\n\n                    if (\n                      validationResult.success &&\n                      !isDeepEqualData(\n                        latestObject,\n                        validationResult.value.partial,\n                      )\n                    ) {\n                      // inside inner check to correctly parse the final element in array mode:\n                      latestObjectJson = currentObjectJson;\n                      latestObject = validationResult.value.partial;\n\n                      controller.enqueue({\n                        type: 'object',\n                        object: latestObject,\n                      });\n\n                      controller.enqueue({\n                        type: 'text-delta',\n                        textDelta: validationResult.value.textDelta,\n                      });\n\n                      textDelta = '';\n                      isFirstDelta = false;\n                    }\n                  }\n\n                  return;\n                }\n\n                switch (chunk.type) {\n                  case 'response-metadata': {\n                    response = {\n                      id: chunk.id ?? response.id,\n                      timestamp: chunk.timestamp ?? response.timestamp,\n                      modelId: chunk.modelId ?? response.modelId,\n                    };\n                    break;\n                  }\n\n                  case 'finish': {\n                    // send final text delta:\n                    if (textDelta !== '') {\n                      controller.enqueue({ type: 'text-delta', textDelta });\n                    }\n\n                    // store finish reason for telemetry:\n                    finishReason = chunk.finishReason;\n\n                    // store usage and metadata for promises and onFinish callback:\n                    usage = calculateLanguageModelUsage(chunk.usage);\n                    providerMetadata = chunk.providerMetadata;\n\n                    controller.enqueue({ ...chunk, usage, response });\n\n                    // resolve promises that can be resolved now:\n                    self.usagePromise.resolve(usage);\n                    self.providerMetadataPromise.resolve(providerMetadata);\n                    self.responsePromise.resolve({\n                      ...response,\n                      headers: rawResponse?.headers,\n                    });\n\n                    // resolve the object promise with the latest object:\n                    const validationResult = outputStrategy.validateFinalResult(\n                      latestObjectJson,\n                      {\n                        text: accumulatedText,\n                        response,\n                        usage,\n                      },\n                    );\n\n                    if (validationResult.success) {\n                      object = validationResult.value;\n                      self.objectPromise.resolve(object);\n                    } else {\n                      error = new NoObjectGeneratedError({\n                        message:\n                          'No object generated: response did not match schema.',\n                        cause: validationResult.error,\n                        text: accumulatedText,\n                        response,\n                        usage,\n                      });\n                      self.objectPromise.reject(error);\n                    }\n\n                    break;\n                  }\n\n                  default: {\n                    controller.enqueue(chunk);\n                    break;\n                  }\n                }\n              },\n\n              // invoke onFinish callback and resolve toolResults promise when the stream is about to close:\n              async flush(controller) {\n                try {\n                  const finalUsage = usage ?? {\n                    promptTokens: NaN,\n                    completionTokens: NaN,\n                    totalTokens: NaN,\n                  };\n\n                  doStreamSpan.setAttributes(\n                    selectTelemetryAttributes({\n                      telemetry,\n                      attributes: {\n                        'ai.response.finishReason': finishReason,\n                        'ai.response.object': {\n                          output: () => JSON.stringify(object),\n                        },\n                        'ai.response.id': response.id,\n                        'ai.response.model': response.modelId,\n                        'ai.response.timestamp':\n                          response.timestamp.toISOString(),\n\n                        'ai.usage.promptTokens': finalUsage.promptTokens,\n                        'ai.usage.completionTokens':\n                          finalUsage.completionTokens,\n\n                        // standardized gen-ai llm span attributes:\n                        'gen_ai.response.finish_reasons': [finishReason],\n                        'gen_ai.response.id': response.id,\n                        'gen_ai.response.model': response.modelId,\n                        'gen_ai.usage.input_tokens': finalUsage.promptTokens,\n                        'gen_ai.usage.output_tokens':\n                          finalUsage.completionTokens,\n                      },\n                    }),\n                  );\n\n                  // finish doStreamSpan before other operations for correct timing:\n                  doStreamSpan.end();\n\n                  // Add response information to the root span:\n                  rootSpan.setAttributes(\n                    selectTelemetryAttributes({\n                      telemetry,\n                      attributes: {\n                        'ai.usage.promptTokens': finalUsage.promptTokens,\n                        'ai.usage.completionTokens':\n                          finalUsage.completionTokens,\n                        'ai.response.object': {\n                          output: () => JSON.stringify(object),\n                        },\n                      },\n                    }),\n                  );\n\n                  // call onFinish callback:\n                  await onFinish?.({\n                    usage: finalUsage,\n                    object,\n                    error,\n                    response: {\n                      ...response,\n                      headers: rawResponse?.headers,\n                    },\n                    warnings,\n                    providerMetadata,\n                    experimental_providerMetadata: providerMetadata,\n                  });\n                } catch (error) {\n                  controller.enqueue({ type: 'error', error });\n                } finally {\n                  rootSpan.end();\n                }\n              },\n            }),\n          );\n\n        stitchableStream.addStream(transformedStream);\n      },\n    })\n      .catch(error => {\n        // add an empty stream with an error to break the stream:\n        stitchableStream.addStream(\n          new ReadableStream({\n            start(controller) {\n              controller.enqueue({ type: 'error', error });\n              controller.close();\n            },\n          }),\n        );\n      })\n      .finally(() => {\n        stitchableStream.close();\n      });\n\n    this.outputStrategy = outputStrategy;\n  }\n\n  get object() {\n    return this.objectPromise.value;\n  }\n\n  get usage() {\n    return this.usagePromise.value;\n  }\n\n  get experimental_providerMetadata() {\n    return this.providerMetadataPromise.value;\n  }\n\n  get providerMetadata() {\n    return this.providerMetadataPromise.value;\n  }\n\n  get warnings() {\n    return this.warningsPromise.value;\n  }\n\n  get request() {\n    return this.requestPromise.value;\n  }\n\n  get response() {\n    return this.responsePromise.value;\n  }\n\n  get partialObjectStream(): AsyncIterableStream<PARTIAL> {\n    return createAsyncIterableStream(\n      this.baseStream.pipeThrough(\n        new TransformStream<ObjectStreamPart<PARTIAL>, PARTIAL>({\n          transform(chunk, controller) {\n            switch (chunk.type) {\n              case 'object':\n                controller.enqueue(chunk.object);\n                break;\n\n              case 'text-delta':\n              case 'finish':\n              case 'error': // suppress error (use onError instead)\n                break;\n\n              default: {\n                const _exhaustiveCheck: never = chunk;\n                throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n              }\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  get elementStream(): ELEMENT_STREAM {\n    return this.outputStrategy.createElementStream(this.baseStream);\n  }\n\n  get textStream(): AsyncIterableStream<string> {\n    return createAsyncIterableStream(\n      this.baseStream.pipeThrough(\n        new TransformStream<ObjectStreamPart<PARTIAL>, string>({\n          transform(chunk, controller) {\n            switch (chunk.type) {\n              case 'text-delta':\n                controller.enqueue(chunk.textDelta);\n                break;\n\n              case 'object':\n              case 'finish':\n              case 'error': // suppress error (use onError instead)\n                break;\n\n              default: {\n                const _exhaustiveCheck: never = chunk;\n                throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n              }\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  get fullStream(): AsyncIterableStream<ObjectStreamPart<PARTIAL>> {\n    return createAsyncIterableStream(this.baseStream);\n  }\n\n  pipeTextStreamToResponse(response: ServerResponse, init?: ResponseInit) {\n    writeToServerResponse({\n      response,\n      status: init?.status,\n      statusText: init?.statusText,\n      headers: prepareOutgoingHttpHeaders(init?.headers, {\n        contentType: 'text/plain; charset=utf-8',\n      }),\n      stream: this.textStream.pipeThrough(new TextEncoderStream()),\n    });\n  }\n\n  toTextStreamResponse(init?: ResponseInit): Response {\n    return new Response(this.textStream.pipeThrough(new TextEncoderStream()), {\n      status: init?.status ?? 200,\n      headers: prepareResponseHeaders(init?.headers, {\n        contentType: 'text/plain; charset=utf-8',\n      }),\n    });\n  }\n}\n\nexport type ObjectStreamInputPart =\n  | {\n      type: 'error';\n      error: unknown;\n    }\n  | {\n      type: 'response-metadata';\n      id?: string;\n      timestamp?: Date;\n      modelId?: string;\n    }\n  | {\n      type: 'finish';\n      finishReason: FinishReason;\n      logprobs?: LogProbs;\n      usage: LanguageModelUsage;\n      providerMetadata?: ProviderMetadata;\n    };\n","/**\n * Delayed promise. It is only constructed once the value is accessed.\n * This is useful to avoid unhandled promise rejections when the promise is created\n * but not accessed.\n */\nexport class DelayedPromise<T> {\n  private status:\n    | { type: 'pending' }\n    | { type: 'resolved'; value: T }\n    | { type: 'rejected'; error: unknown } = { type: 'pending' };\n  private promise: Promise<T> | undefined;\n  private _resolve: undefined | ((value: T) => void) = undefined;\n  private _reject: undefined | ((error: unknown) => void) = undefined;\n\n  get value(): Promise<T> {\n    if (this.promise) {\n      return this.promise;\n    }\n\n    this.promise = new Promise<T>((resolve, reject) => {\n      if (this.status.type === 'resolved') {\n        resolve(this.status.value);\n      } else if (this.status.type === 'rejected') {\n        reject(this.status.error);\n      }\n\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n\n    return this.promise;\n  }\n\n  resolve(value: T): void {\n    this.status = { type: 'resolved', value };\n\n    if (this.promise) {\n      this._resolve?.(value);\n    }\n  }\n\n  reject(error: unknown): void {\n    this.status = { type: 'rejected', error };\n\n    if (this.promise) {\n      this._reject?.(error);\n    }\n  }\n}\n","/**\n * Creates a Promise with externally accessible resolve and reject functions.\n *\n * @template T - The type of the value that the Promise will resolve to.\n * @returns An object containing:\n *   - promise: A Promise that can be resolved or rejected externally.\n *   - resolve: A function to resolve the Promise with a value of type T.\n *   - reject: A function to reject the Promise with an error.\n */\nexport function createResolvablePromise<T = any>(): {\n  promise: Promise<T>;\n  resolve: (value: T) => void;\n  reject: (error: unknown) => void;\n} {\n  let resolve: (value: T) => void;\n  let reject: (error: unknown) => void;\n\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return {\n    promise,\n    resolve: resolve!,\n    reject: reject!,\n  };\n}\n","import { createResolvablePromise } from '../../util/create-resolvable-promise';\n\n/**\n * Creates a stitchable stream that can pipe one stream at a time.\n *\n * @template T - The type of values emitted by the streams.\n * @returns {Object} An object containing the stitchable stream and control methods.\n */\nexport function createStitchableStream<T>(): {\n  stream: ReadableStream<T>;\n  addStream: (innerStream: ReadableStream<T>) => void;\n  close: () => void;\n  terminate: () => void;\n} {\n  let innerStreamReaders: ReadableStreamDefaultReader<T>[] = [];\n  let controller: ReadableStreamDefaultController<T> | null = null;\n  let isClosed = false;\n  let waitForNewStream = createResolvablePromise<void>();\n\n  const processPull = async () => {\n    // Case 1: Outer stream is closed and no more inner streams\n    if (isClosed && innerStreamReaders.length === 0) {\n      controller?.close();\n      return;\n    }\n\n    // Case 2: No inner streams available, but outer stream is open\n    // wait for a new inner stream to be added or the outer stream to close\n    if (innerStreamReaders.length === 0) {\n      waitForNewStream = createResolvablePromise<void>();\n      await waitForNewStream.promise;\n      return processPull();\n    }\n\n    try {\n      const { value, done } = await innerStreamReaders[0].read();\n\n      if (done) {\n        // Case 3: Current inner stream is done\n        innerStreamReaders.shift(); // Remove the finished stream\n\n        // Continue pulling from the next stream if available\n        if (innerStreamReaders.length > 0) {\n          await processPull();\n        } else if (isClosed) {\n          controller?.close();\n        }\n      } else {\n        // Case 4: Current inner stream returns an item\n        controller?.enqueue(value);\n      }\n    } catch (error) {\n      // Case 5: Current inner stream throws an error\n      controller?.error(error);\n      innerStreamReaders.shift(); // Remove the errored stream\n\n      if (isClosed && innerStreamReaders.length === 0) {\n        controller?.close();\n      }\n    }\n  };\n\n  return {\n    stream: new ReadableStream<T>({\n      start(controllerParam) {\n        controller = controllerParam;\n      },\n      pull: processPull,\n      async cancel() {\n        for (const reader of innerStreamReaders) {\n          await reader.cancel();\n        }\n        innerStreamReaders = [];\n        isClosed = true;\n      },\n    }),\n    addStream: (innerStream: ReadableStream<T>) => {\n      if (isClosed) {\n        throw new Error('Cannot add inner stream: outer stream is closed');\n      }\n\n      innerStreamReaders.push(innerStream.getReader());\n      waitForNewStream.resolve();\n    },\n\n    /**\n     * Gracefully close the outer stream. This will let the inner streams\n     * finish processing and then close the outer stream.\n     */\n    close: () => {\n      isClosed = true;\n      waitForNewStream.resolve();\n\n      if (innerStreamReaders.length === 0) {\n        controller?.close();\n      }\n    },\n\n    /**\n     * Immediately close the outer stream. This will cancel all inner streams\n     * and close the outer stream.\n     */\n    terminate: () => {\n      isClosed = true;\n      waitForNewStream.resolve();\n\n      innerStreamReaders.forEach(reader => reader.cancel());\n      innerStreamReaders = [];\n      controller?.close();\n    },\n  };\n}\n","// Shim for performance.now() to support environments that don't have it:\nexport function now(): number {\n  return globalThis?.performance?.now() ?? Date.now();\n}\n","import { createIdGenerator, IDGenerator } from '@ai-sdk/provider-utils';\nimport { Tracer } from '@opentelemetry/api';\nimport { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport { NoOutputSpecifiedError } from '../../errors/no-output-specified-error';\nimport { ToolExecutionError } from '../../errors/tool-execution-error';\nimport { CoreAssistantMessage, CoreMessage } from '../prompt';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { prepareToolsAndToolChoice } from '../prompt/prepare-tools-and-tool-choice';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { LanguageModel, ToolChoice } from '../types';\nimport { ProviderMetadata, ProviderOptions } from '../types/provider-metadata';\nimport {\n  addLanguageModelUsage,\n  calculateLanguageModelUsage,\n  LanguageModelUsage,\n} from '../types/usage';\nimport { removeTextAfterLastWhitespace } from '../util/remove-text-after-last-whitespace';\nimport { GenerateTextResult } from './generate-text-result';\nimport { Output } from './output';\nimport { parseToolCall } from './parse-tool-call';\nimport { asReasoningText, ReasoningDetail } from './reasoning-detail';\nimport { ResponseMessage, StepResult } from './step-result';\nimport { toResponseMessages } from './to-response-messages';\nimport { ToolCallArray } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair';\nimport { ToolResultArray } from './tool-result';\nimport { ToolSet } from './tool-set';\n\nconst originalGenerateId = createIdGenerator({\n  prefix: 'aitxt',\n  size: 24,\n});\n\nconst originalGenerateMessageId = createIdGenerator({\n  prefix: 'msg',\n  size: 24,\n});\n\n/**\nCallback that is set using the `onStepFinish` option.\n\n@param stepResult - The result of the step.\n */\nexport type GenerateTextOnStepFinishCallback<TOOLS extends ToolSet> = (\n  stepResult: StepResult<TOOLS>,\n) => Promise<void> | void;\n\n/**\nGenerate a text and call tools for a given prompt using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamText` instead.\n\n@param model - The language model to use.\n\n@param tools - Tools that are accessible to and can be called by the model. The model needs to support calling tools.\n@param toolChoice - The tool choice strategy. Default: 'auto'.\n\n@param system - A system message that will be part of the prompt.\n@param prompt - A simple text prompt. You can either use `prompt` or `messages` but not both.\n@param messages - A list of messages. You can either use `prompt` or `messages` but not both.\n\n@param maxTokens - Maximum number of tokens to generate.\n@param temperature - Temperature setting.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topP - Nucleus sampling.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topK - Only sample from the top K options for each subsequent token.\nUsed to remove \"long tail\" low probability responses.\nRecommended for advanced use cases only. You usually only need to use temperature.\n@param presencePenalty - Presence penalty setting.\nIt affects the likelihood of the model to repeat information that is already in the prompt.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param frequencyPenalty - Frequency penalty setting.\nIt affects the likelihood of the model to repeatedly use the same words or phrases.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param stopSequences - Stop sequences.\nIf set, the model will stop generating text when one of the stop sequences is generated.\n@param seed - The seed (integer) to use for random sampling.\nIf set and supported by the model, calls will generate deterministic results.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@param maxSteps - Maximum number of sequential LLM calls (steps), e.g. when you use tool calls.\n@param experimental_generateMessageId - Generate a unique ID for each message.\n\n@param onStepFinish - Callback that is called when each step (LLM call) is finished, including intermediate steps.\n\n@returns\nA result object that contains the generated text, the results of the tool calls, and additional information.\n */\nexport async function generateText<\n  TOOLS extends ToolSet,\n  OUTPUT = never,\n  OUTPUT_PARTIAL = never,\n>({\n  model,\n  tools,\n  toolChoice,\n  system,\n  prompt,\n  messages,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  maxSteps = 1,\n  experimental_generateMessageId: generateMessageId = originalGenerateMessageId,\n  experimental_output: output,\n  experimental_continueSteps: continueSteps = false,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata,\n  providerOptions = experimental_providerMetadata,\n  experimental_activeTools: activeTools,\n  experimental_repairToolCall: repairToolCall,\n  _internal: {\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n  } = {},\n  onStepFinish,\n  ...settings\n}: CallSettings &\n  Prompt & {\n    /**\nThe language model to use.\n     */\n    model: LanguageModel;\n\n    /**\nThe tools that the model can call. The model needs to support calling tools.\n*/\n    tools?: TOOLS;\n\n    /**\nThe tool choice strategy. Default: 'auto'.\n     */\n    toolChoice?: ToolChoice<TOOLS>;\n\n    /**\nMaximum number of sequential LLM calls (steps), e.g. when you use tool calls. Must be at least 1.\n\nA maximum number is required to prevent infinite loops in the case of misconfigured tools.\n\nBy default, it's set to 1, which means that only a single LLM call is made.\n     */\n    maxSteps?: number;\n\n    /**\nGenerate a unique ID for each message.\n     */\n    experimental_generateMessageId?: IDGenerator;\n\n    /**\nWhen enabled, the model will perform additional steps if the finish reason is \"length\" (experimental).\n\nBy default, it's set to false.\n     */\n    experimental_continueSteps?: boolean;\n\n    /**\nOptional telemetry configuration (experimental).\n     */\n    experimental_telemetry?: TelemetrySettings;\n\n    /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n    providerOptions?: ProviderOptions;\n\n    /**\n@deprecated Use `providerOptions` instead.\n     */\n    experimental_providerMetadata?: ProviderMetadata;\n\n    /**\nLimits the tools that are available for the model to call without\nchanging the tool call and result types in the result.\n     */\n    experimental_activeTools?: Array<keyof TOOLS>;\n\n    /**\nOptional specification for parsing structured outputs from the LLM response.\n     */\n    experimental_output?: Output<OUTPUT, OUTPUT_PARTIAL>;\n\n    /**\nA function that attempts to repair a tool call that failed to parse.\n     */\n    experimental_repairToolCall?: ToolCallRepairFunction<TOOLS>;\n\n    /**\n    Callback that is called when each step (LLM call) is finished, including intermediate steps.\n    */\n    onStepFinish?: GenerateTextOnStepFinishCallback<TOOLS>;\n\n    /**\n     * Internal. For test use only. May change without notice.\n     */\n    _internal?: {\n      generateId?: IDGenerator;\n      currentDate?: () => Date;\n    };\n  }): Promise<GenerateTextResult<TOOLS, OUTPUT>> {\n  if (maxSteps < 1) {\n    throw new InvalidArgumentError({\n      parameter: 'maxSteps',\n      value: maxSteps,\n      message: 'maxSteps must be at least 1',\n    });\n  }\n\n  const { maxRetries, retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...settings, maxRetries },\n  });\n\n  const initialPrompt = standardizePrompt({\n    prompt: {\n      system: output?.injectIntoSystemPrompt({ system, model }) ?? system,\n      prompt,\n      messages,\n    },\n    tools,\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.generateText',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({\n          operationId: 'ai.generateText',\n          telemetry,\n        }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        'ai.prompt': {\n          input: () => JSON.stringify({ system, prompt, messages }),\n        },\n        'ai.settings.maxSteps': maxSteps,\n      },\n    }),\n    tracer,\n    fn: async span => {\n      const mode = {\n        type: 'regular' as const,\n        ...prepareToolsAndToolChoice({ tools, toolChoice, activeTools }),\n      };\n\n      const callSettings = prepareCallSettings(settings);\n\n      let currentModelResponse: Awaited<\n        ReturnType<LanguageModel['doGenerate']>\n      > & { response: { id: string; timestamp: Date; modelId: string } };\n      let currentToolCalls: ToolCallArray<TOOLS> = [];\n      let currentToolResults: ToolResultArray<TOOLS> = [];\n      let currentReasoningDetails: Array<ReasoningDetail> = [];\n      let stepCount = 0;\n      const responseMessages: Array<ResponseMessage> = [];\n      let text = '';\n      const sources: GenerateTextResult<TOOLS, OUTPUT>['sources'] = [];\n      const steps: GenerateTextResult<TOOLS, OUTPUT>['steps'] = [];\n      let usage: LanguageModelUsage = {\n        completionTokens: 0,\n        promptTokens: 0,\n        totalTokens: 0,\n      };\n\n      let stepType: 'initial' | 'tool-result' | 'continue' | 'done' = 'initial';\n\n      do {\n        // after the 1st step, we need to switch to messages format:\n        const promptFormat = stepCount === 0 ? initialPrompt.type : 'messages';\n\n        const stepInputMessages = [\n          ...initialPrompt.messages,\n          ...responseMessages,\n        ];\n\n        const promptMessages = await convertToLanguageModelPrompt({\n          prompt: {\n            type: promptFormat,\n            system: initialPrompt.system,\n            messages: stepInputMessages,\n          },\n          modelSupportsImageUrls: model.supportsImageUrls,\n          modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context\n        });\n\n        currentModelResponse = await retry(() =>\n          recordSpan({\n            name: 'ai.generateText.doGenerate',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.generateText.doGenerate',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                'ai.prompt.format': { input: () => promptFormat },\n                'ai.prompt.messages': {\n                  input: () => JSON.stringify(promptMessages),\n                },\n                'ai.prompt.tools': {\n                  // convert the language model level tools:\n                  input: () => mode.tools?.map(tool => JSON.stringify(tool)),\n                },\n                'ai.prompt.toolChoice': {\n                  input: () =>\n                    mode.toolChoice != null\n                      ? JSON.stringify(mode.toolChoice)\n                      : undefined,\n                },\n\n                // standardized gen-ai llm span attributes:\n                'gen_ai.system': model.provider,\n                'gen_ai.request.model': model.modelId,\n                'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                'gen_ai.request.max_tokens': settings.maxTokens,\n                'gen_ai.request.presence_penalty': settings.presencePenalty,\n                'gen_ai.request.stop_sequences': settings.stopSequences,\n                'gen_ai.request.temperature': settings.temperature,\n                'gen_ai.request.top_k': settings.topK,\n                'gen_ai.request.top_p': settings.topP,\n              },\n            }),\n            tracer,\n            fn: async span => {\n              const result = await model.doGenerate({\n                mode,\n                ...callSettings,\n                inputFormat: promptFormat,\n                responseFormat: output?.responseFormat({ model }),\n                prompt: promptMessages,\n                providerMetadata: providerOptions,\n                abortSignal,\n                headers,\n              });\n\n              // Fill in default values:\n              const responseData = {\n                id: result.response?.id ?? generateId(),\n                timestamp: result.response?.timestamp ?? currentDate(),\n                modelId: result.response?.modelId ?? model.modelId,\n              };\n\n              // Add response information to the span:\n              span.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.response.finishReason': result.finishReason,\n                    'ai.response.text': {\n                      output: () => result.text,\n                    },\n                    'ai.response.toolCalls': {\n                      output: () => JSON.stringify(result.toolCalls),\n                    },\n                    'ai.response.id': responseData.id,\n                    'ai.response.model': responseData.modelId,\n                    'ai.response.timestamp':\n                      responseData.timestamp.toISOString(),\n\n                    'ai.usage.promptTokens': result.usage.promptTokens,\n                    'ai.usage.completionTokens': result.usage.completionTokens,\n\n                    // standardized gen-ai llm span attributes:\n                    'gen_ai.response.finish_reasons': [result.finishReason],\n                    'gen_ai.response.id': responseData.id,\n                    'gen_ai.response.model': responseData.modelId,\n                    'gen_ai.usage.input_tokens': result.usage.promptTokens,\n                    'gen_ai.usage.output_tokens': result.usage.completionTokens,\n                  },\n                }),\n              );\n\n              return { ...result, response: responseData };\n            },\n          }),\n        );\n\n        // parse tool calls:\n        currentToolCalls = await Promise.all(\n          (currentModelResponse.toolCalls ?? []).map(toolCall =>\n            parseToolCall({\n              toolCall,\n              tools,\n              repairToolCall,\n              system,\n              messages: stepInputMessages,\n            }),\n          ),\n        );\n\n        // execute tools:\n        currentToolResults =\n          tools == null\n            ? []\n            : await executeTools({\n                toolCalls: currentToolCalls,\n                tools,\n                tracer,\n                telemetry,\n                messages: stepInputMessages,\n                abortSignal,\n              });\n\n        // token usage:\n        const currentUsage = calculateLanguageModelUsage(\n          currentModelResponse.usage,\n        );\n        usage = addLanguageModelUsage(usage, currentUsage);\n\n        // check if another step is needed:\n        let nextStepType: 'done' | 'continue' | 'tool-result' = 'done';\n        if (++stepCount < maxSteps) {\n          if (\n            continueSteps &&\n            currentModelResponse.finishReason === 'length' &&\n            // only use continue when there are no tool calls:\n            currentToolCalls.length === 0\n          ) {\n            nextStepType = 'continue';\n          } else if (\n            // there are tool calls:\n            currentToolCalls.length > 0 &&\n            // all current tool calls have results:\n            currentToolResults.length === currentToolCalls.length\n          ) {\n            nextStepType = 'tool-result';\n          }\n        }\n\n        // text:\n        const originalText = currentModelResponse.text ?? '';\n        const stepTextLeadingWhitespaceTrimmed =\n          stepType === 'continue' && // only for continue steps\n          text.trimEnd() !== text // only trim when there is preceding whitespace\n            ? originalText.trimStart()\n            : originalText;\n        const stepText =\n          nextStepType === 'continue'\n            ? removeTextAfterLastWhitespace(stepTextLeadingWhitespaceTrimmed)\n            : stepTextLeadingWhitespaceTrimmed;\n\n        text =\n          nextStepType === 'continue' || stepType === 'continue'\n            ? text + stepText\n            : stepText;\n\n        currentReasoningDetails = asReasoningDetails(\n          currentModelResponse.reasoning,\n        );\n\n        // sources:\n        sources.push(...(currentModelResponse.sources ?? []));\n\n        // append to messages for potential next step:\n        if (stepType === 'continue') {\n          // continue step: update the last assistant message\n          // continue is only possible when there are no tool calls,\n          // so we can assume that there is a single last assistant message:\n          const lastMessage = responseMessages[\n            responseMessages.length - 1\n          ] as CoreAssistantMessage;\n\n          if (typeof lastMessage.content === 'string') {\n            lastMessage.content += stepText;\n          } else {\n            lastMessage.content.push({\n              text: stepText,\n              type: 'text',\n            });\n          }\n        } else {\n          responseMessages.push(\n            ...toResponseMessages({\n              text,\n              reasoning: asReasoningDetails(currentModelResponse.reasoning),\n              tools: tools ?? ({} as TOOLS),\n              toolCalls: currentToolCalls,\n              toolResults: currentToolResults,\n              messageId: generateMessageId(),\n              generateMessageId,\n            }),\n          );\n        }\n\n        // Add step information (after response messages are updated):\n        const currentStepResult: StepResult<TOOLS> = {\n          stepType,\n          text: stepText,\n          // TODO v5: rename reasoning to reasoningText (and use reasoning for composite array)\n          reasoning: asReasoningText(currentReasoningDetails),\n          reasoningDetails: currentReasoningDetails,\n          sources: currentModelResponse.sources ?? [],\n          toolCalls: currentToolCalls,\n          toolResults: currentToolResults,\n          finishReason: currentModelResponse.finishReason,\n          usage: currentUsage,\n          warnings: currentModelResponse.warnings,\n          logprobs: currentModelResponse.logprobs,\n          request: currentModelResponse.request ?? {},\n          response: {\n            ...currentModelResponse.response,\n            headers: currentModelResponse.rawResponse?.headers,\n            body: currentModelResponse.rawResponse?.body,\n\n            // deep clone msgs to avoid mutating past messages in multi-step:\n            messages: structuredClone(responseMessages),\n          },\n          providerMetadata: currentModelResponse.providerMetadata,\n          experimental_providerMetadata: currentModelResponse.providerMetadata,\n          isContinued: nextStepType === 'continue',\n        };\n        steps.push(currentStepResult);\n        await onStepFinish?.(currentStepResult);\n\n        stepType = nextStepType;\n      } while (stepType !== 'done');\n\n      // Add response information to the span:\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.response.finishReason': currentModelResponse.finishReason,\n            'ai.response.text': {\n              output: () => currentModelResponse.text,\n            },\n            'ai.response.toolCalls': {\n              output: () => JSON.stringify(currentModelResponse.toolCalls),\n            },\n\n            'ai.usage.promptTokens': currentModelResponse.usage.promptTokens,\n            'ai.usage.completionTokens':\n              currentModelResponse.usage.completionTokens,\n          },\n        }),\n      );\n\n      return new DefaultGenerateTextResult({\n        text,\n        reasoning: asReasoningText(currentReasoningDetails),\n        reasoningDetails: currentReasoningDetails,\n        sources,\n        outputResolver: () => {\n          if (output == null) {\n            throw new NoOutputSpecifiedError();\n          }\n\n          return output.parseOutput(\n            { text },\n            { response: currentModelResponse.response, usage },\n          );\n        },\n        toolCalls: currentToolCalls,\n        toolResults: currentToolResults,\n        finishReason: currentModelResponse.finishReason,\n        usage,\n        warnings: currentModelResponse.warnings,\n        request: currentModelResponse.request ?? {},\n        response: {\n          ...currentModelResponse.response,\n          headers: currentModelResponse.rawResponse?.headers,\n          body: currentModelResponse.rawResponse?.body,\n          messages: responseMessages,\n        },\n        logprobs: currentModelResponse.logprobs,\n        steps,\n        providerMetadata: currentModelResponse.providerMetadata,\n      });\n    },\n  });\n}\n\nasync function executeTools<TOOLS extends ToolSet>({\n  toolCalls,\n  tools,\n  tracer,\n  telemetry,\n  messages,\n  abortSignal,\n}: {\n  toolCalls: ToolCallArray<TOOLS>;\n  tools: TOOLS;\n  tracer: Tracer;\n  telemetry: TelemetrySettings | undefined;\n  messages: CoreMessage[];\n  abortSignal: AbortSignal | undefined;\n}): Promise<ToolResultArray<TOOLS>> {\n  const toolResults = await Promise.all(\n    toolCalls.map(async ({ toolCallId, toolName, args }) => {\n      const tool = tools[toolName];\n\n      if (tool?.execute == null) {\n        return undefined;\n      }\n\n      const result = await recordSpan({\n        name: 'ai.toolCall',\n        attributes: selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            ...assembleOperationName({\n              operationId: 'ai.toolCall',\n              telemetry,\n            }),\n            'ai.toolCall.name': toolName,\n            'ai.toolCall.id': toolCallId,\n            'ai.toolCall.args': {\n              output: () => JSON.stringify(args),\n            },\n          },\n        }),\n        tracer,\n        fn: async span => {\n          try {\n            const result = await tool.execute!(args, {\n              toolCallId,\n              messages,\n              abortSignal,\n            });\n\n            try {\n              span.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.toolCall.result': {\n                      output: () => JSON.stringify(result),\n                    },\n                  },\n                }),\n              );\n            } catch (ignored) {\n              // JSON stringify might fail if the result is not serializable,\n              // in which case we just ignore it. In the future we might want to\n              // add an optional serialize method to the tool interface and warn\n              // if the result is not serializable.\n            }\n\n            return result;\n          } catch (error) {\n            throw new ToolExecutionError({\n              toolCallId,\n              toolName,\n              toolArgs: args,\n              cause: error,\n            });\n          }\n        },\n      });\n\n      return {\n        type: 'tool-result',\n        toolCallId,\n        toolName,\n        args,\n        result,\n      } as ToolResultArray<TOOLS>[number];\n    }),\n  );\n\n  return toolResults.filter(\n    (result): result is NonNullable<typeof result> => result != null,\n  );\n}\n\nclass DefaultGenerateTextResult<TOOLS extends ToolSet, OUTPUT>\n  implements GenerateTextResult<TOOLS, OUTPUT>\n{\n  readonly text: GenerateTextResult<TOOLS, OUTPUT>['text'];\n  readonly reasoning: GenerateTextResult<TOOLS, OUTPUT>['reasoning'];\n  readonly reasoningDetails: GenerateTextResult<\n    TOOLS,\n    OUTPUT\n  >['reasoningDetails'];\n  readonly toolCalls: GenerateTextResult<TOOLS, OUTPUT>['toolCalls'];\n  readonly toolResults: GenerateTextResult<TOOLS, OUTPUT>['toolResults'];\n  readonly finishReason: GenerateTextResult<TOOLS, OUTPUT>['finishReason'];\n  readonly usage: GenerateTextResult<TOOLS, OUTPUT>['usage'];\n  readonly warnings: GenerateTextResult<TOOLS, OUTPUT>['warnings'];\n  readonly steps: GenerateTextResult<TOOLS, OUTPUT>['steps'];\n  readonly logprobs: GenerateTextResult<TOOLS, OUTPUT>['logprobs'];\n  readonly experimental_providerMetadata: GenerateTextResult<\n    TOOLS,\n    OUTPUT\n  >['experimental_providerMetadata'];\n  readonly providerMetadata: GenerateTextResult<\n    TOOLS,\n    OUTPUT\n  >['providerMetadata'];\n  readonly response: GenerateTextResult<TOOLS, OUTPUT>['response'];\n  readonly request: GenerateTextResult<TOOLS, OUTPUT>['request'];\n  readonly sources: GenerateTextResult<TOOLS, OUTPUT>['sources'];\n\n  private readonly outputResolver: () => GenerateTextResult<\n    TOOLS,\n    OUTPUT\n  >['experimental_output'];\n\n  constructor(options: {\n    text: GenerateTextResult<TOOLS, OUTPUT>['text'];\n    reasoning: GenerateTextResult<TOOLS, OUTPUT>['reasoning'];\n    reasoningDetails: GenerateTextResult<TOOLS, OUTPUT>['reasoningDetails'];\n    toolCalls: GenerateTextResult<TOOLS, OUTPUT>['toolCalls'];\n    toolResults: GenerateTextResult<TOOLS, OUTPUT>['toolResults'];\n    finishReason: GenerateTextResult<TOOLS, OUTPUT>['finishReason'];\n    usage: GenerateTextResult<TOOLS, OUTPUT>['usage'];\n    warnings: GenerateTextResult<TOOLS, OUTPUT>['warnings'];\n    logprobs: GenerateTextResult<TOOLS, OUTPUT>['logprobs'];\n    steps: GenerateTextResult<TOOLS, OUTPUT>['steps'];\n    providerMetadata: GenerateTextResult<TOOLS, OUTPUT>['providerMetadata'];\n    response: GenerateTextResult<TOOLS, OUTPUT>['response'];\n    request: GenerateTextResult<TOOLS, OUTPUT>['request'];\n    outputResolver: () => GenerateTextResult<\n      TOOLS,\n      OUTPUT\n    >['experimental_output'];\n    sources: GenerateTextResult<TOOLS, OUTPUT>['sources'];\n  }) {\n    this.text = options.text;\n    this.reasoning = options.reasoning;\n    this.reasoningDetails = options.reasoningDetails;\n    this.toolCalls = options.toolCalls;\n    this.toolResults = options.toolResults;\n    this.finishReason = options.finishReason;\n    this.usage = options.usage;\n    this.warnings = options.warnings;\n    this.request = options.request;\n    this.response = options.response;\n    this.steps = options.steps;\n    this.experimental_providerMetadata = options.providerMetadata;\n    this.providerMetadata = options.providerMetadata;\n    this.logprobs = options.logprobs;\n    this.outputResolver = options.outputResolver;\n    this.sources = options.sources;\n  }\n\n  get experimental_output() {\n    return this.outputResolver();\n  }\n}\n\nfunction asReasoningDetails(\n  reasoning:\n    | string\n    | Array<\n        | { type: 'text'; text: string; signature?: string }\n        | { type: 'redacted'; data: string }\n      >\n    | undefined,\n): Array<\n  | { type: 'text'; text: string; signature?: string }\n  | { type: 'redacted'; data: string }\n> {\n  if (reasoning == null) {\n    return [];\n  }\n\n  if (typeof reasoning === 'string') {\n    return [{ type: 'text', text: reasoning }];\n  }\n\n  return reasoning;\n}\n","import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoOutputSpecifiedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no output type is specified and output-related methods are called.\n */\nexport class NoOutputSpecifiedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message = 'No output specified.' }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is NoOutputSpecifiedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError, getErrorMessage, JSONValue } from '@ai-sdk/provider';\n\nconst name = 'AI_ToolExecutionError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class ToolExecutionError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly toolName: string;\n  readonly toolArgs: JSONValue;\n  readonly toolCallId: string;\n\n  constructor({\n    toolArgs,\n    toolName,\n    toolCallId,\n    cause,\n    message = `Error executing tool ${toolName}: ${getErrorMessage(cause)}`,\n  }: {\n    message?: string;\n    toolArgs: JSONValue;\n    toolName: string;\n    toolCallId: string;\n    cause: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.toolArgs = toolArgs;\n    this.toolName = toolName;\n    this.toolCallId = toolCallId;\n  }\n\n  static isInstance(error: unknown): error is ToolExecutionError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import {\n  LanguageModelV1FunctionTool,\n  LanguageModelV1ProviderDefinedTool,\n  LanguageModelV1ToolChoice,\n} from '@ai-sdk/provider';\nimport { asSchema } from '@ai-sdk/ui-utils';\nimport { ToolSet } from '../generate-text';\nimport { ToolChoice } from '../types/language-model';\nimport { isNonEmptyObject } from '../util/is-non-empty-object';\n\nexport function prepareToolsAndToolChoice<TOOLS extends ToolSet>({\n  tools,\n  toolChoice,\n  activeTools,\n}: {\n  tools: TOOLS | undefined;\n  toolChoice: ToolChoice<TOOLS> | undefined;\n  activeTools: Array<keyof TOOLS> | undefined;\n}): {\n  tools:\n    | Array<LanguageModelV1FunctionTool | LanguageModelV1ProviderDefinedTool>\n    | undefined;\n  toolChoice: LanguageModelV1ToolChoice | undefined;\n} {\n  if (!isNonEmptyObject(tools)) {\n    return {\n      tools: undefined,\n      toolChoice: undefined,\n    };\n  }\n\n  // when activeTools is provided, we only include the tools that are in the list:\n  const filteredTools =\n    activeTools != null\n      ? Object.entries(tools).filter(([name]) =>\n          activeTools.includes(name as keyof TOOLS),\n        )\n      : Object.entries(tools);\n\n  return {\n    tools: filteredTools.map(([name, tool]) => {\n      const toolType = tool.type;\n      switch (toolType) {\n        case undefined:\n        case 'function':\n          return {\n            type: 'function' as const,\n            name,\n            description: tool.description,\n            parameters: asSchema(tool.parameters).jsonSchema,\n          };\n        case 'provider-defined':\n          return {\n            type: 'provider-defined' as const,\n            name,\n            id: tool.id,\n            args: tool.args,\n          };\n        default: {\n          const exhaustiveCheck: never = toolType;\n          throw new Error(`Unsupported tool type: ${exhaustiveCheck}`);\n        }\n      }\n    }),\n    toolChoice:\n      toolChoice == null\n        ? { type: 'auto' }\n        : typeof toolChoice === 'string'\n          ? { type: toolChoice }\n          : { type: 'tool' as const, toolName: toolChoice.toolName as string },\n  };\n}\n","export function isNonEmptyObject(\n  object: Record<string, unknown> | undefined | null,\n): object is Record<string, unknown> {\n  return object != null && Object.keys(object).length > 0;\n}\n","const lastWhitespaceRegexp = /^([\\s\\S]*?)(\\s+)(\\S*)$/;\n\n/**\n * Splits the text on the last whitespace.\n *\n * Whitespace is defined as one or more whitespace characters,\n * e.g. space, tab, newline, etc.\n *\n * @param text - The text to split.\n * @returns The prefix, whitespace, and suffix. Undefined if there is no whitespace.\n */\nexport function splitOnLastWhitespace(text: string):\n  | {\n      prefix: string;\n      whitespace: string;\n      suffix: string;\n    }\n  | undefined {\n  const match = text.match(lastWhitespaceRegexp);\n  return match\n    ? { prefix: match[1], whitespace: match[2], suffix: match[3] }\n    : undefined;\n}\n","import { splitOnLastWhitespace } from './split-on-last-whitespace';\n\nexport function removeTextAfterLastWhitespace(text: string): string {\n  const match = splitOnLastWhitespace(text);\n  return match ? match.prefix + match.whitespace : text;\n}\n","import { LanguageModelV1FunctionToolCall } from '@ai-sdk/provider';\nimport { safeParseJSON, safeValidateTypes } from '@ai-sdk/provider-utils';\nimport { Schema, asSchema } from '@ai-sdk/ui-utils';\nimport { InvalidToolArgumentsError } from '../../errors/invalid-tool-arguments-error';\nimport { NoSuchToolError } from '../../errors/no-such-tool-error';\nimport { ToolCallRepairError } from '../../errors/tool-call-repair-error';\nimport { CoreMessage } from '../prompt';\nimport { inferParameters } from '../tool/tool';\nimport { ToolCallUnion } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair';\nimport { ToolSet } from './tool-set';\n\nexport async function parseToolCall<TOOLS extends ToolSet>({\n  toolCall,\n  tools,\n  repairToolCall,\n  system,\n  messages,\n}: {\n  toolCall: LanguageModelV1FunctionToolCall;\n  tools: TOOLS | undefined;\n  repairToolCall: ToolCallRepairFunction<TOOLS> | undefined;\n  system: string | undefined;\n  messages: CoreMessage[];\n}): Promise<ToolCallUnion<TOOLS>> {\n  if (tools == null) {\n    throw new NoSuchToolError({ toolName: toolCall.toolName });\n  }\n\n  try {\n    return await doParseToolCall({ toolCall, tools });\n  } catch (error) {\n    if (\n      repairToolCall == null ||\n      !(\n        NoSuchToolError.isInstance(error) ||\n        InvalidToolArgumentsError.isInstance(error)\n      )\n    ) {\n      throw error;\n    }\n\n    let repairedToolCall: LanguageModelV1FunctionToolCall | null = null;\n\n    try {\n      repairedToolCall = await repairToolCall({\n        toolCall,\n        tools,\n        parameterSchema: ({ toolName }) =>\n          asSchema(tools[toolName].parameters).jsonSchema,\n        system,\n        messages,\n        error,\n      });\n    } catch (repairError) {\n      throw new ToolCallRepairError({\n        cause: repairError,\n        originalError: error,\n      });\n    }\n\n    // no repaired tool call returned\n    if (repairedToolCall == null) {\n      throw error;\n    }\n\n    return await doParseToolCall({ toolCall: repairedToolCall, tools });\n  }\n}\n\nasync function doParseToolCall<TOOLS extends ToolSet>({\n  toolCall,\n  tools,\n}: {\n  toolCall: LanguageModelV1FunctionToolCall;\n  tools: TOOLS;\n}): Promise<ToolCallUnion<TOOLS>> {\n  const toolName = toolCall.toolName as keyof TOOLS & string;\n\n  const tool = tools[toolName];\n\n  if (tool == null) {\n    throw new NoSuchToolError({\n      toolName: toolCall.toolName,\n      availableTools: Object.keys(tools),\n    });\n  }\n\n  const schema = asSchema(tool.parameters) as Schema<\n    inferParameters<TOOLS[keyof TOOLS]['parameters']>\n  >;\n\n  // when the tool call has no arguments, we try passing an empty object to the schema\n  // (many LLMs generate empty strings for tool calls with no arguments)\n  const parseResult =\n    toolCall.args.trim() === ''\n      ? safeValidateTypes({ value: {}, schema })\n      : safeParseJSON({ text: toolCall.args, schema });\n\n  if (parseResult.success === false) {\n    throw new InvalidToolArgumentsError({\n      toolName,\n      toolArgs: toolCall.args,\n      cause: parseResult.error,\n    });\n  }\n\n  return {\n    type: 'tool-call',\n    toolCallId: toolCall.toolCallId,\n    toolName,\n    args: parseResult.value,\n  };\n}\n","import { AISDKError, getErrorMessage } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidToolArgumentsError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidToolArgumentsError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly toolName: string;\n  readonly toolArgs: string;\n\n  constructor({\n    toolArgs,\n    toolName,\n    cause,\n    message = `Invalid arguments for tool ${toolName}: ${getErrorMessage(\n      cause,\n    )}`,\n  }: {\n    message?: string;\n    toolArgs: string;\n    toolName: string;\n    cause: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.toolArgs = toolArgs;\n    this.toolName = toolName;\n  }\n\n  static isInstance(error: unknown): error is InvalidToolArgumentsError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoSuchToolError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchToolError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly toolName: string;\n  readonly availableTools: string[] | undefined;\n\n  constructor({\n    toolName,\n    availableTools = undefined,\n    message = `Model tried to call unavailable tool '${toolName}'. ${\n      availableTools === undefined\n        ? 'No tools are available.'\n        : `Available tools: ${availableTools.join(', ')}.`\n    }`,\n  }: {\n    toolName: string;\n    availableTools?: string[] | undefined;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.toolName = toolName;\n    this.availableTools = availableTools;\n  }\n\n  static isInstance(error: unknown): error is NoSuchToolError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError, getErrorMessage } from '@ai-sdk/provider';\nimport { InvalidToolArgumentsError } from './invalid-tool-arguments-error';\nimport { NoSuchToolError } from './no-such-tool-error';\n\nconst name = 'AI_ToolCallRepairError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class ToolCallRepairError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly originalError: NoSuchToolError | InvalidToolArgumentsError;\n\n  constructor({\n    cause,\n    originalError,\n    message = `Error repairing tool call: ${getErrorMessage(cause)}`,\n  }: {\n    message?: string;\n    cause: unknown;\n    originalError: NoSuchToolError | InvalidToolArgumentsError;\n  }) {\n    super({ name, message, cause });\n    this.originalError = originalError;\n  }\n\n  static isInstance(error: unknown): error is ToolCallRepairError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","export type ReasoningDetail =\n  | { type: 'text'; text: string; signature?: string }\n  | { type: 'redacted'; data: string };\n\nexport function asReasoningText(\n  reasoning: Array<ReasoningDetail>,\n): string | undefined {\n  const reasoningText = reasoning\n    .filter(part => part.type === 'text')\n    .map(part => part.text)\n    .join('');\n\n  return reasoningText.length > 0 ? reasoningText : undefined;\n}\n","import { ToolResultPart } from '../prompt';\nimport { ReasoningDetail } from './reasoning-detail';\nimport { ResponseMessage } from './step-result';\nimport { ToolCallArray } from './tool-call';\nimport { ToolResultArray } from './tool-result';\nimport { ToolSet } from './tool-set';\n\n/**\nConverts the result of a `generateText` call to a list of response messages.\n */\nexport function toResponseMessages<TOOLS extends ToolSet>({\n  text = '',\n  reasoning,\n  tools,\n  toolCalls,\n  toolResults,\n  messageId,\n  generateMessageId,\n}: {\n  text: string | undefined;\n  reasoning: Array<ReasoningDetail>;\n  tools: TOOLS;\n  toolCalls: ToolCallArray<TOOLS>;\n  toolResults: ToolResultArray<TOOLS>;\n  messageId: string;\n  generateMessageId: () => string;\n}): Array<ResponseMessage> {\n  const responseMessages: Array<ResponseMessage> = [];\n\n  responseMessages.push({\n    role: 'assistant',\n    content: [\n      ...reasoning.map(part =>\n        part.type === 'text'\n          ? { ...part, type: 'reasoning' as const }\n          : { ...part, type: 'redacted-reasoning' as const },\n      ),\n      { type: 'text', text },\n      ...toolCalls,\n    ],\n    id: messageId,\n  });\n\n  if (toolResults.length > 0) {\n    responseMessages.push({\n      role: 'tool',\n      id: generateMessageId(),\n      content: toolResults.map((toolResult): ToolResultPart => {\n        const tool = tools[toolResult.toolName];\n        return tool?.experimental_toToolResultContent != null\n          ? {\n              type: 'tool-result',\n              toolCallId: toolResult.toolCallId,\n              toolName: toolResult.toolName,\n              result: tool.experimental_toToolResultContent(toolResult.result),\n              experimental_content: tool.experimental_toToolResultContent(\n                toolResult.result,\n              ),\n            }\n          : {\n              type: 'tool-result',\n              toolCallId: toolResult.toolCallId,\n              toolName: toolResult.toolName,\n              result: toolResult.result,\n            };\n      }),\n    });\n  }\n\n  return responseMessages;\n}\n","import { safeParseJSON, safeValidateTypes } from '@ai-sdk/provider-utils';\nimport {\n  asSchema,\n  DeepPartial,\n  parsePartialJson,\n  Schema,\n} from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { NoObjectGeneratedError } from '../../errors';\nimport { injectJsonInstruction } from '../generate-object/inject-json-instruction';\nimport {\n  LanguageModel,\n  LanguageModelV1CallOptions,\n} from '../types/language-model';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { LanguageModelUsage } from '../types/usage';\n\nexport interface Output<OUTPUT, PARTIAL> {\n  readonly type: 'object' | 'text';\n  injectIntoSystemPrompt(options: {\n    system: string | undefined;\n    model: LanguageModel;\n  }): string | undefined;\n\n  responseFormat: (options: {\n    model: LanguageModel;\n  }) => LanguageModelV1CallOptions['responseFormat'];\n\n  parsePartial(options: { text: string }): { partial: PARTIAL } | undefined;\n\n  parseOutput(\n    options: { text: string },\n    context: {\n      response: LanguageModelResponseMetadata;\n      usage: LanguageModelUsage;\n    },\n  ): OUTPUT;\n}\n\nexport const text = (): Output<string, string> => ({\n  type: 'text',\n\n  responseFormat: () => ({ type: 'text' }),\n\n  injectIntoSystemPrompt({ system }: { system: string | undefined }) {\n    return system;\n  },\n\n  parsePartial({ text }: { text: string }) {\n    return { partial: text };\n  },\n\n  parseOutput({ text }: { text: string }) {\n    return text;\n  },\n});\n\nexport const object = <OUTPUT>({\n  schema: inputSchema,\n}: {\n  schema: z.Schema<OUTPUT, z.ZodTypeDef, any> | Schema<OUTPUT>;\n}): Output<OUTPUT, DeepPartial<OUTPUT>> => {\n  const schema = asSchema(inputSchema);\n\n  return {\n    type: 'object',\n\n    responseFormat: ({ model }) => ({\n      type: 'json',\n      schema: model.supportsStructuredOutputs ? schema.jsonSchema : undefined,\n    }),\n\n    injectIntoSystemPrompt({ system, model }) {\n      // when the model supports structured outputs,\n      // we can use the system prompt as is:\n      return model.supportsStructuredOutputs\n        ? system\n        : injectJsonInstruction({\n            prompt: system,\n            schema: schema.jsonSchema,\n          });\n    },\n\n    parsePartial({ text }: { text: string }) {\n      const result = parsePartialJson(text);\n\n      switch (result.state) {\n        case 'failed-parse':\n        case 'undefined-input':\n          return undefined;\n\n        case 'repaired-parse':\n        case 'successful-parse':\n          return {\n            // Note: currently no validation of partial results:\n            partial: result.value as DeepPartial<OUTPUT>,\n          };\n\n        default: {\n          const _exhaustiveCheck: never = result.state;\n          throw new Error(`Unsupported parse state: ${_exhaustiveCheck}`);\n        }\n      }\n    },\n\n    parseOutput(\n      { text }: { text: string },\n      context: {\n        response: LanguageModelResponseMetadata;\n        usage: LanguageModelUsage;\n      },\n    ) {\n      const parseResult = safeParseJSON({ text });\n\n      if (!parseResult.success) {\n        throw new NoObjectGeneratedError({\n          message: 'No object generated: could not parse the response.',\n          cause: parseResult.error,\n          text,\n          response: context.response,\n          usage: context.usage,\n        });\n      }\n\n      const validationResult = safeValidateTypes({\n        value: parseResult.value,\n        schema,\n      });\n\n      if (!validationResult.success) {\n        throw new NoObjectGeneratedError({\n          message: 'No object generated: response did not match schema.',\n          cause: validationResult.error,\n          text,\n          response: context.response,\n          usage: context.usage,\n        });\n      }\n\n      return validationResult.value;\n    },\n  };\n};\n","export {\n  AISDKError,\n  APICallError,\n  EmptyResponseBodyError,\n  InvalidPromptError,\n  InvalidResponseDataError,\n  JSONParseError,\n  LoadAPIKeyError,\n  NoContentGeneratedError,\n  NoSuchModelError,\n  TypeValidationError,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\n\nexport { InvalidArgumentError } from './invalid-argument-error';\nexport { InvalidStreamPartError } from './invalid-stream-part-error';\nexport { InvalidToolArgumentsError } from './invalid-tool-arguments-error';\nexport { NoImageGeneratedError } from './no-image-generated-error';\nexport { NoObjectGeneratedError } from './no-object-generated-error';\nexport { NoOutputSpecifiedError } from './no-output-specified-error';\nexport { NoSuchToolError } from './no-such-tool-error';\nexport { ToolCallRepairError } from './tool-call-repair-error';\nexport { ToolExecutionError } from './tool-execution-error';\nexport { MCPClientError } from './mcp-client-error';\n\nexport { InvalidDataContentError } from '../core/prompt/invalid-data-content-error';\nexport { InvalidMessageRoleError } from '../core/prompt/invalid-message-role-error';\nexport { MessageConversionError } from '../core/prompt/message-conversion-error';\nexport { DownloadError } from '../util/download-error';\nexport { RetryError } from '../util/retry-error';\n","import { AISDKError } from '@ai-sdk/provider';\nimport { SingleRequestTextStreamPart } from '../core/generate-text/run-tools-transformation';\n\nconst name = 'AI_InvalidStreamPartError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidStreamPartError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly chunk: SingleRequestTextStreamPart<any>;\n\n  constructor({\n    chunk,\n    message,\n  }: {\n    chunk: SingleRequestTextStreamPart<any>;\n    message: string;\n  }) {\n    super({ name, message });\n\n    this.chunk = chunk;\n  }\n\n  static isInstance(error: unknown): error is InvalidStreamPartError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_MCPClientError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * An error occurred with the MCP client.\n */\nexport class MCPClientError extends AISDKError {\n  private readonly [symbol] = true;\n\n  constructor({\n    name = 'MCPClientError',\n    message,\n    cause,\n  }: {\n    name?: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message, cause });\n  }\n\n  static isInstance(error: unknown): error is MCPClientError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { InvalidArgumentError } from '@ai-sdk/provider';\nimport { delay as originalDelay } from '@ai-sdk/provider-utils';\nimport { TextStreamPart } from './stream-text-result';\nimport { ToolSet } from './tool-set';\n\nconst CHUNKING_REGEXPS = {\n  word: /\\s*\\S+\\s+/m,\n  line: /[^\\n]*\\n/m,\n};\n\n/**\n * Smooths text streaming output.\n *\n * @param delayInMs - The delay in milliseconds between each chunk. Defaults to 10ms. Can be set to `null` to skip the delay.\n * @param chunking - Controls how the text is chunked for streaming. Use \"word\" to stream word by word (default), \"line\" to stream line by line, or provide a custom RegExp pattern for custom chunking.\n *\n * @returns A transform stream that smooths text streaming output.\n */\nexport function smoothStream<TOOLS extends ToolSet>({\n  delayInMs = 10,\n  chunking = 'word',\n  _internal: { delay = originalDelay } = {},\n}: {\n  delayInMs?: number | null;\n  chunking?: 'word' | 'line' | RegExp;\n  /**\n   * Internal. For test use only. May change without notice.\n   */\n  _internal?: {\n    delay?: (delayInMs: number | null) => Promise<void>;\n  };\n} = {}): (options: {\n  tools: TOOLS;\n}) => TransformStream<TextStreamPart<TOOLS>, TextStreamPart<TOOLS>> {\n  const chunkingRegexp =\n    typeof chunking === 'string' ? CHUNKING_REGEXPS[chunking] : chunking;\n\n  if (chunkingRegexp == null) {\n    throw new InvalidArgumentError({\n      argument: 'chunking',\n      message: `Chunking must be \"word\" or \"line\" or a RegExp. Received: ${chunking}`,\n    });\n  }\n\n  return () => {\n    let buffer = '';\n    return new TransformStream<TextStreamPart<TOOLS>, TextStreamPart<TOOLS>>({\n      async transform(chunk, controller) {\n        if (chunk.type === 'step-finish') {\n          if (buffer.length > 0) {\n            controller.enqueue({ type: 'text-delta', textDelta: buffer });\n            buffer = '';\n          }\n\n          controller.enqueue(chunk);\n          return;\n        }\n\n        if (chunk.type !== 'text-delta') {\n          controller.enqueue(chunk);\n          return;\n        }\n\n        buffer += chunk.textDelta;\n\n        let match;\n        while ((match = chunkingRegexp.exec(buffer)) != null) {\n          const chunk = match[0];\n          controller.enqueue({ type: 'text-delta', textDelta: chunk });\n          buffer = buffer.slice(chunk.length);\n\n          await delay(delayInMs);\n        }\n      },\n    });\n  };\n}\n","import { AISDKError, LanguageModelV1Source } from '@ai-sdk/provider';\nimport { createIdGenerator, IDGenerator } from '@ai-sdk/provider-utils';\nimport { DataStreamString, formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { Span } from '@opentelemetry/api';\nimport { ServerResponse } from 'node:http';\nimport { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport { NoOutputSpecifiedError } from '../../errors/no-output-specified-error';\nimport { StreamData } from '../../streams/stream-data';\nimport { asArray } from '../../util/as-array';\nimport { DelayedPromise } from '../../util/delayed-promise';\nimport { DataStreamWriter } from '../data-stream/data-stream-writer';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { CoreAssistantMessage } from '../prompt/message';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { prepareToolsAndToolChoice } from '../prompt/prepare-tools-and-tool-choice';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport {\n  FinishReason,\n  LanguageModel,\n  LogProbs,\n  ToolChoice,\n} from '../types/language-model';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { ProviderMetadata, ProviderOptions } from '../types/provider-metadata';\nimport { addLanguageModelUsage, LanguageModelUsage } from '../types/usage';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { createStitchableStream } from '../util/create-stitchable-stream';\nimport { mergeStreams } from '../util/merge-streams';\nimport { now as originalNow } from '../util/now';\nimport { prepareOutgoingHttpHeaders } from '../util/prepare-outgoing-http-headers';\nimport { prepareResponseHeaders } from '../util/prepare-response-headers';\nimport { splitOnLastWhitespace } from '../util/split-on-last-whitespace';\nimport { writeToServerResponse } from '../util/write-to-server-response';\nimport { Output } from './output';\nimport { asReasoningText, ReasoningDetail } from './reasoning-detail';\nimport {\n  runToolsTransformation,\n  SingleRequestTextStreamPart,\n} from './run-tools-transformation';\nimport { ResponseMessage, StepResult } from './step-result';\nimport {\n  DataStreamOptions,\n  StreamTextResult,\n  TextStreamPart,\n} from './stream-text-result';\nimport { toResponseMessages } from './to-response-messages';\nimport { ToolCallUnion } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair';\nimport { ToolResultUnion } from './tool-result';\nimport { ToolSet } from './tool-set';\nimport { InvalidStreamPartError } from '../../errors/invalid-stream-part-error';\n\nconst originalGenerateId = createIdGenerator({\n  prefix: 'aitxt',\n  size: 24,\n});\n\nconst originalGenerateMessageId = createIdGenerator({\n  prefix: 'msg',\n  size: 24,\n});\n\n/**\nA transformation that is applied to the stream.\n\n@param stopStream - A function that stops the source stream.\n@param tools - The tools that are accessible to and can be called by the model. The model needs to support calling tools.\n */\nexport type StreamTextTransform<TOOLS extends ToolSet> = (options: {\n  tools: TOOLS; // for type inference\n  stopStream: () => void;\n}) => TransformStream<TextStreamPart<TOOLS>, TextStreamPart<TOOLS>>;\n\n/**\nCallback that is set using the `onError` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnErrorCallback = (event: {\n  error: unknown;\n}) => Promise<void> | void;\n\n/**\nCallback that is set using the `onStepFinish` option.\n\n@param stepResult - The result of the step.\n */\nexport type StreamTextOnStepFinishCallback<TOOLS extends ToolSet> = (\n  stepResult: StepResult<TOOLS>,\n) => Promise<void> | void;\n\n/**\nCallback that is set using the `onChunk` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnChunkCallback<TOOLS extends ToolSet> = (event: {\n  chunk: Extract<\n    TextStreamPart<TOOLS>,\n    {\n      type:\n        | 'text-delta'\n        | 'reasoning'\n        | 'source'\n        | 'tool-call'\n        | 'tool-call-streaming-start'\n        | 'tool-call-delta'\n        | 'tool-result';\n    }\n  >;\n}) => Promise<void> | void;\n\n/**\nCallback that is set using the `onFinish` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnFinishCallback<TOOLS extends ToolSet> = (\n  event: Omit<StepResult<TOOLS>, 'stepType' | 'isContinued'> & {\n    /**\nDetails for all steps.\n   */\n    readonly steps: StepResult<TOOLS>[];\n  },\n) => Promise<void> | void;\n\n/**\nGenerate a text and call tools for a given prompt using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateText` instead.\n\n@param model - The language model to use.\n@param tools - Tools that are accessible to and can be called by the model. The model needs to support calling tools.\n\n@param system - A system message that will be part of the prompt.\n@param prompt - A simple text prompt. You can either use `prompt` or `messages` but not both.\n@param messages - A list of messages. You can either use `prompt` or `messages` but not both.\n\n@param maxTokens - Maximum number of tokens to generate.\n@param temperature - Temperature setting.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topP - Nucleus sampling.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topK - Only sample from the top K options for each subsequent token.\nUsed to remove \"long tail\" low probability responses.\nRecommended for advanced use cases only. You usually only need to use temperature.\n@param presencePenalty - Presence penalty setting.\nIt affects the likelihood of the model to repeat information that is already in the prompt.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param frequencyPenalty - Frequency penalty setting.\nIt affects the likelihood of the model to repeatedly use the same words or phrases.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param stopSequences - Stop sequences.\nIf set, the model will stop generating text when one of the stop sequences is generated.\n@param seed - The seed (integer) to use for random sampling.\nIf set and supported by the model, calls will generate deterministic results.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@param maxSteps - Maximum number of sequential LLM calls (steps), e.g. when you use tool calls.\n@param experimental_generateMessageId - Generate a unique ID for each message.\n\n@param onChunk - Callback that is called for each chunk of the stream. The stream processing will pause until the callback promise is resolved.\n@param onError - Callback that is called when an error occurs during streaming. You can use it to log errors.\n@param onStepFinish - Callback that is called when each step (LLM call) is finished, including intermediate steps.\n@param onFinish - Callback that is called when the LLM response and all request tool executions\n(for tools that have an `execute` function) are finished.\n\n@return\nA result object for accessing different stream types and additional information.\n */\nexport function streamText<\n  TOOLS extends ToolSet,\n  OUTPUT = never,\n  PARTIAL_OUTPUT = never,\n>({\n  model,\n  tools,\n  toolChoice,\n  system,\n  prompt,\n  messages,\n  maxRetries,\n  abortSignal,\n  headers,\n  maxSteps = 1,\n  experimental_generateMessageId: generateMessageId = originalGenerateMessageId,\n  experimental_output: output,\n  experimental_continueSteps: continueSteps = false,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata,\n  providerOptions = experimental_providerMetadata,\n  experimental_toolCallStreaming = false,\n  toolCallStreaming = experimental_toolCallStreaming,\n  experimental_activeTools: activeTools,\n  experimental_repairToolCall: repairToolCall,\n  experimental_transform: transform,\n  onChunk,\n  onError,\n  onFinish,\n  onStepFinish,\n  _internal: {\n    now = originalNow,\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n  } = {},\n  ...settings\n}: CallSettings &\n  Prompt & {\n    /**\nThe language model to use.\n     */\n    model: LanguageModel;\n\n    /**\nThe tools that the model can call. The model needs to support calling tools.\n    */\n    tools?: TOOLS;\n\n    /**\nThe tool choice strategy. Default: 'auto'.\n     */\n    toolChoice?: ToolChoice<TOOLS>;\n\n    /**\nMaximum number of sequential LLM calls (steps), e.g. when you use tool calls. Must be at least 1.\n\nA maximum number is required to prevent infinite loops in the case of misconfigured tools.\n\nBy default, it's set to 1, which means that only a single LLM call is made.\n */\n    maxSteps?: number;\n\n    /**\nGenerate a unique ID for each message.\n     */\n    experimental_generateMessageId?: IDGenerator;\n\n    /**\nWhen enabled, the model will perform additional steps if the finish reason is \"length\" (experimental).\n\nBy default, it's set to false.\n     */\n    experimental_continueSteps?: boolean;\n\n    /**\nOptional telemetry configuration (experimental).\n     */\n    experimental_telemetry?: TelemetrySettings;\n\n    /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n    providerOptions?: ProviderOptions;\n\n    /**\n@deprecated Use `providerOptions` instead.\n */\n    experimental_providerMetadata?: ProviderMetadata;\n\n    /**\nLimits the tools that are available for the model to call without\nchanging the tool call and result types in the result.\n     */\n    experimental_activeTools?: Array<keyof TOOLS>;\n\n    /**\nOptional specification for parsing structured outputs from the LLM response.\n     */\n    experimental_output?: Output<OUTPUT, PARTIAL_OUTPUT>;\n\n    /**\nA function that attempts to repair a tool call that failed to parse.\n     */\n    experimental_repairToolCall?: ToolCallRepairFunction<TOOLS>;\n\n    /**\nEnable streaming of tool call deltas as they are generated. Disabled by default.\n     */\n    toolCallStreaming?: boolean;\n\n    /**\n@deprecated Use `toolCallStreaming` instead.\n     */\n    experimental_toolCallStreaming?: boolean;\n\n    /**\nOptional stream transformations.\nThey are applied in the order they are provided.\nThe stream transformations must maintain the stream structure for streamText to work correctly.\n     */\n    experimental_transform?:\n      | StreamTextTransform<TOOLS>\n      | Array<StreamTextTransform<TOOLS>>;\n\n    /**\nCallback that is called for each chunk of the stream.\nThe stream processing will pause until the callback promise is resolved.\n     */\n    onChunk?: StreamTextOnChunkCallback<TOOLS>;\n\n    /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n    onError?: StreamTextOnErrorCallback;\n\n    /**\nCallback that is called when the LLM response and all request tool executions\n(for tools that have an `execute` function) are finished.\n\nThe usage is the combined usage of all steps.\n     */\n    onFinish?: StreamTextOnFinishCallback<TOOLS>;\n\n    /**\nCallback that is called when each step (LLM call) is finished, including intermediate steps.\n    */\n    onStepFinish?: StreamTextOnStepFinishCallback<TOOLS>;\n\n    /**\nInternal. For test use only. May change without notice.\n     */\n    _internal?: {\n      now?: () => number;\n      generateId?: IDGenerator;\n      currentDate?: () => Date;\n    };\n  }): StreamTextResult<TOOLS, PARTIAL_OUTPUT> {\n  return new DefaultStreamTextResult<TOOLS, OUTPUT, PARTIAL_OUTPUT>({\n    model,\n    telemetry,\n    headers,\n    settings,\n    maxRetries,\n    abortSignal,\n    system,\n    prompt,\n    messages,\n    tools,\n    toolChoice,\n    toolCallStreaming,\n    transforms: asArray(transform),\n    activeTools,\n    repairToolCall,\n    maxSteps,\n    output,\n    continueSteps,\n    providerOptions,\n    onChunk,\n    onError,\n    onFinish,\n    onStepFinish,\n    now,\n    currentDate,\n    generateId,\n    generateMessageId,\n  });\n}\n\ntype EnrichedStreamPart<TOOLS extends ToolSet, PARTIAL_OUTPUT> = {\n  part: TextStreamPart<TOOLS>;\n  partialOutput: PARTIAL_OUTPUT | undefined;\n};\n\nfunction createOutputTransformStream<\n  TOOLS extends ToolSet,\n  OUTPUT,\n  PARTIAL_OUTPUT,\n>(\n  output: Output<OUTPUT, PARTIAL_OUTPUT> | undefined,\n): TransformStream<\n  TextStreamPart<TOOLS>,\n  EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n> {\n  if (!output) {\n    return new TransformStream<\n      TextStreamPart<TOOLS>,\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n    >({\n      transform(chunk, controller) {\n        controller.enqueue({ part: chunk, partialOutput: undefined });\n      },\n    });\n  }\n\n  let text = '';\n  let textChunk = '';\n  let lastPublishedJson = '';\n\n  function publishTextChunk({\n    controller,\n    partialOutput = undefined,\n  }: {\n    controller: TransformStreamDefaultController<\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n    >;\n    partialOutput?: PARTIAL_OUTPUT;\n  }) {\n    controller.enqueue({\n      part: { type: 'text-delta', textDelta: textChunk },\n      partialOutput,\n    });\n    textChunk = '';\n  }\n\n  return new TransformStream<\n    TextStreamPart<TOOLS>,\n    EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n  >({\n    transform(chunk, controller) {\n      // ensure that we publish the last text chunk before the step finish:\n      if (chunk.type === 'step-finish') {\n        publishTextChunk({ controller });\n      }\n\n      if (chunk.type !== 'text-delta') {\n        controller.enqueue({ part: chunk, partialOutput: undefined });\n        return;\n      }\n\n      text += chunk.textDelta;\n      textChunk += chunk.textDelta;\n\n      // only publish if partial json can be parsed:\n      const result = output.parsePartial({ text });\n      if (result != null) {\n        // only send new json if it has changed:\n        const currentJson = JSON.stringify(result.partial);\n        if (currentJson !== lastPublishedJson) {\n          publishTextChunk({ controller, partialOutput: result.partial });\n          lastPublishedJson = currentJson;\n        }\n      }\n    },\n\n    flush(controller) {\n      // publish remaining text (there should be none if the content was correctly formatted):\n      if (textChunk.length > 0) {\n        publishTextChunk({ controller });\n      }\n    },\n  });\n}\n\nclass DefaultStreamTextResult<TOOLS extends ToolSet, OUTPUT, PARTIAL_OUTPUT>\n  implements StreamTextResult<TOOLS, PARTIAL_OUTPUT>\n{\n  private readonly warningsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['warnings']>\n  >();\n  private readonly usagePromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['usage']>\n  >();\n  private readonly finishReasonPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['finishReason']>\n  >();\n  private readonly providerMetadataPromise = new DelayedPromise<\n    Awaited<\n      StreamTextResult<TOOLS, PARTIAL_OUTPUT>['experimental_providerMetadata']\n    >\n  >();\n  private readonly textPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['text']>\n  >();\n  private readonly reasoningPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['reasoning']>\n  >();\n  private readonly reasoningDetailsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['reasoningDetails']>\n  >();\n  private readonly sourcesPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['sources']>\n  >();\n  private readonly toolCallsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['toolCalls']>\n  >();\n  private readonly toolResultsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['toolResults']>\n  >();\n  private readonly requestPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['request']>\n  >();\n  private readonly responsePromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['response']>\n  >();\n  private readonly stepsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['steps']>\n  >();\n\n  private readonly addStream: (\n    stream: ReadableStream<TextStreamPart<TOOLS>>,\n  ) => void;\n\n  private readonly closeStream: () => void;\n\n  private baseStream: ReadableStream<EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>>;\n\n  private output: Output<OUTPUT, PARTIAL_OUTPUT> | undefined;\n\n  constructor({\n    model,\n    telemetry,\n    headers,\n    settings,\n    maxRetries: maxRetriesArg,\n    abortSignal,\n    system,\n    prompt,\n    messages,\n    tools,\n    toolChoice,\n    toolCallStreaming,\n    transforms,\n    activeTools,\n    repairToolCall,\n    maxSteps,\n    output,\n    continueSteps,\n    providerOptions,\n    now,\n    currentDate,\n    generateId,\n    generateMessageId,\n    onChunk,\n    onError,\n    onFinish,\n    onStepFinish,\n  }: {\n    model: LanguageModel;\n    telemetry: TelemetrySettings | undefined;\n    headers: Record<string, string | undefined> | undefined;\n    settings: Omit<CallSettings, 'abortSignal' | 'headers'>;\n    maxRetries: number | undefined;\n    abortSignal: AbortSignal | undefined;\n    system: Prompt['system'];\n    prompt: Prompt['prompt'];\n    messages: Prompt['messages'];\n    tools: TOOLS | undefined;\n    toolChoice: ToolChoice<TOOLS> | undefined;\n    toolCallStreaming: boolean;\n    transforms: Array<StreamTextTransform<TOOLS>>;\n    activeTools: Array<keyof TOOLS> | undefined;\n    repairToolCall: ToolCallRepairFunction<TOOLS> | undefined;\n    maxSteps: number;\n    output: Output<OUTPUT, PARTIAL_OUTPUT> | undefined;\n    continueSteps: boolean;\n    providerOptions: ProviderOptions | undefined;\n    now: () => number;\n    currentDate: () => Date;\n    generateId: () => string;\n    generateMessageId: () => string;\n\n    // callbacks:\n    onChunk: undefined | StreamTextOnChunkCallback<TOOLS>;\n    onError: undefined | StreamTextOnErrorCallback;\n    onFinish: undefined | StreamTextOnFinishCallback<TOOLS>;\n    onStepFinish: undefined | StreamTextOnStepFinishCallback<TOOLS>;\n  }) {\n    if (maxSteps < 1) {\n      throw new InvalidArgumentError({\n        parameter: 'maxSteps',\n        value: maxSteps,\n        message: 'maxSteps must be at least 1',\n      });\n    }\n\n    this.output = output;\n\n    // event processor for telemetry, invoking callbacks, etc.\n    // The event processor reads the transformed stream to enable correct\n    // recording of the final transformed outputs.\n    let recordedStepText = '';\n    let recordedContinuationText = '';\n    let recordedFullText = '';\n\n    let stepReasoning: Array<ReasoningDetail> = [];\n    let activeReasoningText: undefined | (ReasoningDetail & { type: 'text' }) =\n      undefined;\n\n    let recordedStepSources: LanguageModelV1Source[] = [];\n    const recordedSources: LanguageModelV1Source[] = [];\n\n    const recordedResponse: LanguageModelResponseMetadata & {\n      messages: Array<ResponseMessage>;\n    } = {\n      id: generateId(),\n      timestamp: currentDate(),\n      modelId: model.modelId,\n      messages: [],\n    };\n    let recordedToolCalls: ToolCallUnion<TOOLS>[] = [];\n    let recordedToolResults: ToolResultUnion<TOOLS>[] = [];\n    let recordedFinishReason: FinishReason | undefined = undefined;\n    let recordedUsage: LanguageModelUsage | undefined = undefined;\n    let stepType: 'initial' | 'continue' | 'tool-result' = 'initial';\n    const recordedSteps: StepResult<TOOLS>[] = [];\n    let rootSpan!: Span;\n\n    const eventProcessor = new TransformStream<\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>,\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n    >({\n      async transform(chunk, controller) {\n        controller.enqueue(chunk); // forward the chunk to the next stream\n\n        const { part } = chunk;\n\n        if (\n          part.type === 'text-delta' ||\n          part.type === 'reasoning' ||\n          part.type === 'source' ||\n          part.type === 'tool-call' ||\n          part.type === 'tool-result' ||\n          part.type === 'tool-call-streaming-start' ||\n          part.type === 'tool-call-delta'\n        ) {\n          await onChunk?.({ chunk: part });\n        }\n\n        if (part.type === 'error') {\n          await onError?.({ error: part.error });\n        }\n\n        if (part.type === 'text-delta') {\n          recordedStepText += part.textDelta;\n          recordedContinuationText += part.textDelta;\n          recordedFullText += part.textDelta;\n        }\n\n        if (part.type === 'reasoning') {\n          if (activeReasoningText == null) {\n            activeReasoningText = { type: 'text', text: part.textDelta };\n            stepReasoning.push(activeReasoningText);\n          } else {\n            activeReasoningText.text += part.textDelta;\n          }\n        }\n\n        if (part.type === 'reasoning-signature') {\n          if (activeReasoningText == null) {\n            throw new AISDKError({\n              name: 'InvalidStreamPart',\n              message: 'reasoning-signature without reasoning',\n            });\n          }\n\n          activeReasoningText.signature = part.signature;\n          activeReasoningText = undefined; // signature concludes reasoning part\n        }\n\n        if (part.type === 'redacted-reasoning') {\n          stepReasoning.push({ type: 'redacted', data: part.data });\n        }\n\n        if (part.type === 'source') {\n          recordedSources.push(part.source);\n          recordedStepSources.push(part.source);\n        }\n\n        if (part.type === 'tool-call') {\n          recordedToolCalls.push(part);\n        }\n\n        if (part.type === 'tool-result') {\n          recordedToolResults.push(part);\n        }\n\n        if (part.type === 'step-finish') {\n          const stepMessages = toResponseMessages({\n            text: recordedContinuationText,\n            reasoning: stepReasoning,\n            tools: tools ?? ({} as TOOLS),\n            toolCalls: recordedToolCalls,\n            toolResults: recordedToolResults,\n            messageId: part.messageId,\n            generateMessageId,\n          });\n\n          // determine the next step type\n          const currentStep = recordedSteps.length;\n          let nextStepType: 'done' | 'continue' | 'tool-result' = 'done';\n          if (currentStep + 1 < maxSteps) {\n            if (\n              continueSteps &&\n              part.finishReason === 'length' &&\n              // only use continue when there are no tool calls:\n              recordedToolCalls.length === 0\n            ) {\n              nextStepType = 'continue';\n            } else if (\n              // there are tool calls:\n              recordedToolCalls.length > 0 &&\n              // all current tool calls have results:\n              recordedToolResults.length === recordedToolCalls.length\n            ) {\n              nextStepType = 'tool-result';\n            }\n          }\n\n          // Add step information (after response messages are updated):\n          const currentStepResult: StepResult<TOOLS> = {\n            stepType,\n            text: recordedStepText,\n            reasoning: asReasoningText(stepReasoning),\n            reasoningDetails: stepReasoning,\n            sources: recordedStepSources,\n            toolCalls: recordedToolCalls,\n            toolResults: recordedToolResults,\n            finishReason: part.finishReason,\n            usage: part.usage,\n            warnings: part.warnings,\n            logprobs: part.logprobs,\n            request: part.request,\n            response: {\n              ...part.response,\n              messages: [...recordedResponse.messages, ...stepMessages],\n            },\n            providerMetadata: part.experimental_providerMetadata,\n            experimental_providerMetadata: part.experimental_providerMetadata,\n            isContinued: part.isContinued,\n          };\n\n          await onStepFinish?.(currentStepResult);\n\n          recordedSteps.push(currentStepResult);\n\n          recordedToolCalls = [];\n          recordedToolResults = [];\n          recordedStepText = '';\n          recordedStepSources = [];\n          stepReasoning = [];\n          activeReasoningText = undefined;\n\n          if (nextStepType !== 'done') {\n            stepType = nextStepType;\n          }\n\n          if (nextStepType !== 'continue') {\n            recordedResponse.messages.push(...stepMessages);\n            recordedContinuationText = '';\n          }\n        }\n\n        if (part.type === 'finish') {\n          recordedResponse.id = part.response.id;\n          recordedResponse.timestamp = part.response.timestamp;\n          recordedResponse.modelId = part.response.modelId;\n          recordedResponse.headers = part.response.headers;\n          recordedUsage = part.usage;\n          recordedFinishReason = part.finishReason;\n        }\n      },\n\n      async flush(controller) {\n        try {\n          if (recordedSteps.length === 0) {\n            return; // no steps recorded (e.g. in error scenario)\n          }\n\n          // from last step (when there are errors there may be no last step)\n          const lastStep = recordedSteps[recordedSteps.length - 1];\n\n          self.warningsPromise.resolve(lastStep.warnings);\n          self.requestPromise.resolve(lastStep.request);\n          self.responsePromise.resolve(lastStep.response);\n          self.toolCallsPromise.resolve(lastStep.toolCalls);\n          self.toolResultsPromise.resolve(lastStep.toolResults);\n          self.providerMetadataPromise.resolve(\n            lastStep.experimental_providerMetadata,\n          );\n          self.reasoningPromise.resolve(lastStep.reasoning);\n          self.reasoningDetailsPromise.resolve(lastStep.reasoningDetails);\n\n          // derived:\n          const finishReason = recordedFinishReason ?? 'unknown';\n          const usage = recordedUsage ?? {\n            completionTokens: NaN,\n            promptTokens: NaN,\n            totalTokens: NaN,\n          };\n\n          // from finish:\n          self.finishReasonPromise.resolve(finishReason);\n          self.usagePromise.resolve(usage);\n\n          // aggregate results:\n          self.textPromise.resolve(recordedFullText);\n          self.sourcesPromise.resolve(recordedSources);\n          self.stepsPromise.resolve(recordedSteps);\n\n          // call onFinish callback:\n          await onFinish?.({\n            finishReason,\n            logprobs: undefined,\n            usage,\n            text: recordedFullText,\n            reasoning: lastStep.reasoning,\n            reasoningDetails: lastStep.reasoningDetails,\n            sources: lastStep.sources,\n            toolCalls: lastStep.toolCalls,\n            toolResults: lastStep.toolResults,\n            request: lastStep.request ?? {},\n            response: lastStep.response,\n            warnings: lastStep.warnings,\n            providerMetadata: lastStep.providerMetadata,\n            experimental_providerMetadata:\n              lastStep.experimental_providerMetadata,\n            steps: recordedSteps,\n          });\n\n          // Add response information to the root span:\n          rootSpan.setAttributes(\n            selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                'ai.response.finishReason': finishReason,\n                'ai.response.text': { output: () => recordedFullText },\n                'ai.response.toolCalls': {\n                  output: () =>\n                    lastStep.toolCalls?.length\n                      ? JSON.stringify(lastStep.toolCalls)\n                      : undefined,\n                },\n\n                'ai.usage.promptTokens': usage.promptTokens,\n                'ai.usage.completionTokens': usage.completionTokens,\n              },\n            }),\n          );\n        } catch (error) {\n          controller.error(error);\n        } finally {\n          rootSpan.end();\n        }\n      },\n    });\n\n    // initialize the stitchable stream and the transformed stream:\n    const stitchableStream = createStitchableStream<TextStreamPart<TOOLS>>();\n    this.addStream = stitchableStream.addStream;\n    this.closeStream = stitchableStream.close;\n\n    let stream = stitchableStream.stream;\n\n    // transform the stream before output parsing\n    // to enable replacement of stream segments:\n    for (const transform of transforms) {\n      stream = stream.pipeThrough(\n        transform({\n          tools: tools as TOOLS,\n          stopStream() {\n            stitchableStream.terminate();\n          },\n        }),\n      );\n    }\n\n    this.baseStream = stream\n      .pipeThrough(createOutputTransformStream(output))\n      .pipeThrough(eventProcessor);\n\n    const { maxRetries, retry } = prepareRetries({\n      maxRetries: maxRetriesArg,\n    });\n\n    const tracer = getTracer(telemetry);\n\n    const baseTelemetryAttributes = getBaseTelemetryAttributes({\n      model,\n      telemetry,\n      headers,\n      settings: { ...settings, maxRetries },\n    });\n\n    const initialPrompt = standardizePrompt({\n      prompt: {\n        system: output?.injectIntoSystemPrompt({ system, model }) ?? system,\n        prompt,\n        messages,\n      },\n      tools,\n    });\n\n    const self = this;\n\n    recordSpan({\n      name: 'ai.streamText',\n      attributes: selectTelemetryAttributes({\n        telemetry,\n        attributes: {\n          ...assembleOperationName({ operationId: 'ai.streamText', telemetry }),\n          ...baseTelemetryAttributes,\n          // specific settings that only make sense on the outer level:\n          'ai.prompt': {\n            input: () => JSON.stringify({ system, prompt, messages }),\n          },\n          'ai.settings.maxSteps': maxSteps,\n        },\n      }),\n      tracer,\n      endWhenDone: false,\n      fn: async rootSpanArg => {\n        rootSpan = rootSpanArg;\n\n        async function streamStep({\n          currentStep,\n          responseMessages,\n          usage,\n          stepType,\n          previousStepText,\n          hasLeadingWhitespace,\n          messageId,\n        }: {\n          currentStep: number;\n          responseMessages: Array<ResponseMessage>;\n          usage: LanguageModelUsage;\n          stepType: 'initial' | 'continue' | 'tool-result';\n          previousStepText: string;\n          hasLeadingWhitespace: boolean;\n          messageId: string;\n        }) {\n          // after the 1st step, we need to switch to messages format:\n          const promptFormat =\n            responseMessages.length === 0 ? initialPrompt.type : 'messages';\n\n          const stepInputMessages = [\n            ...initialPrompt.messages,\n            ...responseMessages,\n          ];\n\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: {\n              type: promptFormat,\n              system: initialPrompt.system,\n              messages: stepInputMessages,\n            },\n            modelSupportsImageUrls: model.supportsImageUrls,\n            modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context\n          });\n\n          const mode = {\n            type: 'regular' as const,\n            ...prepareToolsAndToolChoice({ tools, toolChoice, activeTools }),\n          };\n\n          const {\n            result: { stream, warnings, rawResponse, request },\n            doStreamSpan,\n            startTimestampMs,\n          } = await retry(() =>\n            recordSpan({\n              name: 'ai.streamText.doStream',\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: 'ai.streamText.doStream',\n                    telemetry,\n                  }),\n                  ...baseTelemetryAttributes,\n                  'ai.prompt.format': {\n                    input: () => promptFormat,\n                  },\n                  'ai.prompt.messages': {\n                    input: () => JSON.stringify(promptMessages),\n                  },\n                  'ai.prompt.tools': {\n                    // convert the language model level tools:\n                    input: () => mode.tools?.map(tool => JSON.stringify(tool)),\n                  },\n                  'ai.prompt.toolChoice': {\n                    input: () =>\n                      mode.toolChoice != null\n                        ? JSON.stringify(mode.toolChoice)\n                        : undefined,\n                  },\n\n                  // standardized gen-ai llm span attributes:\n                  'gen_ai.system': model.provider,\n                  'gen_ai.request.model': model.modelId,\n                  'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                  'gen_ai.request.max_tokens': settings.maxTokens,\n                  'gen_ai.request.presence_penalty': settings.presencePenalty,\n                  'gen_ai.request.stop_sequences': settings.stopSequences,\n                  'gen_ai.request.temperature': settings.temperature,\n                  'gen_ai.request.top_k': settings.topK,\n                  'gen_ai.request.top_p': settings.topP,\n                },\n              }),\n              tracer,\n              endWhenDone: false,\n              fn: async doStreamSpan => ({\n                startTimestampMs: now(), // get before the call\n                doStreamSpan,\n                result: await model.doStream({\n                  mode,\n                  ...prepareCallSettings(settings),\n                  inputFormat: promptFormat,\n                  responseFormat: output?.responseFormat({ model }),\n                  prompt: promptMessages,\n                  providerMetadata: providerOptions,\n                  abortSignal,\n                  headers,\n                }),\n              }),\n            }),\n          );\n\n          const transformedStream = runToolsTransformation({\n            tools,\n            generatorStream: stream,\n            toolCallStreaming,\n            tracer,\n            telemetry,\n            system,\n            messages: stepInputMessages,\n            repairToolCall,\n            abortSignal,\n          });\n\n          const stepRequest = request ?? {};\n          const stepToolCalls: ToolCallUnion<TOOLS>[] = [];\n          const stepToolResults: ToolResultUnion<TOOLS>[] = [];\n\n          const stepReasoning: Array<ReasoningDetail> = [];\n          let activeReasoningText:\n            | undefined\n            | (ReasoningDetail & { type: 'text' }) = undefined;\n\n          let stepFinishReason: FinishReason = 'unknown';\n          let stepUsage: LanguageModelUsage = {\n            promptTokens: 0,\n            completionTokens: 0,\n            totalTokens: 0,\n          };\n          let stepProviderMetadata: ProviderMetadata | undefined;\n          let stepFirstChunk = true;\n          let stepText = '';\n          let fullStepText = stepType === 'continue' ? previousStepText : '';\n          let stepLogProbs: LogProbs | undefined;\n          let stepResponse: { id: string; timestamp: Date; modelId: string } = {\n            id: generateId(),\n            timestamp: currentDate(),\n            modelId: model.modelId,\n          };\n\n          // chunk buffer when using continue:\n          let chunkBuffer = '';\n          let chunkTextPublished = false;\n          let inWhitespacePrefix = true;\n          let hasWhitespaceSuffix = false; // for next step. when true, step ended with whitespace\n\n          async function publishTextChunk({\n            controller,\n            chunk,\n          }: {\n            controller: TransformStreamDefaultController<TextStreamPart<TOOLS>>;\n            chunk: TextStreamPart<TOOLS> & { type: 'text-delta' };\n          }) {\n            controller.enqueue(chunk);\n\n            stepText += chunk.textDelta;\n            fullStepText += chunk.textDelta;\n            chunkTextPublished = true;\n            hasWhitespaceSuffix = chunk.textDelta.trimEnd() !== chunk.textDelta;\n          }\n\n          self.addStream(\n            transformedStream.pipeThrough(\n              new TransformStream<\n                SingleRequestTextStreamPart<TOOLS>,\n                TextStreamPart<TOOLS>\n              >({\n                async transform(chunk, controller): Promise<void> {\n                  if (stepFirstChunk) {\n                    // Telemetry for first chunk:\n                    const msToFirstChunk = now() - startTimestampMs;\n\n                    stepFirstChunk = false;\n\n                    doStreamSpan.addEvent('ai.stream.firstChunk', {\n                      'ai.response.msToFirstChunk': msToFirstChunk,\n                    });\n\n                    doStreamSpan.setAttributes({\n                      'ai.response.msToFirstChunk': msToFirstChunk,\n                    });\n\n                    // Step start:\n                    controller.enqueue({\n                      type: 'step-start',\n                      messageId,\n                      request: stepRequest,\n                      warnings: warnings ?? [],\n                    });\n                  }\n\n                  // Filter out empty text deltas\n                  if (\n                    chunk.type === 'text-delta' &&\n                    chunk.textDelta.length === 0\n                  ) {\n                    return;\n                  }\n\n                  const chunkType = chunk.type;\n                  switch (chunkType) {\n                    case 'text-delta': {\n                      if (continueSteps) {\n                        // when a new step starts, leading whitespace is to be discarded\n                        // when there is already preceding whitespace in the chunk buffer\n                        const trimmedChunkText =\n                          inWhitespacePrefix && hasLeadingWhitespace\n                            ? chunk.textDelta.trimStart()\n                            : chunk.textDelta;\n\n                        if (trimmedChunkText.length === 0) {\n                          break;\n                        }\n\n                        inWhitespacePrefix = false;\n                        chunkBuffer += trimmedChunkText;\n\n                        const split = splitOnLastWhitespace(chunkBuffer);\n\n                        // publish the text until the last whitespace:\n                        if (split != null) {\n                          chunkBuffer = split.suffix;\n\n                          await publishTextChunk({\n                            controller,\n                            chunk: {\n                              type: 'text-delta',\n                              textDelta: split.prefix + split.whitespace,\n                            },\n                          });\n                        }\n                      } else {\n                        await publishTextChunk({ controller, chunk });\n                      }\n                      break;\n                    }\n\n                    case 'reasoning': {\n                      controller.enqueue(chunk);\n\n                      if (activeReasoningText == null) {\n                        activeReasoningText = {\n                          type: 'text',\n                          text: chunk.textDelta,\n                        };\n                        stepReasoning.push(activeReasoningText);\n                      } else {\n                        activeReasoningText.text += chunk.textDelta;\n                      }\n\n                      break;\n                    }\n\n                    case 'reasoning-signature': {\n                      controller.enqueue(chunk);\n\n                      if (activeReasoningText == null) {\n                        throw new InvalidStreamPartError({\n                          chunk,\n                          message: 'reasoning-signature without reasoning',\n                        });\n                      }\n\n                      activeReasoningText.signature = chunk.signature;\n                      activeReasoningText = undefined; // signature concludes reasoning part\n                      break;\n                    }\n\n                    case 'redacted-reasoning': {\n                      controller.enqueue(chunk);\n                      stepReasoning.push({\n                        type: 'redacted',\n                        data: chunk.data,\n                      });\n\n                      break;\n                    }\n\n                    case 'tool-call': {\n                      controller.enqueue(chunk);\n                      // store tool calls for onFinish callback and toolCalls promise:\n                      stepToolCalls.push(chunk);\n                      break;\n                    }\n\n                    case 'tool-result': {\n                      controller.enqueue(chunk);\n                      // store tool results for onFinish callback and toolResults promise:\n                      stepToolResults.push(chunk);\n                      break;\n                    }\n\n                    case 'response-metadata': {\n                      stepResponse = {\n                        id: chunk.id ?? stepResponse.id,\n                        timestamp: chunk.timestamp ?? stepResponse.timestamp,\n                        modelId: chunk.modelId ?? stepResponse.modelId,\n                      };\n                      break;\n                    }\n\n                    case 'finish': {\n                      // Note: tool executions might not be finished yet when the finish event is emitted.\n                      // store usage and finish reason for promises and onFinish callback:\n                      stepUsage = chunk.usage;\n                      stepFinishReason = chunk.finishReason;\n                      stepProviderMetadata =\n                        chunk.experimental_providerMetadata;\n                      stepLogProbs = chunk.logprobs;\n\n                      // Telemetry for finish event timing\n                      // (since tool executions can take longer and distort calculations)\n                      const msToFinish = now() - startTimestampMs;\n                      doStreamSpan.addEvent('ai.stream.finish');\n                      doStreamSpan.setAttributes({\n                        'ai.response.msToFinish': msToFinish,\n                        'ai.response.avgCompletionTokensPerSecond':\n                          (1000 * stepUsage.completionTokens) / msToFinish,\n                      });\n\n                      break;\n                    }\n\n                    // forward:\n                    case 'source':\n                    case 'tool-call-streaming-start':\n                    case 'tool-call-delta': {\n                      controller.enqueue(chunk);\n                      break;\n                    }\n\n                    case 'error': {\n                      controller.enqueue(chunk);\n                      stepFinishReason = 'error';\n                      break;\n                    }\n\n                    default: {\n                      const exhaustiveCheck: never = chunkType;\n                      throw new Error(`Unknown chunk type: ${exhaustiveCheck}`);\n                    }\n                  }\n                },\n\n                // invoke onFinish callback and resolve toolResults promise when the stream is about to close:\n                async flush(controller) {\n                  const stepToolCallsJson =\n                    stepToolCalls.length > 0\n                      ? JSON.stringify(stepToolCalls)\n                      : undefined;\n\n                  // determine the next step type\n                  let nextStepType: 'done' | 'continue' | 'tool-result' =\n                    'done';\n                  if (currentStep + 1 < maxSteps) {\n                    if (\n                      continueSteps &&\n                      stepFinishReason === 'length' &&\n                      // only use continue when there are no tool calls:\n                      stepToolCalls.length === 0\n                    ) {\n                      nextStepType = 'continue';\n                    } else if (\n                      // there are tool calls:\n                      stepToolCalls.length > 0 &&\n                      // all current tool calls have results:\n                      stepToolResults.length === stepToolCalls.length\n                    ) {\n                      nextStepType = 'tool-result';\n                    }\n                  }\n\n                  // when using continuation, publish buffer on final step or if there\n                  // was no whitespace in the step:\n                  if (\n                    continueSteps &&\n                    chunkBuffer.length > 0 &&\n                    (nextStepType !== 'continue' || // when the next step is a regular step, publish the buffer\n                      (stepType === 'continue' && !chunkTextPublished)) // when the next step is a continue step, publish the buffer if no text was published in the step\n                  ) {\n                    await publishTextChunk({\n                      controller,\n                      chunk: {\n                        type: 'text-delta',\n                        textDelta: chunkBuffer,\n                      },\n                    });\n                    chunkBuffer = '';\n                  }\n\n                  // record telemetry information first to ensure best effort timing\n                  try {\n                    doStreamSpan.setAttributes(\n                      selectTelemetryAttributes({\n                        telemetry,\n                        attributes: {\n                          'ai.response.finishReason': stepFinishReason,\n                          'ai.response.text': { output: () => stepText },\n                          'ai.response.toolCalls': {\n                            output: () => stepToolCallsJson,\n                          },\n                          'ai.response.id': stepResponse.id,\n                          'ai.response.model': stepResponse.modelId,\n                          'ai.response.timestamp':\n                            stepResponse.timestamp.toISOString(),\n\n                          'ai.usage.promptTokens': stepUsage.promptTokens,\n                          'ai.usage.completionTokens':\n                            stepUsage.completionTokens,\n\n                          // standardized gen-ai llm span attributes:\n                          'gen_ai.response.finish_reasons': [stepFinishReason],\n                          'gen_ai.response.id': stepResponse.id,\n                          'gen_ai.response.model': stepResponse.modelId,\n                          'gen_ai.usage.input_tokens': stepUsage.promptTokens,\n                          'gen_ai.usage.output_tokens':\n                            stepUsage.completionTokens,\n                        },\n                      }),\n                    );\n                  } catch (error) {\n                    // ignore error setting telemetry attributes\n                  } finally {\n                    // finish doStreamSpan before other operations for correct timing:\n                    doStreamSpan.end();\n                  }\n\n                  controller.enqueue({\n                    type: 'step-finish',\n                    finishReason: stepFinishReason,\n                    usage: stepUsage,\n                    providerMetadata: stepProviderMetadata,\n                    experimental_providerMetadata: stepProviderMetadata,\n                    logprobs: stepLogProbs,\n                    request: stepRequest,\n                    response: {\n                      ...stepResponse,\n                      headers: rawResponse?.headers,\n                    },\n                    warnings,\n                    isContinued: nextStepType === 'continue',\n                    messageId,\n                  });\n\n                  const combinedUsage = addLanguageModelUsage(usage, stepUsage);\n\n                  if (nextStepType === 'done') {\n                    controller.enqueue({\n                      type: 'finish',\n                      finishReason: stepFinishReason,\n                      usage: combinedUsage,\n                      providerMetadata: stepProviderMetadata,\n                      experimental_providerMetadata: stepProviderMetadata,\n                      logprobs: stepLogProbs,\n                      response: {\n                        ...stepResponse,\n                        headers: rawResponse?.headers,\n                      },\n                    });\n\n                    self.closeStream(); // close the stitchable stream\n                  } else {\n                    // append to messages for the next step:\n                    if (stepType === 'continue') {\n                      // continue step: update the last assistant message\n                      // continue is only possible when there are no tool calls,\n                      // so we can assume that there is a single last assistant message:\n                      const lastMessage = responseMessages[\n                        responseMessages.length - 1\n                      ] as CoreAssistantMessage;\n\n                      if (typeof lastMessage.content === 'string') {\n                        lastMessage.content += stepText;\n                      } else {\n                        lastMessage.content.push({\n                          text: stepText,\n                          type: 'text',\n                        });\n                      }\n                    } else {\n                      responseMessages.push(\n                        ...toResponseMessages({\n                          text: stepText,\n                          reasoning: stepReasoning,\n                          tools: tools ?? ({} as TOOLS),\n                          toolCalls: stepToolCalls,\n                          toolResults: stepToolResults,\n                          messageId,\n                          generateMessageId,\n                        }),\n                      );\n                    }\n\n                    await streamStep({\n                      currentStep: currentStep + 1,\n                      responseMessages,\n                      usage: combinedUsage,\n                      stepType: nextStepType,\n                      previousStepText: fullStepText,\n                      hasLeadingWhitespace: hasWhitespaceSuffix,\n                      messageId:\n                        // keep the same id when continuing a step:\n                        nextStepType === 'continue'\n                          ? messageId\n                          : generateMessageId(),\n                    });\n                  }\n                },\n              }),\n            ),\n          );\n        }\n\n        // add the initial stream to the stitchable stream\n        await streamStep({\n          currentStep: 0,\n          responseMessages: [],\n          usage: {\n            promptTokens: 0,\n            completionTokens: 0,\n            totalTokens: 0,\n          },\n          previousStepText: '',\n          stepType: 'initial',\n          hasLeadingWhitespace: false,\n          messageId: generateMessageId(),\n        });\n      },\n    }).catch(error => {\n      // add an error stream part and close the streams:\n      self.addStream(\n        new ReadableStream({\n          start(controller) {\n            controller.enqueue({ type: 'error', error });\n            controller.close();\n          },\n        }),\n      );\n      self.closeStream();\n    });\n  }\n\n  get warnings() {\n    return this.warningsPromise.value;\n  }\n\n  get usage() {\n    return this.usagePromise.value;\n  }\n\n  get finishReason() {\n    return this.finishReasonPromise.value;\n  }\n\n  get experimental_providerMetadata() {\n    return this.providerMetadataPromise.value;\n  }\n\n  get providerMetadata() {\n    return this.providerMetadataPromise.value;\n  }\n\n  get text() {\n    return this.textPromise.value;\n  }\n\n  get reasoning() {\n    return this.reasoningPromise.value;\n  }\n\n  get reasoningDetails() {\n    return this.reasoningDetailsPromise.value;\n  }\n\n  get sources() {\n    return this.sourcesPromise.value;\n  }\n\n  get toolCalls() {\n    return this.toolCallsPromise.value;\n  }\n\n  get toolResults() {\n    return this.toolResultsPromise.value;\n  }\n\n  get request() {\n    return this.requestPromise.value;\n  }\n\n  get response() {\n    return this.responsePromise.value;\n  }\n\n  get steps() {\n    return this.stepsPromise.value;\n  }\n\n  /**\nSplit out a new stream from the original stream.\nThe original stream is replaced to allow for further splitting,\nsince we do not know how many times the stream will be split.\n\nNote: this leads to buffering the stream content on the server.\nHowever, the LLM results are expected to be small enough to not cause issues.\n   */\n  private teeStream() {\n    const [stream1, stream2] = this.baseStream.tee();\n    this.baseStream = stream2;\n    return stream1;\n  }\n\n  get textStream(): AsyncIterableStream<string> {\n    return createAsyncIterableStream(\n      this.teeStream().pipeThrough(\n        new TransformStream<EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>, string>({\n          transform({ part }, controller) {\n            if (part.type === 'text-delta') {\n              controller.enqueue(part.textDelta);\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  get fullStream(): AsyncIterableStream<TextStreamPart<TOOLS>> {\n    return createAsyncIterableStream(\n      this.teeStream().pipeThrough(\n        new TransformStream<\n          EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>,\n          TextStreamPart<TOOLS>\n        >({\n          transform({ part }, controller) {\n            controller.enqueue(part);\n          },\n        }),\n      ),\n    );\n  }\n\n  async consumeStream(): Promise<void> {\n    const stream = this.fullStream;\n    for await (const part of stream) {\n      // no op\n    }\n  }\n\n  get experimental_partialOutputStream(): AsyncIterableStream<PARTIAL_OUTPUT> {\n    if (this.output == null) {\n      throw new NoOutputSpecifiedError();\n    }\n\n    return createAsyncIterableStream(\n      this.teeStream().pipeThrough(\n        new TransformStream<\n          EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>,\n          PARTIAL_OUTPUT\n        >({\n          transform({ partialOutput }, controller) {\n            if (partialOutput != null) {\n              controller.enqueue(partialOutput);\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  private toDataStreamInternal({\n    getErrorMessage = () => 'An error occurred.', // mask error messages for safety by default\n    sendUsage = true,\n    sendReasoning = false,\n    sendSources = false,\n    experimental_sendFinish = true,\n  }: {\n    getErrorMessage: ((error: unknown) => string) | undefined;\n    sendUsage: boolean | undefined;\n    sendReasoning: boolean | undefined;\n    sendSources: boolean | undefined;\n    experimental_sendFinish: boolean | undefined;\n  }): ReadableStream<DataStreamString> {\n    return this.fullStream.pipeThrough(\n      new TransformStream<TextStreamPart<TOOLS>, DataStreamString>({\n        transform: async (chunk, controller) => {\n          const chunkType = chunk.type;\n          switch (chunkType) {\n            case 'text-delta': {\n              controller.enqueue(formatDataStreamPart('text', chunk.textDelta));\n              break;\n            }\n\n            case 'reasoning': {\n              if (sendReasoning) {\n                controller.enqueue(\n                  formatDataStreamPart('reasoning', chunk.textDelta),\n                );\n              }\n              break;\n            }\n\n            case 'redacted-reasoning': {\n              if (sendReasoning) {\n                controller.enqueue(\n                  formatDataStreamPart('redacted_reasoning', {\n                    data: chunk.data,\n                  }),\n                );\n              }\n              break;\n            }\n\n            case 'reasoning-signature': {\n              if (sendReasoning) {\n                controller.enqueue(\n                  formatDataStreamPart('reasoning_signature', {\n                    signature: chunk.signature,\n                  }),\n                );\n              }\n              break;\n            }\n\n            case 'source': {\n              if (sendSources) {\n                controller.enqueue(\n                  formatDataStreamPart('source', chunk.source),\n                );\n              }\n              break;\n            }\n\n            case 'tool-call-streaming-start': {\n              controller.enqueue(\n                formatDataStreamPart('tool_call_streaming_start', {\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                }),\n              );\n              break;\n            }\n\n            case 'tool-call-delta': {\n              controller.enqueue(\n                formatDataStreamPart('tool_call_delta', {\n                  toolCallId: chunk.toolCallId,\n                  argsTextDelta: chunk.argsTextDelta,\n                }),\n              );\n              break;\n            }\n\n            case 'tool-call': {\n              controller.enqueue(\n                formatDataStreamPart('tool_call', {\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                  args: chunk.args,\n                }),\n              );\n              break;\n            }\n\n            case 'tool-result': {\n              controller.enqueue(\n                formatDataStreamPart('tool_result', {\n                  toolCallId: chunk.toolCallId,\n                  result: chunk.result,\n                }),\n              );\n              break;\n            }\n\n            case 'error': {\n              controller.enqueue(\n                formatDataStreamPart('error', getErrorMessage(chunk.error)),\n              );\n              break;\n            }\n\n            case 'step-start': {\n              controller.enqueue(\n                formatDataStreamPart('start_step', {\n                  messageId: chunk.messageId,\n                }),\n              );\n              break;\n            }\n\n            case 'step-finish': {\n              controller.enqueue(\n                formatDataStreamPart('finish_step', {\n                  finishReason: chunk.finishReason,\n                  usage: sendUsage\n                    ? {\n                        promptTokens: chunk.usage.promptTokens,\n                        completionTokens: chunk.usage.completionTokens,\n                      }\n                    : undefined,\n                  isContinued: chunk.isContinued,\n                }),\n              );\n              break;\n            }\n\n            case 'finish': {\n              if (experimental_sendFinish) {\n                controller.enqueue(\n                  formatDataStreamPart('finish_message', {\n                    finishReason: chunk.finishReason,\n                    usage: sendUsage\n                      ? {\n                          promptTokens: chunk.usage.promptTokens,\n                          completionTokens: chunk.usage.completionTokens,\n                        }\n                      : undefined,\n                  }),\n                );\n              }\n              break;\n            }\n\n            default: {\n              const exhaustiveCheck: never = chunkType;\n              throw new Error(`Unknown chunk type: ${exhaustiveCheck}`);\n            }\n          }\n        },\n      }),\n    );\n  }\n\n  pipeDataStreamToResponse(\n    response: ServerResponse,\n    {\n      status,\n      statusText,\n      headers,\n      data,\n      getErrorMessage,\n      sendUsage,\n      sendReasoning,\n      sendSources,\n      experimental_sendFinish,\n    }: ResponseInit &\n      DataStreamOptions & {\n        data?: StreamData;\n        getErrorMessage?: (error: unknown) => string;\n      } = {},\n  ) {\n    writeToServerResponse({\n      response,\n      status,\n      statusText,\n      headers: prepareOutgoingHttpHeaders(headers, {\n        contentType: 'text/plain; charset=utf-8',\n        dataStreamVersion: 'v1',\n      }),\n      stream: this.toDataStream({\n        data,\n        getErrorMessage,\n        sendUsage,\n        sendReasoning,\n        sendSources,\n        experimental_sendFinish,\n      }),\n    });\n  }\n\n  pipeTextStreamToResponse(response: ServerResponse, init?: ResponseInit) {\n    writeToServerResponse({\n      response,\n      status: init?.status,\n      statusText: init?.statusText,\n      headers: prepareOutgoingHttpHeaders(init?.headers, {\n        contentType: 'text/plain; charset=utf-8',\n      }),\n      stream: this.textStream.pipeThrough(new TextEncoderStream()),\n    });\n  }\n\n  // TODO breaking change 5.0: remove pipeThrough(new TextEncoderStream())\n  toDataStream(\n    options?: DataStreamOptions & {\n      data?: StreamData;\n      getErrorMessage?: (error: unknown) => string;\n    },\n  ) {\n    const stream = this.toDataStreamInternal({\n      getErrorMessage: options?.getErrorMessage,\n      sendUsage: options?.sendUsage,\n      sendReasoning: options?.sendReasoning,\n      sendSources: options?.sendSources,\n      experimental_sendFinish: options?.experimental_sendFinish,\n    }).pipeThrough(new TextEncoderStream());\n\n    return options?.data ? mergeStreams(options?.data.stream, stream) : stream;\n  }\n\n  mergeIntoDataStream(writer: DataStreamWriter, options?: DataStreamOptions) {\n    writer.merge(\n      this.toDataStreamInternal({\n        getErrorMessage: writer.onError,\n        sendUsage: options?.sendUsage,\n        sendReasoning: options?.sendReasoning,\n        sendSources: options?.sendSources,\n        experimental_sendFinish: options?.experimental_sendFinish,\n      }),\n    );\n  }\n\n  toDataStreamResponse({\n    headers,\n    status,\n    statusText,\n    data,\n    getErrorMessage,\n    sendUsage,\n    sendReasoning,\n    sendSources,\n    experimental_sendFinish,\n  }: ResponseInit &\n    DataStreamOptions & {\n      data?: StreamData;\n      getErrorMessage?: (error: unknown) => string;\n    } = {}): Response {\n    return new Response(\n      this.toDataStream({\n        data,\n        getErrorMessage,\n        sendUsage,\n        sendReasoning,\n        sendSources,\n        experimental_sendFinish,\n      }),\n      {\n        status,\n        statusText,\n        headers: prepareResponseHeaders(headers, {\n          contentType: 'text/plain; charset=utf-8',\n          dataStreamVersion: 'v1',\n        }),\n      },\n    );\n  }\n\n  toTextStreamResponse(init?: ResponseInit): Response {\n    return new Response(this.textStream.pipeThrough(new TextEncoderStream()), {\n      status: init?.status ?? 200,\n      headers: prepareResponseHeaders(init?.headers, {\n        contentType: 'text/plain; charset=utf-8',\n      }),\n    });\n  }\n}\n","export function asArray<T>(value: T | T[] | undefined): T[] {\n  return value === undefined ? [] : Array.isArray(value) ? value : [value];\n}\n","/**\n * Merges two readable streams into a single readable stream, emitting values\n * from each stream as they become available.\n *\n * The first stream is prioritized over the second stream. If both streams have\n * values available, the first stream's value is emitted first.\n *\n * @template VALUE1 - The type of values emitted by the first stream.\n * @template VALUE2 - The type of values emitted by the second stream.\n * @param {ReadableStream<VALUE1>} stream1 - The first readable stream.\n * @param {ReadableStream<VALUE2>} stream2 - The second readable stream.\n * @returns {ReadableStream<VALUE1 | VALUE2>} A new readable stream that emits values from both input streams.\n */\nexport function mergeStreams<VALUE1, VALUE2>(\n  stream1: ReadableStream<VALUE1>,\n  stream2: ReadableStream<VALUE2>,\n): ReadableStream<VALUE1 | VALUE2> {\n  const reader1 = stream1.getReader();\n  const reader2 = stream2.getReader();\n\n  let lastRead1: Promise<ReadableStreamReadResult<VALUE1>> | undefined =\n    undefined;\n  let lastRead2: Promise<ReadableStreamReadResult<VALUE2>> | undefined =\n    undefined;\n\n  let stream1Done = false;\n  let stream2Done = false;\n\n  // only use when stream 2 is done:\n  async function readStream1(\n    controller: ReadableStreamDefaultController<VALUE1 | VALUE2>,\n  ) {\n    try {\n      if (lastRead1 == null) {\n        lastRead1 = reader1.read();\n      }\n\n      const result = await lastRead1;\n      lastRead1 = undefined;\n\n      if (!result.done) {\n        controller.enqueue(result.value);\n      } else {\n        controller.close();\n      }\n    } catch (error) {\n      controller.error(error);\n    }\n  }\n\n  // only use when stream 1 is done:\n  async function readStream2(\n    controller: ReadableStreamDefaultController<VALUE1 | VALUE2>,\n  ) {\n    try {\n      if (lastRead2 == null) {\n        lastRead2 = reader2.read();\n      }\n\n      const result = await lastRead2;\n      lastRead2 = undefined;\n\n      if (!result.done) {\n        controller.enqueue(result.value);\n      } else {\n        controller.close();\n      }\n    } catch (error) {\n      controller.error(error);\n    }\n  }\n\n  return new ReadableStream<VALUE1 | VALUE2>({\n    async pull(controller) {\n      try {\n        // stream 1 is done, we can only read from stream 2:\n        if (stream1Done) {\n          await readStream2(controller);\n          return;\n        }\n\n        // stream 2 is done, we can only read from stream 1:\n        if (stream2Done) {\n          await readStream1(controller);\n          return;\n        }\n\n        // pull the next value from the stream that was read last:\n        if (lastRead1 == null) {\n          lastRead1 = reader1.read();\n        }\n        if (lastRead2 == null) {\n          lastRead2 = reader2.read();\n        }\n\n        // Note on Promise.race (prioritizing stream 1 over stream 2):\n        // If the iterable contains one or more non-promise values and/or an already settled promise,\n        // then Promise.race() will settle to the first of these values found in the iterable.\n        const { result, reader } = await Promise.race([\n          lastRead1.then(result => ({ result, reader: reader1 })),\n          lastRead2.then(result => ({ result, reader: reader2 })),\n        ]);\n\n        if (!result.done) {\n          controller.enqueue(result.value);\n        }\n\n        if (reader === reader1) {\n          lastRead1 = undefined;\n          if (result.done) {\n            // stream 1 is done, we can only read from stream 2:\n            await readStream2(controller);\n            stream1Done = true;\n          }\n        } else {\n          lastRead2 = undefined;\n          // stream 2 is done, we can only read from stream 1:\n          if (result.done) {\n            stream2Done = true;\n            await readStream1(controller);\n          }\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    cancel() {\n      reader1.cancel();\n      reader2.cancel();\n    },\n  });\n}\n","import { LanguageModelV1StreamPart } from '@ai-sdk/provider';\nimport { generateId } from '@ai-sdk/ui-utils';\nimport { Tracer } from '@opentelemetry/api';\nimport { ToolExecutionError } from '../../errors';\nimport { CoreMessage } from '../prompt/message';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport {\n  FinishReason,\n  LanguageModelUsage,\n  LogProbs,\n  ProviderMetadata,\n} from '../types';\nimport { Source } from '../types/language-model';\nimport { calculateLanguageModelUsage } from '../types/usage';\nimport { parseToolCall } from './parse-tool-call';\nimport { ToolCallUnion } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair';\nimport { ToolResultUnion } from './tool-result';\nimport { ToolSet } from './tool-set';\n\nexport type SingleRequestTextStreamPart<TOOLS extends ToolSet> =\n  | {\n      type: 'text-delta';\n      textDelta: string;\n    }\n  | {\n      type: 'reasoning';\n      textDelta: string;\n    }\n  | {\n      type: 'reasoning-signature';\n      signature: string;\n    }\n  | {\n      type: 'redacted-reasoning';\n      data: string;\n    }\n  | {\n      type: 'source';\n      source: Source;\n    }\n  | ({\n      type: 'tool-call';\n    } & ToolCallUnion<TOOLS>)\n  | {\n      type: 'tool-call-streaming-start';\n      toolCallId: string;\n      toolName: string;\n    }\n  | {\n      type: 'tool-call-delta';\n      toolCallId: string;\n      toolName: string;\n      argsTextDelta: string;\n    }\n  | ({\n      type: 'tool-result';\n    } & ToolResultUnion<TOOLS>)\n  | {\n      type: 'response-metadata';\n      id?: string;\n      timestamp?: Date;\n      modelId?: string;\n    }\n  | {\n      type: 'finish';\n      finishReason: FinishReason;\n      logprobs?: LogProbs;\n      usage: LanguageModelUsage;\n      experimental_providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'error';\n      error: unknown;\n    };\n\nexport function runToolsTransformation<TOOLS extends ToolSet>({\n  tools,\n  generatorStream,\n  toolCallStreaming,\n  tracer,\n  telemetry,\n  system,\n  messages,\n  abortSignal,\n  repairToolCall,\n}: {\n  tools: TOOLS | undefined;\n  generatorStream: ReadableStream<LanguageModelV1StreamPart>;\n  toolCallStreaming: boolean;\n  tracer: Tracer;\n  telemetry: TelemetrySettings | undefined;\n  system: string | undefined;\n  messages: CoreMessage[];\n  abortSignal: AbortSignal | undefined;\n  repairToolCall: ToolCallRepairFunction<TOOLS> | undefined;\n}): ReadableStream<SingleRequestTextStreamPart<TOOLS>> {\n  // tool results stream\n  let toolResultsStreamController: ReadableStreamDefaultController<\n    SingleRequestTextStreamPart<TOOLS>\n  > | null = null;\n  const toolResultsStream = new ReadableStream<\n    SingleRequestTextStreamPart<TOOLS>\n  >({\n    start(controller) {\n      toolResultsStreamController = controller;\n    },\n  });\n\n  // keep track of active tool calls for tool call streaming:\n  const activeToolCalls: Record<string, boolean> = {};\n\n  // keep track of outstanding tool results for stream closing:\n  const outstandingToolResults = new Set<string>();\n\n  let canClose = false;\n  let finishChunk:\n    | (SingleRequestTextStreamPart<TOOLS> & { type: 'finish' })\n    | undefined = undefined;\n\n  function attemptClose() {\n    // close the tool results controller if no more outstanding tool calls\n    if (canClose && outstandingToolResults.size === 0) {\n      // we delay sending the finish chunk until all tool results (incl. delayed ones)\n      // are received to ensure that the frontend receives tool results before a message\n      // finish event arrives.\n      if (finishChunk != null) {\n        toolResultsStreamController!.enqueue(finishChunk);\n      }\n\n      toolResultsStreamController!.close();\n    }\n  }\n\n  // forward stream\n  const forwardStream = new TransformStream<\n    LanguageModelV1StreamPart,\n    SingleRequestTextStreamPart<TOOLS>\n  >({\n    async transform(\n      chunk: LanguageModelV1StreamPart,\n      controller: TransformStreamDefaultController<\n        SingleRequestTextStreamPart<TOOLS>\n      >,\n    ) {\n      const chunkType = chunk.type;\n\n      switch (chunkType) {\n        // forward:\n        case 'text-delta':\n        case 'reasoning':\n        case 'reasoning-signature':\n        case 'redacted-reasoning':\n        case 'source':\n        case 'response-metadata':\n        case 'error': {\n          controller.enqueue(chunk);\n          break;\n        }\n\n        // forward with less information:\n        case 'tool-call-delta': {\n          if (toolCallStreaming) {\n            if (!activeToolCalls[chunk.toolCallId]) {\n              controller.enqueue({\n                type: 'tool-call-streaming-start',\n                toolCallId: chunk.toolCallId,\n                toolName: chunk.toolName,\n              });\n\n              activeToolCalls[chunk.toolCallId] = true;\n            }\n\n            controller.enqueue({\n              type: 'tool-call-delta',\n              toolCallId: chunk.toolCallId,\n              toolName: chunk.toolName,\n              argsTextDelta: chunk.argsTextDelta,\n            });\n          }\n          break;\n        }\n\n        // process tool call:\n        case 'tool-call': {\n          try {\n            const toolCall = await parseToolCall({\n              toolCall: chunk,\n              tools,\n              repairToolCall,\n              system,\n              messages,\n            });\n\n            controller.enqueue(toolCall);\n\n            const tool = tools![toolCall.toolName];\n\n            if (tool.execute != null) {\n              const toolExecutionId = generateId(); // use our own id to guarantee uniqueness\n              outstandingToolResults.add(toolExecutionId);\n\n              // Note: we don't await the tool execution here (by leaving out 'await' on recordSpan),\n              // because we want to process the next chunk as soon as possible.\n              // This is important for the case where the tool execution takes a long time.\n              recordSpan({\n                name: 'ai.toolCall',\n                attributes: selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    ...assembleOperationName({\n                      operationId: 'ai.toolCall',\n                      telemetry,\n                    }),\n                    'ai.toolCall.name': toolCall.toolName,\n                    'ai.toolCall.id': toolCall.toolCallId,\n                    'ai.toolCall.args': {\n                      output: () => JSON.stringify(toolCall.args),\n                    },\n                  },\n                }),\n                tracer,\n                fn: async span =>\n                  tool.execute!(toolCall.args, {\n                    toolCallId: toolCall.toolCallId,\n                    messages,\n                    abortSignal,\n                  }).then(\n                    (result: any) => {\n                      toolResultsStreamController!.enqueue({\n                        ...toolCall,\n                        type: 'tool-result',\n                        result,\n                      } as any);\n\n                      outstandingToolResults.delete(toolExecutionId);\n\n                      attemptClose();\n\n                      // record telemetry\n                      try {\n                        span.setAttributes(\n                          selectTelemetryAttributes({\n                            telemetry,\n                            attributes: {\n                              'ai.toolCall.result': {\n                                output: () => JSON.stringify(result),\n                              },\n                            },\n                          }),\n                        );\n                      } catch (ignored) {\n                        // JSON stringify might fail if the result is not serializable,\n                        // in which case we just ignore it. In the future we might want to\n                        // add an optional serialize method to the tool interface and warn\n                        // if the result is not serializable.\n                      }\n                    },\n                    (error: any) => {\n                      toolResultsStreamController!.enqueue({\n                        type: 'error',\n                        error: new ToolExecutionError({\n                          toolCallId: toolCall.toolCallId,\n                          toolName: toolCall.toolName,\n                          toolArgs: toolCall.args,\n                          cause: error,\n                        }),\n                      });\n\n                      outstandingToolResults.delete(toolExecutionId);\n                      attemptClose();\n                    },\n                  ),\n              });\n            }\n          } catch (error) {\n            toolResultsStreamController!.enqueue({\n              type: 'error',\n              error,\n            });\n          }\n\n          break;\n        }\n\n        case 'finish': {\n          finishChunk = {\n            type: 'finish',\n            finishReason: chunk.finishReason,\n            logprobs: chunk.logprobs,\n            usage: calculateLanguageModelUsage(chunk.usage),\n            experimental_providerMetadata: chunk.providerMetadata,\n          };\n          break;\n        }\n\n        default: {\n          const _exhaustiveCheck: never = chunkType;\n          throw new Error(`Unhandled chunk type: ${_exhaustiveCheck}`);\n        }\n      }\n    },\n\n    flush() {\n      canClose = true;\n      attemptClose();\n    },\n  });\n\n  // combine the generator stream and the tool results stream\n  return new ReadableStream<SingleRequestTextStreamPart<TOOLS>>({\n    async start(controller) {\n      // need to wait for both pipes so there are no dangling promises that\n      // can cause uncaught promise rejections when the stream is aborted\n      return Promise.all([\n        generatorStream.pipeThrough(forwardStream).pipeTo(\n          new WritableStream({\n            write(chunk) {\n              controller.enqueue(chunk);\n            },\n            close() {\n              // the generator stream controller is automatically closed when it's consumed\n            },\n          }),\n        ),\n        toolResultsStream.pipeTo(\n          new WritableStream({\n            write(chunk) {\n              controller.enqueue(chunk);\n            },\n            close() {\n              controller.close();\n            },\n          }),\n        ),\n      ]);\n    },\n  });\n}\n","/**\n * Deeply merges two objects together.\n * - Properties from the second object override those in the first object with the same key\n * - For nested objects, the merge is performed recursively (deep merge)\n * - Arrays are replaced, not merged\n * - Primitive values are replaced\n * - If both inputs are undefined, returns undefined\n * - If one input is undefined, returns the other\n *\n * @param target The target object to merge into\n * @param source The source object to merge from\n * @returns A new object with the merged properties, or undefined if both inputs are undefined\n */\nexport function mergeObjects<T extends object, U extends object>(\n  target: T | undefined,\n  source: U | undefined,\n): (T & U) | T | U | undefined {\n  // If both inputs are undefined, return undefined\n  if (target === undefined && source === undefined) {\n    return undefined;\n  }\n\n  // If target is undefined, return source\n  if (target === undefined) {\n    return source;\n  }\n\n  // If source is undefined, return target\n  if (source === undefined) {\n    return target;\n  }\n\n  // Create a new object to avoid mutating the inputs\n  const result = { ...target } as T & U;\n\n  // Iterate through all keys in the source object\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      const sourceValue = source[key];\n\n      // Skip if the source value is undefined\n      if (sourceValue === undefined) continue;\n\n      // Get the target value if it exists\n      const targetValue =\n        key in target ? target[key as unknown as keyof T] : undefined;\n\n      // Check if both values are objects that can be deeply merged\n      const isSourceObject =\n        sourceValue !== null &&\n        typeof sourceValue === 'object' &&\n        !Array.isArray(sourceValue) &&\n        !(sourceValue instanceof Date) &&\n        !(sourceValue instanceof RegExp);\n\n      const isTargetObject =\n        targetValue !== null &&\n        targetValue !== undefined &&\n        typeof targetValue === 'object' &&\n        !Array.isArray(targetValue) &&\n        !(targetValue instanceof Date) &&\n        !(targetValue instanceof RegExp);\n\n      // If both values are mergeable objects, merge them recursively\n      if (isSourceObject && isTargetObject) {\n        result[key as keyof (T & U)] = mergeObjects(\n          targetValue as object,\n          sourceValue as object,\n        ) as any;\n      } else {\n        // For primitives, arrays, or when one value is not a mergeable object,\n        // simply override with the source value\n        result[key as keyof (T & U)] = sourceValue as any;\n      }\n    }\n  }\n\n  return result;\n}\n","import {\n  LanguageModelV1CallOptions,\n  LanguageModelV1ProviderMetadata,\n} from '@ai-sdk/provider';\nimport type { LanguageModelV1Middleware } from './language-model-v1-middleware';\nimport { mergeObjects } from '../util/merge-objects';\n\n/**\n * Applies default settings for a language model.\n */\nexport function defaultSettingsMiddleware({\n  settings,\n}: {\n  settings: Partial<\n    LanguageModelV1CallOptions & {\n      providerMetadata?: LanguageModelV1ProviderMetadata;\n    }\n  >;\n}): LanguageModelV1Middleware {\n  return {\n    middlewareVersion: 'v1',\n    transformParams: async ({ params }) => {\n      return {\n        ...settings,\n        ...params,\n        providerMetadata: mergeObjects(\n          settings.providerMetadata,\n          params.providerMetadata,\n        ),\n\n        // special case for temperature 0\n        // TODO remove when temperature defaults to undefined\n        temperature:\n          params.temperature === 0 || params.temperature == null\n            ? (settings.temperature ?? 0)\n            : params.temperature,\n      };\n    },\n  };\n}\n","/**\n * Returns the index of the start of the searchedText in the text, or null if it\n * is not found.\n */\nexport function getPotentialStartIndex(\n  text: string,\n  searchedText: string,\n): number | null {\n  // Return null immediately if searchedText is empty.\n  if (searchedText.length === 0) {\n    return null;\n  }\n\n  // Check if the searchedText exists as a direct substring of text.\n  const directIndex = text.indexOf(searchedText);\n  if (directIndex !== -1) {\n    return directIndex;\n  }\n\n  // Otherwise, look for the largest suffix of \"text\" that matches\n  // a prefix of \"searchedText\". We go from the end of text inward.\n  for (let i = text.length - 1; i >= 0; i--) {\n    const suffix = text.substring(i);\n    if (searchedText.startsWith(suffix)) {\n      return i;\n    }\n  }\n\n  return null;\n}\n","import type { LanguageModelV1StreamPart } from '@ai-sdk/provider';\nimport { getPotentialStartIndex } from '../util/get-potential-start-index';\nimport type { LanguageModelV1Middleware } from './language-model-v1-middleware';\n\n/**\n * Extract an XML-tagged reasoning section from the generated text and exposes it\n * as a `reasoning` property on the result.\n *\n * @param tagName - The name of the XML tag to extract reasoning from.\n * @param separator - The separator to use between reasoning and text sections.\n * @param startWithReasoning - Whether to start with reasoning tokens.\n */\nexport function extractReasoningMiddleware({\n  tagName,\n  separator = '\\n',\n  startWithReasoning = false,\n}: {\n  tagName: string;\n  separator?: string;\n  startWithReasoning?: boolean;\n}): LanguageModelV1Middleware {\n  const openingTag = `<${tagName}>`;\n  const closingTag = `<\\/${tagName}>`;\n\n  return {\n    middlewareVersion: 'v1',\n    wrapGenerate: async ({ doGenerate }) => {\n      const { text: rawText, ...rest } = await doGenerate();\n\n      if (rawText == null) {\n        return { text: rawText, ...rest };\n      }\n\n      const text = startWithReasoning ? openingTag + rawText : rawText;\n\n      const regexp = new RegExp(`${openingTag}(.*?)${closingTag}`, 'gs');\n      const matches = Array.from(text.matchAll(regexp));\n\n      if (!matches.length) {\n        return { text, ...rest };\n      }\n\n      const reasoning = matches.map(match => match[1]).join(separator);\n\n      let textWithoutReasoning = text;\n      for (let i = matches.length - 1; i >= 0; i--) {\n        const match = matches[i];\n\n        const beforeMatch = textWithoutReasoning.slice(0, match.index);\n        const afterMatch = textWithoutReasoning.slice(\n          match.index! + match[0].length,\n        );\n\n        textWithoutReasoning =\n          beforeMatch +\n          (beforeMatch.length > 0 && afterMatch.length > 0 ? separator : '') +\n          afterMatch;\n      }\n\n      return { ...rest, text: textWithoutReasoning, reasoning };\n    },\n\n    wrapStream: async ({ doStream }) => {\n      const { stream, ...rest } = await doStream();\n\n      let isFirstReasoning = true;\n      let isFirstText = true;\n      let afterSwitch = false;\n      let isReasoning = startWithReasoning;\n      let buffer = '';\n\n      return {\n        stream: stream.pipeThrough(\n          new TransformStream<\n            LanguageModelV1StreamPart,\n            LanguageModelV1StreamPart\n          >({\n            transform: (chunk, controller) => {\n              if (chunk.type !== 'text-delta') {\n                controller.enqueue(chunk);\n                return;\n              }\n\n              buffer += chunk.textDelta;\n\n              function publish(text: string) {\n                if (text.length > 0) {\n                  const prefix =\n                    afterSwitch &&\n                    (isReasoning ? !isFirstReasoning : !isFirstText)\n                      ? separator\n                      : '';\n\n                  controller.enqueue({\n                    type: isReasoning ? 'reasoning' : 'text-delta',\n                    textDelta: prefix + text,\n                  });\n                  afterSwitch = false;\n\n                  if (isReasoning) {\n                    isFirstReasoning = false;\n                  } else {\n                    isFirstText = false;\n                  }\n                }\n              }\n\n              do {\n                const nextTag = isReasoning ? closingTag : openingTag;\n                const startIndex = getPotentialStartIndex(buffer, nextTag);\n\n                // no opening or closing tag found, publish the buffer\n                if (startIndex == null) {\n                  publish(buffer);\n                  buffer = '';\n                  break;\n                }\n\n                // publish text before the tag\n                publish(buffer.slice(0, startIndex));\n\n                const foundFullMatch =\n                  startIndex + nextTag.length <= buffer.length;\n\n                if (foundFullMatch) {\n                  buffer = buffer.slice(startIndex + nextTag.length);\n                  isReasoning = !isReasoning;\n                  afterSwitch = true;\n                } else {\n                  buffer = buffer.slice(startIndex);\n                  break;\n                }\n              } while (true);\n            },\n          }),\n        ),\n        ...rest,\n      };\n    },\n  };\n}\n","import type { LanguageModelV1StreamPart } from '@ai-sdk/provider';\nimport type { LanguageModelV1Middleware } from './language-model-v1-middleware';\n\n/**\n * Simulates streaming chunks with the response from a generate call.\n */\nexport function simulateStreamingMiddleware(): LanguageModelV1Middleware {\n  return {\n    middlewareVersion: 'v1',\n    wrapStream: async ({ doGenerate }) => {\n      const result = await doGenerate();\n\n      const simulatedStream = new ReadableStream<LanguageModelV1StreamPart>({\n        start(controller) {\n          controller.enqueue({ type: 'response-metadata', ...result.response });\n\n          if (result.reasoning) {\n            if (typeof result.reasoning === 'string') {\n              controller.enqueue({\n                type: 'reasoning',\n                textDelta: result.reasoning,\n              });\n            } else {\n              for (const reasoning of result.reasoning) {\n                switch (reasoning.type) {\n                  case 'text': {\n                    controller.enqueue({\n                      type: 'reasoning',\n                      textDelta: reasoning.text,\n                    });\n                    if (reasoning.signature != null) {\n                      controller.enqueue({\n                        type: 'reasoning-signature',\n                        signature: reasoning.signature,\n                      });\n                    }\n                    break;\n                  }\n                  case 'redacted': {\n                    controller.enqueue({\n                      type: 'redacted-reasoning',\n                      data: reasoning.data,\n                    });\n                    break;\n                  }\n                }\n              }\n            }\n          }\n\n          if (result.text) {\n            controller.enqueue({\n              type: 'text-delta',\n              textDelta: result.text,\n            });\n          }\n\n          if (result.toolCalls) {\n            for (const toolCall of result.toolCalls) {\n              controller.enqueue({\n                type: 'tool-call-delta',\n                toolCallType: 'function',\n                toolCallId: toolCall.toolCallId,\n                toolName: toolCall.toolName,\n                argsTextDelta: toolCall.args,\n              });\n\n              controller.enqueue({\n                type: 'tool-call',\n                ...toolCall,\n              });\n            }\n          }\n\n          controller.enqueue({\n            type: 'finish',\n            finishReason: result.finishReason,\n            usage: result.usage,\n            logprobs: result.logprobs,\n            providerMetadata: result.providerMetadata,\n          });\n\n          controller.close();\n        },\n      });\n\n      return {\n        stream: simulatedStream,\n        rawCall: result.rawCall,\n        rawResponse: result.rawResponse,\n        warnings: result.warnings,\n      };\n    },\n  };\n}\n","import { LanguageModelV1, LanguageModelV1CallOptions } from '@ai-sdk/provider';\nimport { LanguageModelV1Middleware } from './language-model-v1-middleware';\nimport { asArray } from '../../util/as-array';\n\n/**\n * Wraps a LanguageModelV1 instance with middleware functionality.\n * This function allows you to apply middleware to transform parameters,\n * wrap generate operations, and wrap stream operations of a language model.\n *\n * @param options - Configuration options for wrapping the language model.\n * @param options.model - The original LanguageModelV1 instance to be wrapped.\n * @param options.middleware - The middleware to be applied to the language model. When multiple middlewares are provided, the first middleware will transform the input first, and the last middleware will be wrapped directly around the model.\n * @param options.modelId - Optional custom model ID to override the original model's ID.\n * @param options.providerId - Optional custom provider ID to override the original model's provider.\n * @returns A new LanguageModelV1 instance with middleware applied.\n */\nexport const wrapLanguageModel = ({\n  model,\n  middleware: middlewareArg,\n  modelId,\n  providerId,\n}: {\n  model: LanguageModelV1;\n  middleware: LanguageModelV1Middleware | LanguageModelV1Middleware[];\n  modelId?: string;\n  providerId?: string;\n}): LanguageModelV1 => {\n  return asArray(middlewareArg)\n    .reverse()\n    .reduce((wrappedModel, middleware) => {\n      return doWrap({ model: wrappedModel, middleware, modelId, providerId });\n    }, model);\n};\n\nconst doWrap = ({\n  model,\n  middleware: { transformParams, wrapGenerate, wrapStream },\n  modelId,\n  providerId,\n}: {\n  model: LanguageModelV1;\n  middleware: LanguageModelV1Middleware;\n  modelId?: string;\n  providerId?: string;\n}): LanguageModelV1 => {\n  async function doTransform({\n    params,\n    type,\n  }: {\n    params: LanguageModelV1CallOptions;\n    type: 'generate' | 'stream';\n  }) {\n    return transformParams ? await transformParams({ params, type }) : params;\n  }\n\n  return {\n    specificationVersion: 'v1',\n\n    provider: providerId ?? model.provider,\n    modelId: modelId ?? model.modelId,\n\n    defaultObjectGenerationMode: model.defaultObjectGenerationMode,\n    supportsImageUrls: model.supportsImageUrls,\n    supportsUrl: model.supportsUrl?.bind(model),\n    supportsStructuredOutputs: model.supportsStructuredOutputs,\n\n    async doGenerate(\n      params: LanguageModelV1CallOptions,\n    ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n      const transformedParams = await doTransform({ params, type: 'generate' });\n      const doGenerate = async () => model.doGenerate(transformedParams);\n      const doStream = async () => model.doStream(transformedParams);\n      return wrapGenerate\n        ? wrapGenerate({\n            doGenerate,\n            doStream,\n            params: transformedParams,\n            model,\n          })\n        : doGenerate();\n    },\n\n    async doStream(\n      params: LanguageModelV1CallOptions,\n    ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n      const transformedParams = await doTransform({ params, type: 'stream' });\n      const doGenerate = async () => model.doGenerate(transformedParams);\n      const doStream = async () => model.doStream(transformedParams);\n      return wrapStream\n        ? wrapStream({ doGenerate, doStream, params: transformedParams, model })\n        : doStream();\n    },\n  };\n};\n\n/**\n * @deprecated Use `wrapLanguageModel` instead.\n */\n// TODO remove in v5\nexport const experimental_wrapLanguageModel = wrapLanguageModel;\n","import { Message } from '@ai-sdk/ui-utils';\n\n/**\n * Appends a client message to the messages array.\n * If the last message in the array has the same id as the new message, it will be replaced.\n * Otherwise, the new message will be appended.\n */\nexport function appendClientMessage({\n  messages,\n  message,\n}: {\n  messages: Message[];\n  message: Message;\n}) {\n  return [\n    ...(messages.length > 0 && messages[messages.length - 1].id === message.id\n      ? messages.slice(0, -1)\n      : messages),\n    message,\n  ];\n}\n","import {\n  extractMaxToolInvocationStep,\n  Message,\n  ReasoningUIPart,\n  TextUIPart,\n  ToolInvocation,\n  ToolInvocationUIPart,\n} from '@ai-sdk/ui-utils';\nimport { ResponseMessage } from '../generate-text/step-result';\n\n/**\n * Appends the ResponseMessage[] from the response to a Message[] (for useChat).\n * The messages are converted to Messages before being appended.\n * Timestamps are generated for the new messages.\n *\n * @returns A new Message[] with the response messages appended.\n */\nexport function appendResponseMessages({\n  messages,\n  responseMessages,\n  _internal: { currentDate = () => new Date() } = {},\n}: {\n  messages: Message[];\n  responseMessages: ResponseMessage[];\n\n  /**\nInternal. For test use only. May change without notice.\n     */\n  _internal?: {\n    currentDate?: () => Date;\n  };\n}): Message[] {\n  const clonedMessages = structuredClone(messages);\n\n  for (const message of responseMessages) {\n    const role = message.role;\n\n    // check if the last message is an assistant message:\n    const lastMessage = clonedMessages[clonedMessages.length - 1];\n    const isLastMessageAssistant = lastMessage.role === 'assistant';\n\n    switch (role) {\n      case 'assistant': {\n        function getToolInvocations(step: number) {\n          return (\n            typeof message.content === 'string'\n              ? []\n              : message.content.filter(part => part.type === 'tool-call')\n          ).map(call => ({\n            state: 'call' as const,\n            step,\n            args: call.args,\n            toolCallId: call.toolCallId,\n            toolName: call.toolName,\n          }));\n        }\n\n        const parts: Array<\n          TextUIPart | ReasoningUIPart | ToolInvocationUIPart\n        > = [];\n        let textContent = '';\n        let reasoningTextContent = undefined;\n\n        if (typeof message.content === 'string') {\n          textContent = message.content;\n          parts.push({\n            type: 'text' as const,\n            text: message.content,\n          });\n        } else {\n          let reasoningPart: ReasoningUIPart | undefined = undefined;\n          for (const part of message.content) {\n            switch (part.type) {\n              case 'text': {\n                reasoningPart = undefined; // reset the reasoning part\n\n                textContent += part.text;\n                parts.push({\n                  type: 'text' as const,\n                  text: part.text,\n                });\n                break;\n              }\n              case 'reasoning': {\n                if (reasoningPart == null) {\n                  reasoningPart = {\n                    type: 'reasoning' as const,\n                    reasoning: '',\n                    details: [],\n                  };\n                  parts.push(reasoningPart);\n                }\n\n                reasoningTextContent = (reasoningTextContent ?? '') + part.text;\n                reasoningPart.reasoning += part.text;\n                reasoningPart.details.push({\n                  type: 'text' as const,\n                  text: part.text,\n                  signature: part.signature,\n                });\n                break;\n              }\n              case 'redacted-reasoning': {\n                if (reasoningPart == null) {\n                  reasoningPart = {\n                    type: 'reasoning' as const,\n                    reasoning: '',\n                    details: [],\n                  };\n                  parts.push(reasoningPart);\n                }\n\n                reasoningPart.details.push({\n                  type: 'redacted' as const,\n                  data: part.data,\n                });\n                break;\n              }\n              case 'tool-call':\n                break;\n            }\n          }\n        }\n\n        if (isLastMessageAssistant) {\n          const maxStep = extractMaxToolInvocationStep(\n            lastMessage.toolInvocations,\n          );\n\n          lastMessage.parts ??= [];\n\n          lastMessage.content = textContent;\n          lastMessage.reasoning = reasoningTextContent;\n          lastMessage.parts.push(...parts);\n\n          lastMessage.toolInvocations = [\n            ...(lastMessage.toolInvocations ?? []),\n            ...getToolInvocations(maxStep === undefined ? 0 : maxStep + 1),\n          ];\n\n          getToolInvocations(maxStep === undefined ? 0 : maxStep + 1)\n            .map(call => ({\n              type: 'tool-invocation' as const,\n              toolInvocation: call,\n            }))\n            .forEach(part => {\n              lastMessage.parts!.push(part);\n            });\n        } else {\n          // last message was a user message, add the assistant message:\n          clonedMessages.push({\n            role: 'assistant',\n            id: message.id,\n            createdAt: currentDate(), // generate a createdAt date for the message, will be overridden by the client\n            content: textContent,\n            reasoning: reasoningTextContent,\n            toolInvocations: getToolInvocations(0),\n            parts: [\n              ...parts,\n              ...getToolInvocations(0).map(call => ({\n                type: 'tool-invocation' as const,\n                toolInvocation: call,\n              })),\n            ],\n          });\n        }\n\n        break;\n      }\n\n      case 'tool': {\n        // for tool call results, add the result to previous message:\n        lastMessage.toolInvocations ??= []; // ensure the toolInvocations array exists\n\n        if (lastMessage.role !== 'assistant') {\n          throw new Error(\n            `Tool result must follow an assistant message: ${lastMessage.role}`,\n          );\n        }\n\n        lastMessage.parts ??= [];\n\n        for (const contentPart of message.content) {\n          // find the tool call in the previous message:\n          const toolCall = lastMessage.toolInvocations.find(\n            call => call.toolCallId === contentPart.toolCallId,\n          );\n          const toolCallPart: ToolInvocationUIPart | undefined =\n            lastMessage.parts.find(\n              (part): part is ToolInvocationUIPart =>\n                part.type === 'tool-invocation' &&\n                part.toolInvocation.toolCallId === contentPart.toolCallId,\n            );\n\n          if (!toolCall) {\n            throw new Error('Tool call not found in previous message');\n          }\n\n          // add the result to the tool call:\n          toolCall.state = 'result';\n          const toolResult = toolCall as ToolInvocation & { state: 'result' };\n          toolResult.result = contentPart.result;\n\n          if (toolCallPart) {\n            toolCallPart.toolInvocation = toolResult;\n          } else {\n            lastMessage.parts.push({\n              type: 'tool-invocation' as const,\n              toolInvocation: toolResult,\n            });\n          }\n        }\n\n        break;\n      }\n\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new Error(`Unsupported message role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  return clonedMessages;\n}\n","import { NoSuchModelError, ProviderV1 } from '@ai-sdk/provider';\nimport { EmbeddingModel, ImageModel, LanguageModel, Provider } from '../types';\n\n/**\n * Creates a custom provider with specified language models, text embedding models, and an optional fallback provider.\n *\n * @param {Object} options - The options for creating the custom provider.\n * @param {Record<string, LanguageModel>} [options.languageModels] - A record of language models, where keys are model IDs and values are LanguageModel instances.\n * @param {Record<string, EmbeddingModel<string>>} [options.textEmbeddingModels] - A record of text embedding models, where keys are model IDs and values are EmbeddingModel<string> instances.\n * @param {Record<string, ImageModel>} [options.imageModels] - A record of image models, where keys are model IDs and values are ImageModel instances.\n * @param {Provider} [options.fallbackProvider] - An optional fallback provider to use when a requested model is not found in the custom provider.\n * @returns {Provider} A Provider object with languageModel, textEmbeddingModel, and imageModel methods.\n *\n * @throws {NoSuchModelError} Throws when a requested model is not found and no fallback provider is available.\n */\nexport function customProvider<\n  LANGUAGE_MODELS extends Record<string, LanguageModel>,\n  EMBEDDING_MODELS extends Record<string, EmbeddingModel<string>>,\n  IMAGE_MODELS extends Record<string, ImageModel>,\n>({\n  languageModels,\n  textEmbeddingModels,\n  imageModels,\n  fallbackProvider,\n}: {\n  languageModels?: LANGUAGE_MODELS;\n  textEmbeddingModels?: EMBEDDING_MODELS;\n  imageModels?: IMAGE_MODELS;\n  fallbackProvider?: ProviderV1;\n}): Provider & {\n  languageModel(modelId: ExtractModelId<LANGUAGE_MODELS>): LanguageModel;\n  textEmbeddingModel(\n    modelId: ExtractModelId<EMBEDDING_MODELS>,\n  ): EmbeddingModel<string>;\n  imageModel(modelId: ExtractModelId<IMAGE_MODELS>): ImageModel;\n} {\n  return {\n    languageModel(modelId: ExtractModelId<LANGUAGE_MODELS>): LanguageModel {\n      if (languageModels != null && modelId in languageModels) {\n        return languageModels[modelId];\n      }\n\n      if (fallbackProvider) {\n        return fallbackProvider.languageModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'languageModel' });\n    },\n\n    textEmbeddingModel(\n      modelId: ExtractModelId<EMBEDDING_MODELS>,\n    ): EmbeddingModel<string> {\n      if (textEmbeddingModels != null && modelId in textEmbeddingModels) {\n        return textEmbeddingModels[modelId];\n      }\n\n      if (fallbackProvider) {\n        return fallbackProvider.textEmbeddingModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'textEmbeddingModel' });\n    },\n\n    imageModel(modelId: ExtractModelId<IMAGE_MODELS>): ImageModel {\n      if (imageModels != null && modelId in imageModels) {\n        return imageModels[modelId];\n      }\n\n      if (fallbackProvider?.imageModel) {\n        return fallbackProvider.imageModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'imageModel' });\n    },\n  };\n}\n\n/**\n * @deprecated Use `customProvider` instead.\n */\nexport const experimental_customProvider = customProvider;\n\ntype ExtractModelId<MODELS extends Record<string, unknown>> = Extract<\n  keyof MODELS,\n  string\n>;\n","import { AISDKError, NoSuchModelError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoSuchProviderError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchProviderError extends NoSuchModelError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly providerId: string;\n  readonly availableProviders: string[];\n\n  constructor({\n    modelId,\n    modelType,\n    providerId,\n    availableProviders,\n    message = `No such provider: ${providerId} (available providers: ${availableProviders.join()})`,\n  }: {\n    modelId: string;\n    modelType: 'languageModel' | 'textEmbeddingModel';\n    providerId: string;\n    availableProviders: string[];\n    message?: string;\n  }) {\n    super({ errorName: name, modelId, modelType, message });\n\n    this.providerId = providerId;\n    this.availableProviders = availableProviders;\n  }\n\n  static isInstance(error: unknown): error is NoSuchProviderError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n","import { NoSuchModelError, ProviderV1 } from '@ai-sdk/provider';\nimport { EmbeddingModel, ImageModel, LanguageModel, Provider } from '../types';\nimport { NoSuchProviderError } from './no-such-provider-error';\n\n/**\n * Creates a registry for the given providers.\n */\nexport function experimental_createProviderRegistry(\n  providers: Record<string, ProviderV1>,\n): Provider {\n  const registry = new DefaultProviderRegistry();\n\n  for (const [id, provider] of Object.entries(providers)) {\n    registry.registerProvider({ id, provider });\n  }\n\n  return registry;\n}\n\nclass DefaultProviderRegistry implements Provider {\n  private providers: Record<string, ProviderV1> = {};\n\n  registerProvider({\n    id,\n    provider,\n  }: {\n    id: string;\n    provider: ProviderV1;\n  }): void {\n    this.providers[id] = provider;\n  }\n\n  private getProvider(id: string): ProviderV1 {\n    const provider = this.providers[id];\n\n    if (provider == null) {\n      throw new NoSuchProviderError({\n        modelId: id,\n        modelType: 'languageModel',\n        providerId: id,\n        availableProviders: Object.keys(this.providers),\n      });\n    }\n\n    return provider;\n  }\n\n  private splitId(\n    id: string,\n    modelType: 'languageModel' | 'textEmbeddingModel' | 'imageModel',\n  ): [string, string] {\n    const index = id.indexOf(':');\n\n    if (index === -1) {\n      throw new NoSuchModelError({\n        modelId: id,\n        modelType,\n        message:\n          `Invalid ${modelType} id for registry: ${id} ` +\n          `(must be in the format \"providerId:modelId\")`,\n      });\n    }\n\n    return [id.slice(0, index), id.slice(index + 1)];\n  }\n\n  languageModel(id: string): LanguageModel {\n    const [providerId, modelId] = this.splitId(id, 'languageModel');\n    const model = this.getProvider(providerId).languageModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({ modelId: id, modelType: 'languageModel' });\n    }\n\n    return model;\n  }\n\n  textEmbeddingModel(id: string): EmbeddingModel<string> {\n    const [providerId, modelId] = this.splitId(id, 'textEmbeddingModel');\n    const provider = this.getProvider(providerId);\n\n    const model = provider.textEmbeddingModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({\n        modelId: id,\n        modelType: 'textEmbeddingModel',\n      });\n    }\n\n    return model;\n  }\n\n  imageModel(id: string): ImageModel {\n    const [providerId, modelId] = this.splitId(id, 'imageModel');\n    const provider = this.getProvider(providerId);\n\n    const model = provider.imageModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({ modelId: id, modelType: 'imageModel' });\n    }\n\n    return model;\n  }\n\n  /**\n   * @deprecated Use `textEmbeddingModel` instead.\n   */\n  textEmbedding(id: string): EmbeddingModel<string> {\n    return this.textEmbeddingModel(id);\n  }\n}\n","import { JSONSchema7 } from '@ai-sdk/provider';\nimport { jsonSchema } from '@ai-sdk/ui-utils';\nimport { z, ZodType } from 'zod';\nimport { MCPClientError } from '../../../errors';\nimport { inferParameters, tool, Tool, ToolExecutionOptions } from '../tool';\nimport { createMcpTransport } from './mcp-transport';\nimport {\n  CallToolResult,\n  CallToolResultSchema,\n  Configuration as ClientConfiguration,\n  InitializeResultSchema,\n  JSONRPCError,\n  JSONRPCNotification,\n  JSONRPCRequest,\n  JSONRPCResponse,\n  LATEST_PROTOCOL_VERSION,\n  ListToolsResult,\n  ListToolsResultSchema,\n  McpToolSet,\n  MCPTransport,\n  Notification,\n  PaginatedRequest,\n  Request,\n  RequestOptions,\n  ServerCapabilities,\n  SUPPORTED_PROTOCOL_VERSIONS,\n  ToolSchemas,\n  TransportConfig,\n} from './types';\n\nconst CLIENT_VERSION = '1.0.0';\n\ninterface MCPClientConfig {\n  /** Transport configuration for connecting to the MCP server */\n  transport: TransportConfig;\n  /** Optional callback for uncaught errors */\n  onUncaughtError?: (error: unknown) => void;\n  /** Optional client name, defaults to 'ai-sdk-mcp-client' */\n  name?: string;\n}\n\nexport async function createMCPClient(\n  config: MCPClientConfig,\n): Promise<MCPClient> {\n  const client = new MCPClient(config);\n  await client.init();\n  return client;\n}\n\n/**\n * A lightweight MCP Client implementation\n *\n * The primary purpose of this client is tool conversion between MCP<>AI SDK\n * but can later be extended to support other MCP features\n *\n * Tool parameters are automatically inferred from the server's JSON schema\n * if not explicitly provided in the tools configuration\n *\n * Not supported:\n * - Client options (e.g. sampling, roots) as they are not needed for tool conversion\n * - Accepting notifications\n */\nclass MCPClient {\n  private transport: MCPTransport;\n  private onUncaughtError?: (error: unknown) => void;\n  private clientInfo: ClientConfiguration;\n  private requestMessageId = 0;\n  private responseHandlers: Map<\n    number,\n    (response: JSONRPCResponse | Error) => void\n  > = new Map();\n  private serverCapabilities: ServerCapabilities = {};\n  private isClosed = true;\n\n  constructor({\n    transport: transportConfig,\n    name = 'ai-sdk-mcp-client',\n    onUncaughtError,\n  }: MCPClientConfig) {\n    this.onUncaughtError = onUncaughtError;\n    this.transport = createMcpTransport(transportConfig);\n    this.transport.onClose = () => this.onClose();\n    this.transport.onError = (error: Error) => this.onError(error);\n    this.transport.onMessage = message => {\n      if ('method' in message) {\n        // This lightweight client implementation does not support\n        // receiving notifications or requests from server.\n        // If we get an unsupported message, we can safely ignore it and pass to the onError handler:\n        this.onError(\n          new MCPClientError({\n            message: 'Unsupported message type',\n          }),\n        );\n        return;\n      }\n\n      this.onResponse(message);\n    };\n    this.clientInfo = {\n      name,\n      version: CLIENT_VERSION,\n    };\n  }\n\n  async init(): Promise<this> {\n    try {\n      await this.transport.start();\n      this.isClosed = false;\n\n      const result = await this.request({\n        request: {\n          method: 'initialize',\n          params: {\n            protocolVersion: LATEST_PROTOCOL_VERSION,\n            capabilities: {},\n            clientInfo: this.clientInfo,\n          },\n        },\n        resultSchema: InitializeResultSchema,\n      });\n\n      if (result === undefined) {\n        throw new MCPClientError({\n          message: 'Server sent invalid initialize result',\n        });\n      }\n\n      if (!SUPPORTED_PROTOCOL_VERSIONS.includes(result.protocolVersion)) {\n        throw new MCPClientError({\n          message: `Server's protocol version is not supported: ${result.protocolVersion}`,\n        });\n      }\n\n      this.serverCapabilities = result.capabilities;\n\n      // Complete initialization handshake:\n      await this.notification({\n        method: 'notifications/initialized',\n      });\n\n      return this;\n    } catch (error) {\n      await this.close();\n      throw error;\n    }\n  }\n\n  async close(): Promise<void> {\n    if (this.isClosed) return;\n    await this.transport?.close();\n    this.onClose();\n  }\n\n  private async request<T extends ZodType<object>>({\n    request,\n    resultSchema,\n    options,\n  }: {\n    request: Request;\n    resultSchema: T;\n    options?: RequestOptions;\n  }): Promise<z.infer<T>> {\n    return new Promise((resolve, reject) => {\n      if (this.isClosed) {\n        return reject(\n          new MCPClientError({\n            message: 'Attempted to send a request from a closed client',\n          }),\n        );\n      }\n\n      const signal = options?.signal;\n      signal?.throwIfAborted();\n\n      const messageId = this.requestMessageId++;\n      const jsonrpcRequest: JSONRPCRequest = {\n        ...request,\n        jsonrpc: '2.0',\n        id: messageId,\n      };\n\n      const cleanup = () => {\n        this.responseHandlers.delete(messageId);\n      };\n\n      this.responseHandlers.set(messageId, response => {\n        if (signal?.aborted) {\n          return reject(\n            new MCPClientError({\n              message: 'Request was aborted',\n              cause: signal.reason,\n            }),\n          );\n        }\n\n        if (response instanceof Error) {\n          return reject(response);\n        }\n\n        try {\n          const result = resultSchema.parse(response.result);\n          resolve(result);\n        } catch (error) {\n          const parseError = new MCPClientError({\n            message: 'Failed to parse server initialization result',\n            cause: error,\n          });\n          reject(parseError);\n        }\n      });\n\n      this.transport.send(jsonrpcRequest).catch(error => {\n        cleanup();\n        reject(error);\n      });\n    });\n  }\n\n  private async listTools({\n    params,\n    options,\n  }: {\n    params?: PaginatedRequest['params'];\n    options?: RequestOptions;\n  } = {}): Promise<ListToolsResult> {\n    if (!this.serverCapabilities.tools) {\n      throw new MCPClientError({\n        message: `Server does not support tools`,\n      });\n    }\n\n    try {\n      return this.request({\n        request: { method: 'tools/list', params },\n        resultSchema: ListToolsResultSchema,\n        options,\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private async callTool({\n    name,\n    args,\n    options,\n  }: {\n    name: string;\n    args: Record<string, unknown>;\n    options?: ToolExecutionOptions;\n  }): Promise<CallToolResult> {\n    if (!this.serverCapabilities.tools) {\n      throw new MCPClientError({\n        message: `Server does not support tools`,\n      });\n    }\n\n    try {\n      return this.request({\n        request: { method: 'tools/call', params: { name, arguments: args } },\n        resultSchema: CallToolResultSchema,\n        options: {\n          signal: options?.abortSignal,\n        },\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private async notification(notification: Notification): Promise<void> {\n    const jsonrpcNotification: JSONRPCNotification = {\n      ...notification,\n      jsonrpc: '2.0',\n    };\n    await this.transport.send(jsonrpcNotification);\n  }\n\n  /**\n   * Returns a set of AI SDK tools from the MCP server\n   * @returns A record of tool names to their implementations\n   */\n  async tools<TOOL_SCHEMAS extends ToolSchemas = 'automatic'>({\n    schemas = 'automatic',\n  }: {\n    schemas?: TOOL_SCHEMAS;\n  } = {}): Promise<McpToolSet<TOOL_SCHEMAS>> {\n    const tools: Record<string, Tool> = {};\n\n    try {\n      const listToolsResult = await this.listTools();\n\n      for (const { name, description, inputSchema } of listToolsResult.tools) {\n        if (schemas !== 'automatic' && !(name in schemas)) {\n          continue;\n        }\n\n        const parameters =\n          schemas === 'automatic'\n            ? jsonSchema(inputSchema as JSONSchema7)\n            : schemas[name].parameters;\n\n        const self = this;\n        const toolWithExecute = tool({\n          description,\n          parameters,\n          execute: async (\n            args: inferParameters<typeof parameters>,\n            options: ToolExecutionOptions,\n          ): Promise<CallToolResult> => {\n            options?.abortSignal?.throwIfAborted();\n\n            return self.callTool({\n              name,\n              args,\n              options,\n            });\n          },\n        });\n\n        tools[name] = toolWithExecute;\n      }\n\n      return tools as McpToolSet<TOOL_SCHEMAS>;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private onClose(): void {\n    if (this.isClosed) return;\n\n    this.isClosed = true;\n    const error = new MCPClientError({\n      message: 'Connection closed',\n    });\n\n    for (const handler of this.responseHandlers.values()) {\n      handler(error);\n    }\n\n    this.responseHandlers.clear();\n  }\n\n  private onError(error: unknown): void {\n    if (this.onUncaughtError) {\n      this.onUncaughtError(error);\n    }\n  }\n\n  private onResponse(response: JSONRPCResponse | JSONRPCError): void {\n    const messageId = Number(response.id);\n    const handler = this.responseHandlers.get(messageId);\n\n    if (handler === undefined) {\n      throw new MCPClientError({\n        message: `Protocol error: Received a response for an unknown message ID: ${JSON.stringify(\n          response,\n        )}`,\n      });\n    }\n\n    this.responseHandlers.delete(messageId);\n\n    handler(\n      'result' in response\n        ? response\n        : new MCPClientError({\n            message: response.error.message,\n            cause: response.error,\n          }),\n    );\n  }\n}\n","import { Schema } from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { ToolResultContent } from '../prompt/tool-result-content';\nimport { CoreMessage } from '../prompt/message';\n\nexport type ToolParameters = z.ZodTypeAny | Schema<any>;\n\nexport type inferParameters<PARAMETERS extends ToolParameters> =\n  PARAMETERS extends Schema<any>\n    ? PARAMETERS['_type']\n    : PARAMETERS extends z.ZodTypeAny\n      ? z.infer<PARAMETERS>\n      : never;\n\nexport interface ToolExecutionOptions {\n  /**\n   * The ID of the tool call. You can use it e.g. when sending tool-call related information with stream data.\n   */\n  toolCallId: string;\n\n  /**\n   * Messages that were sent to the language model to initiate the response that contained the tool call.\n   * The messages **do not** include the system prompt nor the assistant response that contained the tool call.\n   */\n  messages: CoreMessage[];\n\n  /**\n   * An optional abort signal that indicates that the overall operation should be aborted.\n   */\n  abortSignal?: AbortSignal;\n}\n\n/**\nA tool contains the description and the schema of the input that the tool expects.\nThis enables the language model to generate the input.\n\nThe tool can also contain an optional execute function for the actual execution function of the tool.\n */\nexport type Tool<PARAMETERS extends ToolParameters = any, RESULT = any> = {\n  /**\nThe schema of the input that the tool expects. The language model will use this to generate the input.\nIt is also used to validate the output of the language model.\nUse descriptions to make the input understandable for the language model.\n   */\n  parameters: PARAMETERS;\n\n  /**\nAn optional description of what the tool does.\nWill be used by the language model to decide whether to use the tool.\nNot used for provider-defined tools.\n   */\n  description?: string;\n\n  /**\nOptional conversion function that maps the tool result to multi-part tool content for LLMs.\n   */\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n\n  /**\nAn async function that is called with the arguments from the tool call and produces a result.\nIf not provided, the tool will not be executed automatically.\n\n@args is the input of the tool call.\n@options.abortSignal is a signal that can be used to abort the tool call.\n   */\n  execute?: (\n    args: inferParameters<PARAMETERS>,\n    options: ToolExecutionOptions,\n  ) => PromiseLike<RESULT>;\n} & (\n  | {\n      /**\nFunction tool.\n       */\n      type?: undefined | 'function';\n    }\n  | {\n      /**\nProvider-defined tool.\n       */\n      type: 'provider-defined';\n\n      /**\nThe ID of the tool. Should follow the format `<provider-name>.<tool-name>`.\n       */\n      id: `${string}.${string}`;\n\n      /**\nThe arguments for configuring the tool. Must match the expected arguments defined by the provider for this tool.\n       */\n      args: Record<string, unknown>;\n    }\n);\n\n/**\n * @deprecated Use `Tool` instead.\n */\n// TODO remove in v5\nexport type CoreTool<\n  PARAMETERS extends ToolParameters = any,\n  RESULT = any,\n> = Tool<PARAMETERS, RESULT>;\n\n/**\nHelper function for inferring the execute args of a tool.\n */\n// Note: special type inference is needed for the execute function args to make sure they are inferred correctly.\nexport function tool<PARAMETERS extends ToolParameters, RESULT>(\n  tool: Tool<PARAMETERS, RESULT> & {\n    execute: (\n      args: inferParameters<PARAMETERS>,\n      options: ToolExecutionOptions,\n    ) => PromiseLike<RESULT>;\n  },\n): Tool<PARAMETERS, RESULT> & {\n  execute: (\n    args: inferParameters<PARAMETERS>,\n    options: ToolExecutionOptions,\n  ) => PromiseLike<RESULT>;\n};\nexport function tool<PARAMETERS extends ToolParameters, RESULT>(\n  tool: Tool<PARAMETERS, RESULT> & {\n    execute?: undefined;\n  },\n): Tool<PARAMETERS, RESULT> & {\n  execute: undefined;\n};\nexport function tool<PARAMETERS extends ToolParameters, RESULT = any>(\n  tool: Tool<PARAMETERS, RESULT>,\n): Tool<PARAMETERS, RESULT> {\n  return tool;\n}\n","import type { ChildProcess } from 'node:child_process';\nimport { MCPClientError } from '../../../errors';\nimport { McpStdioServerConfig } from './types';\n\nexport async function createChildProcess(\n  config: McpStdioServerConfig,\n  signal: AbortSignal,\n): Promise<ChildProcess> {\n  const runtime = detectRuntime();\n\n  if (runtime !== 'node') {\n    throw new MCPClientError({\n      message:\n        'Attempted to use child_process module outside of Node.js environment',\n    });\n  }\n\n  let childProcess;\n\n  // note: split to prevent detection by next.js (suppresses warnings)\n  const nodePrefix = 'node:';\n  try {\n    childProcess = await import(`${nodePrefix}child_process`);\n  } catch (error) {\n    try {\n      childProcess = require(`${nodePrefix}child_process`);\n    } catch (innerError) {\n      throw new MCPClientError({\n        message: 'Failed to load child_process module dynamically',\n        cause: innerError,\n      });\n    }\n  }\n\n  const { spawn } = childProcess;\n\n  return spawn(config.command, config.args ?? [], {\n    env: config.env ?? getDefaultEnvironment(),\n    stdio: ['pipe', 'pipe', config.stderr ?? 'inherit'],\n    shell: false,\n    signal,\n    windowsHide: globalThis.process.platform === 'win32' && isElectron(),\n    cwd: config.cwd,\n  });\n}\n\nfunction detectRuntime() {\n  if (typeof window !== 'undefined') {\n    return 'browser';\n  }\n\n  if (globalThis.process?.release?.name === 'node') {\n    return 'node';\n  }\n\n  return null;\n}\n\nfunction getDefaultEnvironment(): Record<string, string> {\n  const DEFAULT_INHERITED_ENV_VARS =\n    globalThis.process.platform === 'win32'\n      ? [\n          'APPDATA',\n          'HOMEDRIVE',\n          'HOMEPATH',\n          'LOCALAPPDATA',\n          'PATH',\n          'PROCESSOR_ARCHITECTURE',\n          'SYSTEMDRIVE',\n          'SYSTEMROOT',\n          'TEMP',\n          'USERNAME',\n          'USERPROFILE',\n        ]\n      : ['HOME', 'LOGNAME', 'PATH', 'SHELL', 'TERM', 'USER'];\n\n  const env: Record<string, string> = {};\n\n  for (const key of DEFAULT_INHERITED_ENV_VARS) {\n    const value = globalThis.process.env[key];\n    if (value === undefined) {\n      continue;\n    }\n\n    if (value.startsWith('()')) {\n      continue;\n    }\n\n    env[key] = value;\n  }\n\n  return env;\n}\n\nfunction isElectron() {\n  return 'type' in globalThis.process;\n}\n","import type { IOType } from 'node:child_process';\nimport type { Stream } from 'node:stream';\nimport { z } from 'zod';\nimport {\n  inferParameters,\n  Tool,\n  ToolExecutionOptions,\n  ToolParameters,\n} from '../tool';\n\nexport const LATEST_PROTOCOL_VERSION = '2024-11-05';\nexport const SUPPORTED_PROTOCOL_VERSIONS = [\n  LATEST_PROTOCOL_VERSION,\n  '2024-10-07',\n];\nconst JSONRPC_VERSION = '2.0';\n\nexport type ToolSchemas =\n  | Record<string, { parameters: ToolParameters }>\n  | 'automatic'\n  | undefined;\n\nexport type McpToolSet<TOOL_SCHEMAS extends ToolSchemas = 'automatic'> =\n  TOOL_SCHEMAS extends Record<string, { parameters: ToolParameters }>\n    ? {\n        [K in keyof TOOL_SCHEMAS]: Tool<\n          TOOL_SCHEMAS[K]['parameters'],\n          CallToolResult\n        > & {\n          execute: (\n            args: inferParameters<TOOL_SCHEMAS[K]['parameters']>,\n            options: ToolExecutionOptions,\n          ) => PromiseLike<CallToolResult>;\n        };\n      }\n    : {\n        [k: string]: Tool<z.ZodUnknown, CallToolResult> & {\n          execute: (\n            args: unknown,\n            options: ToolExecutionOptions,\n          ) => PromiseLike<CallToolResult>;\n        };\n      };\n\nexport interface McpStdioServerConfig {\n  command: string;\n  args?: string[];\n  env?: Record<string, string>;\n  stderr?: IOType | Stream | number;\n  cwd?: string;\n  type: 'stdio';\n}\nexport interface McpSSEServerConfig {\n  type: 'sse';\n  url: string;\n}\nexport type TransportConfig = McpStdioServerConfig | McpSSEServerConfig;\n\nconst ClientOrServerImplementationSchema = z\n  .object({\n    name: z.string(),\n    version: z.string(),\n  })\n  .passthrough();\nexport type Configuration = z.infer<typeof ClientOrServerImplementationSchema>;\n\nconst BaseParamsSchema = z\n  .object({\n    _meta: z.optional(z.object({}).passthrough()),\n  })\n  .passthrough();\ntype BaseParams = z.infer<typeof BaseParamsSchema>;\n\nexport interface Request {\n  method: string;\n  params?: BaseParams;\n}\n\nexport type RequestOptions = {\n  signal?: AbortSignal;\n  timeout?: number;\n  maxTotalTimeout?: number;\n};\n\nconst RequestSchema = z.object({\n  method: z.string(),\n  params: z.optional(BaseParamsSchema),\n});\nconst ResultSchema = BaseParamsSchema;\nconst NotificationSchema = z.object({\n  method: z.string(),\n  params: z.optional(BaseParamsSchema),\n});\n\nexport type Notification = z.infer<typeof NotificationSchema>;\n\nconst RequestIdSchema = z.union([z.string(), z.number().int()]);\nconst JSONRPCRequestSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: RequestIdSchema,\n  })\n  .merge(RequestSchema)\n  .strict();\nexport type JSONRPCRequest = z.infer<typeof JSONRPCRequestSchema>;\nconst JSONRPCResponseSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: RequestIdSchema,\n    result: ResultSchema,\n  })\n  .strict();\nexport type JSONRPCResponse = z.infer<typeof JSONRPCResponseSchema>;\nconst JSONRPCErrorSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: RequestIdSchema,\n    error: z.object({\n      code: z.number().int(),\n      message: z.string(),\n      data: z.optional(z.unknown()),\n    }),\n  })\n  .strict();\nexport type JSONRPCError = z.infer<typeof JSONRPCErrorSchema>;\nconst JSONRPCNotificationSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n  })\n  .merge(NotificationSchema)\n  .strict();\nexport type JSONRPCNotification = z.infer<typeof JSONRPCNotificationSchema>;\n\nexport const JSONRPCMessageSchema = z.union([\n  JSONRPCRequestSchema,\n  JSONRPCNotificationSchema,\n  JSONRPCResponseSchema,\n  JSONRPCErrorSchema,\n]);\nexport type JSONRPCMessage = z.infer<typeof JSONRPCMessageSchema>;\n\nexport interface MCPTransport {\n  start(): Promise<void>;\n  send(message: JSONRPCMessage): Promise<void>;\n  close(): Promise<void>;\n  onClose?: () => void;\n  onError?: (error: Error) => void;\n  onMessage?: (message: JSONRPCMessage) => void;\n}\n\nconst ServerCapabilitiesSchema = z\n  .object({\n    experimental: z.optional(z.object({}).passthrough()),\n    logging: z.optional(z.object({}).passthrough()),\n    prompts: z.optional(\n      z\n        .object({\n          listChanged: z.optional(z.boolean()),\n        })\n        .passthrough(),\n    ),\n    resources: z.optional(\n      z\n        .object({\n          subscribe: z.optional(z.boolean()),\n          listChanged: z.optional(z.boolean()),\n        })\n        .passthrough(),\n    ),\n    tools: z.optional(\n      z\n        .object({\n          listChanged: z.optional(z.boolean()),\n        })\n        .passthrough(),\n    ),\n  })\n  .passthrough();\nexport type ServerCapabilities = z.infer<typeof ServerCapabilitiesSchema>;\nexport const InitializeResultSchema = ResultSchema.extend({\n  protocolVersion: z.string(),\n  capabilities: ServerCapabilitiesSchema,\n  serverInfo: ClientOrServerImplementationSchema,\n  instructions: z.optional(z.string()),\n});\nexport type InitializeResult = z.infer<typeof InitializeResultSchema>;\n\nexport type PaginatedRequest = Request & {\n  params?: BaseParams & {\n    cursor?: string;\n  };\n};\n\nconst PaginatedResultSchema = ResultSchema.extend({\n  nextCursor: z.optional(z.string()),\n});\n\nconst ToolSchema = z\n  .object({\n    name: z.string(),\n    description: z.optional(z.string()),\n    inputSchema: z\n      .object({\n        type: z.literal('object'),\n        properties: z.optional(z.object({}).passthrough()),\n      })\n      .passthrough(),\n  })\n  .passthrough();\nexport type MCPTool = z.infer<typeof ToolSchema>;\nexport const ListToolsResultSchema = PaginatedResultSchema.extend({\n  tools: z.array(ToolSchema),\n});\nexport type ListToolsResult = z.infer<typeof ListToolsResultSchema>;\n\nconst TextContentSchema = z\n  .object({\n    type: z.literal('text'),\n    text: z.string(),\n  })\n  .passthrough();\nconst ImageContentSchema = z\n  .object({\n    type: z.literal('image'),\n    data: z.string().base64(),\n    mimeType: z.string(),\n  })\n  .passthrough();\nconst ResourceContentsSchema = z\n  .object({\n    /**\n     * The URI of this resource.\n     */\n    uri: z.string(),\n    /**\n     * The MIME type of this resource, if known.\n     */\n    mimeType: z.optional(z.string()),\n  })\n  .passthrough();\nconst TextResourceContentsSchema = ResourceContentsSchema.extend({\n  text: z.string(),\n});\nconst BlobResourceContentsSchema = ResourceContentsSchema.extend({\n  blob: z.string().base64(),\n});\nconst EmbeddedResourceSchema = z\n  .object({\n    type: z.literal('resource'),\n    resource: z.union([TextResourceContentsSchema, BlobResourceContentsSchema]),\n  })\n  .passthrough();\n\nexport const CallToolResultSchema = ResultSchema.extend({\n  content: z.array(\n    z.union([TextContentSchema, ImageContentSchema, EmbeddedResourceSchema]),\n  ),\n  isError: z.boolean().default(false).optional(),\n}).or(\n  ResultSchema.extend({\n    toolResult: z.unknown(),\n  }),\n);\nexport type CallToolResult = z.infer<typeof CallToolResultSchema>;\n","import type { ChildProcess } from 'node:child_process';\nimport { MCPClientError } from '../../../errors';\nimport { createChildProcess } from './create-child-process';\nimport {\n  JSONRPCMessage,\n  JSONRPCMessageSchema,\n  MCPTransport,\n  McpStdioServerConfig,\n} from './types';\n\nexport class StdioClientTransport implements MCPTransport {\n  private process?: ChildProcess;\n  private abortController: AbortController = new AbortController();\n  private readBuffer: ReadBuffer = new ReadBuffer();\n  private serverParams: McpStdioServerConfig;\n\n  onClose?: () => void;\n  onError?: (error: unknown) => void;\n  onMessage?: (message: JSONRPCMessage) => void;\n\n  constructor(server: McpStdioServerConfig) {\n    this.serverParams = server;\n  }\n\n  async start(): Promise<void> {\n    if (this.process) {\n      throw new MCPClientError({\n        message: 'StdioClientTransport already started.',\n      });\n    }\n\n    return new Promise(async (resolve, reject) => {\n      try {\n        const process = await createChildProcess(\n          this.serverParams,\n          this.abortController.signal,\n        );\n\n        this.process = process;\n\n        this.process.on('error', error => {\n          if (error.name === 'AbortError') {\n            this.onClose?.();\n            return;\n          }\n\n          reject(error);\n          this.onError?.(error);\n        });\n\n        this.process.on('spawn', () => {\n          resolve();\n        });\n\n        this.process.on('close', _code => {\n          this.process = undefined;\n          this.onClose?.();\n        });\n\n        this.process.stdin?.on('error', error => {\n          this.onError?.(error);\n        });\n\n        this.process.stdout?.on('data', chunk => {\n          this.readBuffer.append(chunk);\n          this.processReadBuffer();\n        });\n\n        this.process.stdout?.on('error', error => {\n          this.onError?.(error);\n        });\n      } catch (error) {\n        reject(error);\n        this.onError?.(error);\n      }\n    });\n  }\n\n  private processReadBuffer() {\n    while (true) {\n      try {\n        const message = this.readBuffer.readMessage();\n        if (message === null) {\n          break;\n        }\n\n        this.onMessage?.(message);\n      } catch (error) {\n        this.onError?.(error as Error);\n      }\n    }\n  }\n\n  async close(): Promise<void> {\n    this.abortController.abort();\n    this.process = undefined;\n    this.readBuffer.clear();\n  }\n\n  send(message: JSONRPCMessage): Promise<void> {\n    return new Promise(resolve => {\n      if (!this.process?.stdin) {\n        throw new MCPClientError({\n          message: 'StdioClientTransport not connected',\n        });\n      }\n\n      const json = serializeMessage(message);\n      if (this.process.stdin.write(json)) {\n        resolve();\n      } else {\n        this.process.stdin.once('drain', resolve);\n      }\n    });\n  }\n}\n\nclass ReadBuffer {\n  private buffer?: Buffer;\n\n  append(chunk: Buffer): void {\n    this.buffer = this.buffer ? Buffer.concat([this.buffer, chunk]) : chunk;\n  }\n\n  readMessage(): JSONRPCMessage | null {\n    if (!this.buffer) return null;\n\n    const index = this.buffer.indexOf('\\n');\n    if (index === -1) {\n      return null;\n    }\n\n    const line = this.buffer.toString('utf8', 0, index);\n    this.buffer = this.buffer.subarray(index + 1);\n    return deserializeMessage(line);\n  }\n\n  clear(): void {\n    this.buffer = undefined;\n  }\n}\n\nfunction serializeMessage(message: JSONRPCMessage): string {\n  return JSON.stringify(message) + '\\n';\n}\n\nexport function deserializeMessage(line: string): JSONRPCMessage {\n  return JSONRPCMessageSchema.parse(JSON.parse(line));\n}\n","import { EventSourceParserStream } from 'eventsource-parser/stream';\nimport { MCPClientError } from '../../../errors';\nimport {\n  JSONRPCMessage,\n  JSONRPCMessageSchema,\n  MCPTransport,\n  McpSSEServerConfig,\n} from './types';\n\nexport class SSEClientTransport implements MCPTransport {\n  private endpoint?: URL;\n  private abortController?: AbortController;\n  private url: URL;\n  private connected = false;\n  private sseConnection?: {\n    close: () => void;\n  };\n\n  onClose?: () => void;\n  onError?: (error: unknown) => void;\n  onMessage?: (message: JSONRPCMessage) => void;\n\n  constructor({ url }: McpSSEServerConfig) {\n    this.url = new URL(url);\n  }\n\n  async start(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.connected) {\n        return resolve();\n      }\n\n      this.abortController = new AbortController();\n\n      const establishConnection = async () => {\n        try {\n          const response = await fetch(this.url.href, {\n            headers: {\n              Accept: 'text/event-stream',\n            },\n            signal: this.abortController?.signal,\n          });\n\n          if (!response.ok || !response.body) {\n            const error = new MCPClientError({\n              message: `MCP SSE Transport Error: ${response.status} ${response.statusText}`,\n            });\n            this.onError?.(error);\n            return reject(error);\n          }\n\n          const stream = response.body\n            .pipeThrough(new TextDecoderStream())\n            .pipeThrough(new EventSourceParserStream());\n\n          const reader = stream.getReader();\n\n          const processEvents = async () => {\n            try {\n              while (true) {\n                const { done, value } = await reader.read();\n\n                if (done) {\n                  if (this.connected) {\n                    this.connected = false;\n                    throw new MCPClientError({\n                      message:\n                        'MCP SSE Transport Error: Connection closed unexpectedly',\n                    });\n                  }\n                  return;\n                }\n\n                const { event, data } = value;\n\n                if (event === 'endpoint') {\n                  this.endpoint = new URL(data, this.url);\n\n                  if (this.endpoint.origin !== this.url.origin) {\n                    throw new MCPClientError({\n                      message: `MCP SSE Transport Error: Endpoint origin does not match connection origin: ${this.endpoint.origin}`,\n                    });\n                  }\n\n                  this.connected = true;\n                  resolve();\n                } else if (event === 'message') {\n                  try {\n                    const message = JSONRPCMessageSchema.parse(\n                      JSON.parse(data),\n                    );\n                    this.onMessage?.(message);\n                  } catch (error) {\n                    const e = new MCPClientError({\n                      message:\n                        'MCP SSE Transport Error: Failed to parse message',\n                      cause: error,\n                    });\n                    this.onError?.(e);\n                    // We do not throw here so we continue processing events after reporting the error\n                  }\n                }\n              }\n            } catch (error) {\n              if (error instanceof Error && error.name === 'AbortError') {\n                return;\n              }\n\n              this.onError?.(error);\n              reject(error);\n            }\n          };\n\n          this.sseConnection = {\n            close: () => reader.cancel(),\n          };\n\n          processEvents();\n        } catch (error) {\n          if (error instanceof Error && error.name === 'AbortError') {\n            return;\n          }\n\n          this.onError?.(error);\n          reject(error);\n        }\n      };\n\n      establishConnection();\n    });\n  }\n\n  async close(): Promise<void> {\n    this.connected = false;\n    this.sseConnection?.close();\n    this.abortController?.abort();\n    this.onClose?.();\n  }\n\n  async send(message: JSONRPCMessage): Promise<void> {\n    if (!this.endpoint || !this.connected) {\n      throw new MCPClientError({\n        message: 'MCP SSE Transport Error: Not connected',\n      });\n    }\n\n    try {\n      const headers = new Headers();\n      headers.set('Content-Type', 'application/json');\n      const init = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(message),\n        signal: this.abortController?.signal,\n      };\n\n      const response = await fetch(this.endpoint, init);\n\n      if (!response.ok) {\n        const text = await response.text().catch(() => null);\n        const error = new MCPClientError({\n          message: `MCP SSE Transport Error: POSTing to endpoint (HTTP ${response.status}): ${text}`,\n        });\n        this.onError?.(error);\n        return;\n      }\n    } catch (error) {\n      this.onError?.(error);\n      return;\n    }\n  }\n}\n\nexport function deserializeMessage(line: string): JSONRPCMessage {\n  return JSONRPCMessageSchema.parse(JSON.parse(line));\n}\n","import { MCPTransport, TransportConfig } from './types';\nimport { StdioClientTransport } from './mcp-stdio-transport';\nimport { SSEClientTransport } from './mcp-sse-transport';\n\nexport function createMcpTransport(config: TransportConfig): MCPTransport {\n  return config.type === 'stdio'\n    ? new StdioClientTransport(config)\n    : new SSEClientTransport(config);\n}\n","import { InvalidArgumentError } from '../../errors/invalid-argument-error';\n\n/**\n * Calculates the cosine similarity between two vectors. This is a useful metric for\n * comparing the similarity of two vectors such as embeddings.\n *\n * @param vector1 - The first vector.\n * @param vector2 - The second vector.\n * @param options - Optional configuration.\n * @param options.throwErrorForEmptyVectors - If true, throws an error for empty vectors. Default: false.\n *\n * @returns The cosine similarity between vector1 and vector2.\n * @returns 0 if either vector is the zero vector.\n * @throws {InvalidArgumentError} If throwErrorForEmptyVectors is true and vectors are empty.\n * @throws {Error} If the vectors do not have the same length.\n */\nexport function cosineSimilarity(\n  vector1: number[],\n  vector2: number[],\n  options: {\n    throwErrorForEmptyVectors?: boolean;\n  } = {\n    throwErrorForEmptyVectors: false,\n  },\n) {\n  // TODO: In the next major version, change the default value of throwErrorForEmptyVectors to true\n  const { throwErrorForEmptyVectors } = options;\n\n  if (vector1.length !== vector2.length) {\n    throw new Error(\n      `Vectors must have the same length (vector1: ${vector1.length} elements, vector2: ${vector2.length} elements)`,\n    );\n  }\n\n  if (throwErrorForEmptyVectors && vector1.length === 0) {\n    throw new InvalidArgumentError({\n      parameter: 'vector1',\n      value: vector1,\n      message: 'Vectors cannot be empty',\n    });\n  }\n\n  const magnitude1 = magnitude(vector1);\n  const magnitude2 = magnitude(vector2);\n\n  if (magnitude1 === 0 || magnitude2 === 0) {\n    return 0;\n  }\n\n  return dotProduct(vector1, vector2) / (magnitude1 * magnitude2);\n}\n\n/**\n * Calculates the dot product of two vectors.\n * @param vector1 - The first vector.\n * @param vector2 - The second vector.\n * @returns The dot product of vector1 and vector2.\n */\nfunction dotProduct(vector1: number[], vector2: number[]) {\n  return vector1.reduce(\n    (accumulator: number, value: number, index: number) =>\n      accumulator + value * vector2[index]!,\n    0,\n  );\n}\n\n/**\n * Calculates the magnitude of a vector.\n * @param vector - The vector.\n * @returns The magnitude of the vector.\n */\nfunction magnitude(vector: number[]) {\n  return Math.sqrt(dotProduct(vector, vector));\n}\n","import { delay as delayFunction } from '@ai-sdk/provider-utils';\n\n/**\n * Creates a ReadableStream that emits the provided values with an optional delay between each value.\n *\n * @param options - The configuration options\n * @param options.chunks - Array of values to be emitted by the stream\n * @param options.initialDelayInMs - Optional initial delay in milliseconds before emitting the first value (default: 0). Can be set to `null` to skip the initial delay. The difference between `initialDelayInMs: null` and `initialDelayInMs: 0` is that `initialDelayInMs: null` will emit the values without any delay, while `initialDelayInMs: 0` will emit the values with a delay of 0 milliseconds.\n * @param options.chunkDelayInMs - Optional delay in milliseconds between emitting each value (default: 0). Can be set to `null` to skip the delay. The difference between `chunkDelayInMs: null` and `chunkDelayInMs: 0` is that `chunkDelayInMs: null` will emit the values without any delay, while `chunkDelayInMs: 0` will emit the values with a delay of 0 milliseconds.\n * @returns A ReadableStream that emits the provided values\n */\nexport function simulateReadableStream<T>({\n  chunks,\n  initialDelayInMs = 0,\n  chunkDelayInMs = 0,\n  _internal,\n}: {\n  chunks: T[];\n  initialDelayInMs?: number | null;\n  chunkDelayInMs?: number | null;\n  _internal?: {\n    delay?: (ms: number | null) => Promise<void>;\n  };\n}): ReadableStream<T> {\n  const delay = _internal?.delay ?? delayFunction;\n\n  let index = 0;\n\n  return new ReadableStream({\n    async pull(controller) {\n      if (index < chunks.length) {\n        await delay(index === 0 ? initialDelayInMs : chunkDelayInMs);\n        controller.enqueue(chunks[index++]);\n      } else {\n        controller.close();\n      }\n    },\n  });\n}\n","import {\n  AssistantMessage,\n  DataMessage,\n  formatAssistantStreamPart,\n} from '@ai-sdk/ui-utils';\n\n/**\nYou can pass the thread and the latest message into the `AssistantResponse`. This establishes the context for the response.\n */\ntype AssistantResponseSettings = {\n  /**\nThe thread ID that the response is associated with.\n   */\n  threadId: string;\n\n  /**\nThe ID of the latest message that the response is associated with.\n */\n  messageId: string;\n};\n\n/**\nThe process parameter is a callback in which you can run the assistant on threads, and send messages and data messages to the client.\n */\ntype AssistantResponseCallback = (options: {\n  /**\nForwards an assistant message (non-streaming) to the client.\n   */\n  sendMessage: (message: AssistantMessage) => void;\n\n  /**\nSend a data message to the client. You can use this to provide information for rendering custom UIs while the assistant is processing the thread.\n */\n  sendDataMessage: (message: DataMessage) => void;\n\n  /**\nForwards the assistant response stream to the client. Returns the `Run` object after it completes, or when it requires an action.\n   */\n  forwardStream: (stream: any) => Promise<any | undefined>;\n}) => Promise<void>;\n\n/**\nThe `AssistantResponse` allows you to send a stream of assistant update to `useAssistant`.\nIt is designed to facilitate streaming assistant responses to the `useAssistant` hook.\nIt receives an assistant thread and a current message, and can send messages and data messages to the client.\n */\nexport function AssistantResponse(\n  { threadId, messageId }: AssistantResponseSettings,\n  process: AssistantResponseCallback,\n): Response {\n  const stream = new ReadableStream({\n    async start(controller) {\n      const textEncoder = new TextEncoder();\n\n      const sendMessage = (message: AssistantMessage) => {\n        controller.enqueue(\n          textEncoder.encode(\n            formatAssistantStreamPart('assistant_message', message),\n          ),\n        );\n      };\n\n      const sendDataMessage = (message: DataMessage) => {\n        controller.enqueue(\n          textEncoder.encode(\n            formatAssistantStreamPart('data_message', message),\n          ),\n        );\n      };\n\n      const sendError = (errorMessage: string) => {\n        controller.enqueue(\n          textEncoder.encode(formatAssistantStreamPart('error', errorMessage)),\n        );\n      };\n\n      const forwardStream = async (stream: any) => {\n        let result: any | undefined = undefined;\n\n        for await (const value of stream) {\n          switch (value.event) {\n            case 'thread.message.created': {\n              controller.enqueue(\n                textEncoder.encode(\n                  formatAssistantStreamPart('assistant_message', {\n                    id: value.data.id,\n                    role: 'assistant',\n                    content: [{ type: 'text', text: { value: '' } }],\n                  }),\n                ),\n              );\n              break;\n            }\n\n            case 'thread.message.delta': {\n              const content = value.data.delta.content?.[0];\n\n              if (content?.type === 'text' && content.text?.value != null) {\n                controller.enqueue(\n                  textEncoder.encode(\n                    formatAssistantStreamPart('text', content.text.value),\n                  ),\n                );\n              }\n\n              break;\n            }\n\n            case 'thread.run.completed':\n            case 'thread.run.requires_action': {\n              result = value.data;\n              break;\n            }\n          }\n        }\n\n        return result;\n      };\n\n      // send the threadId and messageId as the first message:\n      controller.enqueue(\n        textEncoder.encode(\n          formatAssistantStreamPart('assistant_control_data', {\n            threadId,\n            messageId,\n          }),\n        ),\n      );\n\n      try {\n        await process({\n          sendMessage,\n          sendDataMessage,\n          forwardStream,\n        });\n      } catch (error) {\n        sendError((error as any).message ?? `${error}`);\n      } finally {\n        controller.close();\n      }\n    },\n    pull(controller) {},\n    cancel() {},\n  });\n\n  return new Response(stream, {\n    status: 200,\n    headers: {\n      'Content-Type': 'text/plain; charset=utf-8',\n    },\n  });\n}\n","import { formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { DataStreamWriter } from '../core/data-stream/data-stream-writer';\nimport { mergeStreams } from '../core/util/merge-streams';\nimport { prepareResponseHeaders } from '../core/util/prepare-response-headers';\nimport {\n  createCallbacksTransformer,\n  StreamCallbacks,\n} from './stream-callbacks';\nimport { StreamData } from './stream-data';\n\ntype LangChainImageDetail = 'auto' | 'low' | 'high';\n\ntype LangChainMessageContentText = {\n  type: 'text';\n  text: string;\n};\n\ntype LangChainMessageContentImageUrl = {\n  type: 'image_url';\n  image_url:\n    | string\n    | {\n        url: string;\n        detail?: LangChainImageDetail;\n      };\n};\n\ntype LangChainMessageContentComplex =\n  | LangChainMessageContentText\n  | LangChainMessageContentImageUrl\n  | (Record<string, any> & {\n      type?: 'text' | 'image_url' | string;\n    })\n  | (Record<string, any> & {\n      type?: never;\n    });\n\ntype LangChainMessageContent = string | LangChainMessageContentComplex[];\n\ntype LangChainAIMessageChunk = {\n  content: LangChainMessageContent;\n};\n\n// LC stream event v2\ntype LangChainStreamEvent = {\n  event: string;\n  data: any;\n};\n\nfunction toDataStreamInternal(\n  stream:\n    | ReadableStream<LangChainStreamEvent>\n    | ReadableStream<LangChainAIMessageChunk>\n    | ReadableStream<string>,\n  callbacks?: StreamCallbacks,\n) {\n  return stream\n    .pipeThrough(\n      new TransformStream<\n        LangChainStreamEvent | LangChainAIMessageChunk | string\n      >({\n        transform: async (value, controller) => {\n          // text stream:\n          if (typeof value === 'string') {\n            controller.enqueue(value);\n            return;\n          }\n\n          // LC stream events v2:\n          if ('event' in value) {\n            // chunk is AIMessage Chunk for on_chat_model_stream event:\n            if (value.event === 'on_chat_model_stream') {\n              forwardAIMessageChunk(\n                value.data?.chunk as LangChainAIMessageChunk,\n                controller,\n              );\n            }\n            return;\n          }\n\n          // AI Message chunk stream:\n          forwardAIMessageChunk(value, controller);\n        },\n      }),\n    )\n    .pipeThrough(createCallbacksTransformer(callbacks))\n    .pipeThrough(new TextDecoderStream())\n    .pipeThrough(\n      new TransformStream({\n        transform: async (chunk, controller) => {\n          controller.enqueue(formatDataStreamPart('text', chunk));\n        },\n      }),\n    );\n}\n\n/**\nConverts LangChain output streams to an AI SDK Data Stream.\n\nThe following streams are supported:\n- `LangChainAIMessageChunk` streams (LangChain `model.stream` output)\n- `string` streams (LangChain `StringOutputParser` output)\n */\nexport function toDataStream(\n  stream:\n    | ReadableStream<LangChainStreamEvent>\n    | ReadableStream<LangChainAIMessageChunk>\n    | ReadableStream<string>,\n  callbacks?: StreamCallbacks,\n) {\n  return toDataStreamInternal(stream, callbacks).pipeThrough(\n    new TextEncoderStream(),\n  );\n}\n\nexport function toDataStreamResponse(\n  stream:\n    | ReadableStream<LangChainStreamEvent>\n    | ReadableStream<LangChainAIMessageChunk>\n    | ReadableStream<string>,\n  options?: {\n    init?: ResponseInit;\n    data?: StreamData;\n    callbacks?: StreamCallbacks;\n  },\n) {\n  const dataStream = toDataStreamInternal(\n    stream,\n    options?.callbacks,\n  ).pipeThrough(new TextEncoderStream());\n  const data = options?.data;\n  const init = options?.init;\n\n  const responseStream = data\n    ? mergeStreams(data.stream, dataStream)\n    : dataStream;\n\n  return new Response(responseStream, {\n    status: init?.status ?? 200,\n    statusText: init?.statusText,\n    headers: prepareResponseHeaders(init?.headers, {\n      contentType: 'text/plain; charset=utf-8',\n      dataStreamVersion: 'v1',\n    }),\n  });\n}\n\nexport function mergeIntoDataStream(\n  stream:\n    | ReadableStream<LangChainStreamEvent>\n    | ReadableStream<LangChainAIMessageChunk>\n    | ReadableStream<string>,\n  options: { dataStream: DataStreamWriter; callbacks?: StreamCallbacks },\n) {\n  options.dataStream.merge(toDataStreamInternal(stream, options.callbacks));\n}\n\nfunction forwardAIMessageChunk(\n  chunk: LangChainAIMessageChunk,\n  controller: TransformStreamDefaultController<any>,\n) {\n  if (typeof chunk.content === 'string') {\n    controller.enqueue(chunk.content);\n  } else {\n    const content: LangChainMessageContentComplex[] = chunk.content;\n    for (const item of content) {\n      if (item.type === 'text') {\n        controller.enqueue(item.text);\n      }\n    }\n  }\n}\n","/**\n * Configuration options and helper callback methods for stream lifecycle events.\n */\nexport interface StreamCallbacks {\n  /** `onStart`: Called once when the stream is initialized. */\n  onStart?: () => Promise<void> | void;\n\n  /**\n   * `onCompletion`: Called for each tokenized message.\n   *\n   * @deprecated Use `onFinal` instead.\n   */\n  onCompletion?: (completion: string) => Promise<void> | void;\n\n  /** `onFinal`: Called once when the stream is closed with the final completion message. */\n  onFinal?: (completion: string) => Promise<void> | void;\n\n  /** `onToken`: Called for each tokenized message. */\n  onToken?: (token: string) => Promise<void> | void;\n\n  /** `onText`: Called for each text chunk. */\n  onText?: (text: string) => Promise<void> | void;\n}\n\n/**\n * Creates a transform stream that encodes input messages and invokes optional callback functions.\n * The transform stream uses the provided callbacks to execute custom logic at different stages of the stream's lifecycle.\n * - `onStart`: Called once when the stream is initialized.\n * - `onToken`: Called for each tokenized message.\n * - `onCompletion`: Called every time a completion message is received. This can occur multiple times when using e.g. OpenAI functions\n * - `onFinal`: Called once when the stream is closed with the final completion message.\n *\n * This function is useful when you want to process a stream of messages and perform specific actions during the stream's lifecycle.\n *\n * @param {StreamCallbacks} [callbacks] - An object containing the callback functions.\n * @return {TransformStream<string, Uint8Array>} A transform stream that encodes input messages as Uint8Array and allows the execution of custom logic through callbacks.\n *\n * @example\n * const callbacks = {\n *   onStart: async () => console.log('Stream started'),\n *   onToken: async (token) => console.log(`Token: ${token}`),\n *   onCompletion: async (completion) => console.log(`Completion: ${completion}`)\n *   onFinal: async () => data.close()\n * };\n * const transformer = createCallbacksTransformer(callbacks);\n */\nexport function createCallbacksTransformer(\n  callbacks: StreamCallbacks | undefined = {},\n): TransformStream<string, Uint8Array> {\n  const textEncoder = new TextEncoder();\n  let aggregatedResponse = '';\n\n  return new TransformStream({\n    async start(): Promise<void> {\n      if (callbacks.onStart) await callbacks.onStart();\n    },\n\n    async transform(message, controller): Promise<void> {\n      controller.enqueue(textEncoder.encode(message));\n\n      aggregatedResponse += message;\n\n      if (callbacks.onToken) await callbacks.onToken(message);\n      if (callbacks.onText && typeof message === 'string') {\n        await callbacks.onText(message);\n      }\n    },\n\n    async flush(): Promise<void> {\n      if (callbacks.onCompletion) {\n        await callbacks.onCompletion(aggregatedResponse);\n      }\n      if (callbacks.onFinal) {\n        await callbacks.onFinal(aggregatedResponse);\n      }\n    },\n  });\n}\n","import { convertAsyncIteratorToReadableStream } from '@ai-sdk/provider-utils';\nimport { formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { DataStreamWriter } from '../core/data-stream/data-stream-writer';\nimport { mergeStreams } from '../core/util/merge-streams';\nimport { prepareResponseHeaders } from '../core/util/prepare-response-headers';\nimport {\n  createCallbacksTransformer,\n  StreamCallbacks,\n} from './stream-callbacks';\nimport { StreamData } from './stream-data';\n\ntype EngineResponse = {\n  delta: string;\n};\n\nfunction toDataStreamInternal(\n  stream: AsyncIterable<EngineResponse>,\n  callbacks?: StreamCallbacks,\n) {\n  const trimStart = trimStartOfStream();\n\n  return convertAsyncIteratorToReadableStream(stream[Symbol.asyncIterator]())\n    .pipeThrough(\n      new TransformStream({\n        async transform(message, controller): Promise<void> {\n          controller.enqueue(trimStart(message.delta));\n        },\n      }),\n    )\n    .pipeThrough(createCallbacksTransformer(callbacks))\n    .pipeThrough(new TextDecoderStream())\n    .pipeThrough(\n      new TransformStream({\n        transform: async (chunk, controller) => {\n          controller.enqueue(formatDataStreamPart('text', chunk));\n        },\n      }),\n    );\n}\n\nexport function toDataStream(\n  stream: AsyncIterable<EngineResponse>,\n  callbacks?: StreamCallbacks,\n) {\n  return toDataStreamInternal(stream, callbacks).pipeThrough(\n    new TextEncoderStream(),\n  );\n}\n\nexport function toDataStreamResponse(\n  stream: AsyncIterable<EngineResponse>,\n  options: {\n    init?: ResponseInit;\n    data?: StreamData;\n    callbacks?: StreamCallbacks;\n  } = {},\n) {\n  const { init, data, callbacks } = options;\n  const dataStream = toDataStreamInternal(stream, callbacks).pipeThrough(\n    new TextEncoderStream(),\n  );\n  const responseStream = data\n    ? mergeStreams(data.stream, dataStream)\n    : dataStream;\n\n  return new Response(responseStream, {\n    status: init?.status ?? 200,\n    statusText: init?.statusText,\n    headers: prepareResponseHeaders(init?.headers, {\n      contentType: 'text/plain; charset=utf-8',\n      dataStreamVersion: 'v1',\n    }),\n  });\n}\n\nexport function mergeIntoDataStream(\n  stream: AsyncIterable<EngineResponse>,\n  options: {\n    dataStream: DataStreamWriter;\n    callbacks?: StreamCallbacks;\n  },\n) {\n  options.dataStream.merge(toDataStreamInternal(stream, options.callbacks));\n}\n\nfunction trimStartOfStream(): (text: string) => string {\n  let isStreamStart = true;\n\n  return (text: string): string => {\n    if (isStreamStart) {\n      text = text.trimStart();\n      if (text) isStreamStart = false;\n    }\n    return text;\n  };\n}\n","import { JSONValue, formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { HANGING_STREAM_WARNING_TIME_MS } from '../util/constants';\n\n/**\n * A stream wrapper to send custom JSON-encoded data back to the client.\n *\n * @deprecated Please use `createDataStream`, `createDataStreamResponse`, and `pipeDataStreamToResponse` instead.\n */\nexport class StreamData {\n  private encoder = new TextEncoder();\n\n  private controller: ReadableStreamController<Uint8Array> | null = null;\n  public stream: ReadableStream<Uint8Array>;\n\n  private isClosed: boolean = false;\n  private warningTimeout: NodeJS.Timeout | null = null;\n\n  constructor() {\n    const self = this;\n\n    this.stream = new ReadableStream({\n      start: async controller => {\n        self.controller = controller;\n\n        // Set a timeout to show a warning if the stream is not closed within 3 seconds\n        if (process.env.NODE_ENV === 'development') {\n          self.warningTimeout = setTimeout(() => {\n            console.warn(\n              'The data stream is hanging. Did you forget to close it with `data.close()`?',\n            );\n          }, HANGING_STREAM_WARNING_TIME_MS);\n        }\n      },\n      pull: controller => {\n        // No-op: we don't need to do anything special on pull\n      },\n      cancel: reason => {\n        this.isClosed = true;\n      },\n    });\n  }\n\n  async close(): Promise<void> {\n    if (this.isClosed) {\n      throw new Error('Data Stream has already been closed.');\n    }\n\n    if (!this.controller) {\n      throw new Error('Stream controller is not initialized.');\n    }\n\n    this.controller.close();\n    this.isClosed = true;\n\n    // Clear the warning timeout if the stream is closed\n    if (this.warningTimeout) {\n      clearTimeout(this.warningTimeout);\n    }\n  }\n\n  append(value: JSONValue): void {\n    if (this.isClosed) {\n      throw new Error('Data Stream has already been closed.');\n    }\n\n    if (!this.controller) {\n      throw new Error('Stream controller is not initialized.');\n    }\n\n    this.controller.enqueue(\n      this.encoder.encode(formatDataStreamPart('data', [value])),\n    );\n  }\n\n  appendMessageAnnotation(value: JSONValue): void {\n    if (this.isClosed) {\n      throw new Error('Data Stream has already been closed.');\n    }\n\n    if (!this.controller) {\n      throw new Error('Stream controller is not initialized.');\n    }\n\n    this.controller.enqueue(\n      this.encoder.encode(formatDataStreamPart('message_annotations', [value])),\n    );\n  }\n}\n","/**\n * Warning time for notifying developers that a stream is hanging in dev mode\n * using a console.warn.\n */\nexport const HANGING_STREAM_WARNING_TIME_MS = 15 * 1000;\n"],"names":["createIdGenerator","generateId","formatDataStreamPart","jsonSchema","AISDKError","name","marker","symbol","_a","_a","name","name","attributes","_a","embedding","usage","embeddings","_a","usage","AISDKError","name","marker","symbol","_a","_a","TypeValidationError","AISDKError","name","marker","symbol","_a","text","AISDKError","name","marker","symbol","_a","_a","convertBase64ToUint8Array","convertUint8ArrayToBase64","AISDKError","name","marker","symbol","_a","_a","convertUint8ArrayToBase64","convertBase64ToUint8Array","AISDKError","name","marker","symbol","_a","_a","z","_a","AISDKError","name","marker","symbol","_a","_a","processBlock","content","tool","i","z","z","z","z","z","z","z","z","z","safeValidateTypes","safeValidateTypes","_a","generateId","_a","span","_b","_c","_d","result","object","TypeValidationError","createIdGenerator","_a","_a","originalGenerateId","createIdGenerator","generateId","now","_a","doStreamSpan","object","_b","error","createIdGenerator","AISDKError","name","marker","symbol","_a","AISDKError","getErrorMessage","name","marker","symbol","_a","asSchema","object","name","tool","asSchema","text","text","safeParseJSON","safeValidateTypes","asSchema","AISDKError","getErrorMessage","name","marker","symbol","_a","AISDKError","name","marker","symbol","_a","AISDKError","getErrorMessage","name","marker","symbol","_a","asSchema","tool","safeValidateTypes","safeParseJSON","text","tool","originalGenerateId","createIdGenerator","generateId","_a","text","tool","span","_b","_c","_d","_e","_f","result","safeParseJSON","safeValidateTypes","asSchema","parsePartialJson","AISDKError","APICallError","InvalidPromptError","JSONParseError","TypeValidationError","UnsupportedFunctionalityError","AISDKError","name","marker","symbol","_a","AISDKError","name","marker","symbol","_a","text","asSchema","parsePartialJson","safeParseJSON","safeValidateTypes","InvalidArgumentError","delay","chunk","AISDKError","createIdGenerator","formatDataStreamPart","result","tool","originalGenerateId","createIdGenerator","originalGenerateMessageId","now","generateId","text","_a","AISDKError","stepType","stream","tool","doStreamSpan","stepReasoning","activeReasoningText","getErrorMessage","formatDataStreamPart","_a","text","text","_a","_a","getToolInvocations","NoSuchModelError","AISDKError","NoSuchModelError","name","marker","symbol","_a","NoSuchModelError","NoSuchModelError","_a","tool","_a","z","_a","process","_b","_a","_b","_c","text","name","_a","_a","delay","formatAssistantStreamPart","process","_a","stream","formatDataStreamPart","_a","formatDataStreamPart","mergeIntoDataStream","toDataStream","toDataStreamResponse","formatDataStreamPart","toDataStreamInternal","formatDataStreamPart","toDataStream","toDataStreamResponse","_a","mergeIntoDataStream","text","formatDataStreamPart","formatDataStreamPart"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"debugId":null}},
    {"offset": {"line": 16865, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/google-provider.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/google-generative-ai-language-model.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/convert-json-schema-to-openapi-schema.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/convert-to-google-generative-ai-messages.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/get-model-path.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/google-error.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/google-prepare-tools.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/map-google-generative-ai-finish-reason.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/google-generative-ai-embedding-model.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40ai-sdk/google/src/google-supported-file-url.ts"],"sourcesContent":["import {\n  FetchFunction,\n  generateId,\n  loadApiKey,\n  withoutTrailingSlash,\n} from '@ai-sdk/provider-utils';\nimport { GoogleGenerativeAILanguageModel } from './google-generative-ai-language-model';\nimport {\n  GoogleGenerativeAIModelId,\n  GoogleGenerativeAISettings,\n} from './google-generative-ai-settings';\nimport { GoogleGenerativeAIEmbeddingModel } from './google-generative-ai-embedding-model';\nimport {\n  GoogleGenerativeAIEmbeddingModelId,\n  GoogleGenerativeAIEmbeddingSettings,\n} from './google-generative-ai-embedding-settings';\nimport {\n  EmbeddingModelV1,\n  LanguageModelV1,\n  ProviderV1,\n} from '@ai-sdk/provider';\nimport { isSupportedFileUrl } from './google-supported-file-url';\n\nexport interface GoogleGenerativeAIProvider extends ProviderV1 {\n  (\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ): LanguageModelV1;\n\n  languageModel(\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ): LanguageModelV1;\n\n  chat(\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ): LanguageModelV1;\n\n  /**\n   * @deprecated Use `chat()` instead.\n   */\n  generativeAI(\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ): LanguageModelV1;\n\n  /**\n@deprecated Use `textEmbeddingModel()` instead.\n   */\n  embedding(\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings?: GoogleGenerativeAIEmbeddingSettings,\n  ): EmbeddingModelV1<string>;\n\n  /**\n@deprecated Use `textEmbeddingModel()` instead.\n */\n  textEmbedding(\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings?: GoogleGenerativeAIEmbeddingSettings,\n  ): EmbeddingModelV1<string>;\n\n  textEmbeddingModel(\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings?: GoogleGenerativeAIEmbeddingSettings,\n  ): EmbeddingModelV1<string>;\n}\n\nexport interface GoogleGenerativeAIProviderSettings {\n  /**\nUse a different URL prefix for API calls, e.g. to use proxy servers.\nThe default prefix is `https://generativelanguage.googleapis.com/v1beta`.\n   */\n  baseURL?: string;\n\n  /**\nAPI key that is being send using the `x-goog-api-key` header.\nIt defaults to the `GOOGLE_GENERATIVE_AI_API_KEY` environment variable.\n   */\n  apiKey?: string;\n\n  /**\nCustom headers to include in the requests.\n     */\n  headers?: Record<string, string | undefined>;\n\n  /**\nCustom fetch implementation. You can use it as a middleware to intercept requests,\nor to provide a custom fetch implementation for e.g. testing.\n    */\n  fetch?: FetchFunction;\n\n  /**\nOptional function to generate a unique ID for each request.\n     */\n  generateId?: () => string;\n}\n\n/**\nCreate a Google Generative AI provider instance.\n */\nexport function createGoogleGenerativeAI(\n  options: GoogleGenerativeAIProviderSettings = {},\n): GoogleGenerativeAIProvider {\n  const baseURL =\n    withoutTrailingSlash(options.baseURL) ??\n    'https://generativelanguage.googleapis.com/v1beta';\n\n  const getHeaders = () => ({\n    'x-goog-api-key': loadApiKey({\n      apiKey: options.apiKey,\n      environmentVariableName: 'GOOGLE_GENERATIVE_AI_API_KEY',\n      description: 'Google Generative AI',\n    }),\n    ...options.headers,\n  });\n\n  const createChatModel = (\n    modelId: GoogleGenerativeAIModelId,\n    settings: GoogleGenerativeAISettings = {},\n  ) =>\n    new GoogleGenerativeAILanguageModel(modelId, settings, {\n      provider: 'google.generative-ai',\n      baseURL,\n      headers: getHeaders,\n      generateId: options.generateId ?? generateId,\n      isSupportedUrl: isSupportedFileUrl,\n      fetch: options.fetch,\n    });\n\n  const createEmbeddingModel = (\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings: GoogleGenerativeAIEmbeddingSettings = {},\n  ) =>\n    new GoogleGenerativeAIEmbeddingModel(modelId, settings, {\n      provider: 'google.generative-ai',\n      baseURL,\n      headers: getHeaders,\n      fetch: options.fetch,\n    });\n\n  const provider = function (\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ) {\n    if (new.target) {\n      throw new Error(\n        'The Google Generative AI model function cannot be called with the new keyword.',\n      );\n    }\n\n    return createChatModel(modelId, settings);\n  };\n\n  provider.languageModel = createChatModel;\n  provider.chat = createChatModel;\n  provider.generativeAI = createChatModel;\n  provider.embedding = createEmbeddingModel;\n  provider.textEmbedding = createEmbeddingModel;\n  provider.textEmbeddingModel = createEmbeddingModel;\n\n  return provider;\n}\n\n/**\nDefault Google Generative AI provider instance.\n */\nexport const google = createGoogleGenerativeAI();\n","import {\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  LanguageModelV1FinishReason,\n  LanguageModelV1ProviderMetadata,\n  LanguageModelV1Source,\n  LanguageModelV1StreamPart,\n} from '@ai-sdk/provider';\nimport {\n  FetchFunction,\n  ParseResult,\n  Resolvable,\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonResponseHandler,\n  postJsonToApi,\n  resolve,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { convertJSONSchemaToOpenAPISchema } from './convert-json-schema-to-openapi-schema';\nimport { convertToGoogleGenerativeAIMessages } from './convert-to-google-generative-ai-messages';\nimport { getModelPath } from './get-model-path';\nimport { googleFailedResponseHandler } from './google-error';\nimport { GoogleGenerativeAIContentPart } from './google-generative-ai-prompt';\nimport {\n  GoogleGenerativeAIModelId,\n  InternalGoogleGenerativeAISettings,\n} from './google-generative-ai-settings';\nimport { prepareTools } from './google-prepare-tools';\nimport { mapGoogleGenerativeAIFinishReason } from './map-google-generative-ai-finish-reason';\n\ntype GoogleGenerativeAIConfig = {\n  provider: string;\n  baseURL: string;\n  headers: Resolvable<Record<string, string | undefined>>;\n  fetch?: FetchFunction;\n  generateId: () => string;\n  isSupportedUrl: (url: URL) => boolean;\n};\n\nexport class GoogleGenerativeAILanguageModel implements LanguageModelV1 {\n  readonly specificationVersion = 'v1';\n  readonly defaultObjectGenerationMode = 'json';\n  readonly supportsImageUrls = false;\n\n  get supportsStructuredOutputs() {\n    return this.settings.structuredOutputs ?? true;\n  }\n\n  readonly modelId: GoogleGenerativeAIModelId;\n  readonly settings: InternalGoogleGenerativeAISettings;\n\n  private readonly config: GoogleGenerativeAIConfig;\n\n  constructor(\n    modelId: GoogleGenerativeAIModelId,\n    settings: InternalGoogleGenerativeAISettings,\n    config: GoogleGenerativeAIConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  private async getArgs({\n    mode,\n    prompt,\n    maxTokens,\n    temperature,\n    topP,\n    topK,\n    frequencyPenalty,\n    presencePenalty,\n    stopSequences,\n    responseFormat,\n    seed,\n  }: Parameters<LanguageModelV1['doGenerate']>[0]) {\n    const type = mode.type;\n\n    const warnings: LanguageModelV1CallWarning[] = [];\n\n    const generationConfig = {\n      // standardized settings:\n      maxOutputTokens: maxTokens,\n      temperature,\n      topK,\n      topP,\n      frequencyPenalty,\n      presencePenalty,\n      stopSequences,\n      seed,\n\n      // response format:\n      responseMimeType:\n        responseFormat?.type === 'json' ? 'application/json' : undefined,\n      responseSchema:\n        responseFormat?.type === 'json' &&\n        responseFormat.schema != null &&\n        // Google GenAI does not support all OpenAPI Schema features,\n        // so this is needed as an escape hatch:\n        this.supportsStructuredOutputs\n          ? convertJSONSchemaToOpenAPISchema(responseFormat.schema)\n          : undefined,\n      ...(this.settings.audioTimestamp && {\n        audioTimestamp: this.settings.audioTimestamp,\n      }),\n    };\n\n    const { contents, systemInstruction } =\n      convertToGoogleGenerativeAIMessages(prompt);\n\n    switch (type) {\n      case 'regular': {\n        const { tools, toolConfig, toolWarnings } = prepareTools(\n          mode,\n          this.settings.useSearchGrounding ?? false,\n          this.settings.dynamicRetrievalConfig,\n          this.modelId,\n        );\n\n        return {\n          args: {\n            generationConfig,\n            contents,\n            systemInstruction,\n            safetySettings: this.settings.safetySettings,\n            tools,\n            toolConfig,\n            cachedContent: this.settings.cachedContent,\n          },\n          warnings: [...warnings, ...toolWarnings],\n        };\n      }\n\n      case 'object-json': {\n        return {\n          args: {\n            generationConfig: {\n              ...generationConfig,\n              responseMimeType: 'application/json',\n              responseSchema:\n                mode.schema != null &&\n                // Google GenAI does not support all OpenAPI Schema features,\n                // so this is needed as an escape hatch:\n                this.supportsStructuredOutputs\n                  ? convertJSONSchemaToOpenAPISchema(mode.schema)\n                  : undefined,\n            },\n            contents,\n            systemInstruction,\n            safetySettings: this.settings.safetySettings,\n            cachedContent: this.settings.cachedContent,\n          },\n          warnings,\n        };\n      }\n\n      case 'object-tool': {\n        return {\n          args: {\n            generationConfig,\n            contents,\n            tools: {\n              functionDeclarations: [\n                {\n                  name: mode.tool.name,\n                  description: mode.tool.description ?? '',\n                  parameters: convertJSONSchemaToOpenAPISchema(\n                    mode.tool.parameters,\n                  ),\n                },\n              ],\n            },\n            toolConfig: { functionCallingConfig: { mode: 'ANY' } },\n            safetySettings: this.settings.safetySettings,\n            cachedContent: this.settings.cachedContent,\n          },\n          warnings,\n        };\n      }\n\n      default: {\n        const _exhaustiveCheck: never = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  supportsUrl(url: URL): boolean {\n    return this.config.isSupportedUrl(url);\n  }\n\n  async doGenerate(\n    options: Parameters<LanguageModelV1['doGenerate']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n    const { args, warnings } = await this.getArgs(options);\n    const body = JSON.stringify(args);\n\n    const mergedHeaders = combineHeaders(\n      await resolve(this.config.headers),\n      options.headers,\n    );\n\n    const {\n      responseHeaders,\n      value: response,\n      rawValue: rawResponse,\n    } = await postJsonToApi({\n      url: `${this.config.baseURL}/${getModelPath(\n        this.modelId,\n      )}:generateContent`,\n      headers: mergedHeaders,\n      body: args,\n      failedResponseHandler: googleFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(responseSchema),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { contents: rawPrompt, ...rawSettings } = args;\n    const candidate = response.candidates[0];\n\n    const parts =\n      candidate.content == null ||\n      typeof candidate.content !== 'object' ||\n      !('parts' in candidate.content)\n        ? []\n        : candidate.content.parts;\n\n    const toolCalls = getToolCallsFromParts({\n      parts,\n      generateId: this.config.generateId,\n    });\n\n    const usageMetadata = response.usageMetadata;\n\n    return {\n      text: getTextFromParts(parts),\n      toolCalls,\n      finishReason: mapGoogleGenerativeAIFinishReason({\n        finishReason: candidate.finishReason,\n        hasToolCalls: toolCalls != null && toolCalls.length > 0,\n      }),\n      usage: {\n        promptTokens: usageMetadata?.promptTokenCount ?? NaN,\n        completionTokens: usageMetadata?.candidatesTokenCount ?? NaN,\n      },\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders, body: rawResponse },\n      warnings,\n      providerMetadata: {\n        google: {\n          groundingMetadata: candidate.groundingMetadata ?? null,\n          safetyRatings: candidate.safetyRatings ?? null,\n        },\n      },\n      sources: extractSources({\n        groundingMetadata: candidate.groundingMetadata,\n        generateId: this.config.generateId,\n      }),\n      request: { body },\n    };\n  }\n\n  async doStream(\n    options: Parameters<LanguageModelV1['doStream']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n    const { args, warnings } = await this.getArgs(options);\n\n    const body = JSON.stringify(args);\n    const headers = combineHeaders(\n      await resolve(this.config.headers),\n      options.headers,\n    );\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: `${this.config.baseURL}/${getModelPath(\n        this.modelId,\n      )}:streamGenerateContent?alt=sse`,\n      headers,\n      body: args,\n      failedResponseHandler: googleFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler(chunkSchema),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { contents: rawPrompt, ...rawSettings } = args;\n\n    let finishReason: LanguageModelV1FinishReason = 'unknown';\n    let usage: { promptTokens: number; completionTokens: number } = {\n      promptTokens: Number.NaN,\n      completionTokens: Number.NaN,\n    };\n    let providerMetadata: LanguageModelV1ProviderMetadata | undefined =\n      undefined;\n\n    const generateId = this.config.generateId;\n    let hasToolCalls = false;\n\n    return {\n      stream: response.pipeThrough(\n        new TransformStream<\n          ParseResult<z.infer<typeof chunkSchema>>,\n          LanguageModelV1StreamPart\n        >({\n          transform(chunk, controller) {\n            if (!chunk.success) {\n              controller.enqueue({ type: 'error', error: chunk.error });\n              return;\n            }\n\n            const value = chunk.value;\n\n            const usageMetadata = value.usageMetadata;\n\n            if (usageMetadata != null) {\n              usage = {\n                promptTokens: usageMetadata.promptTokenCount ?? NaN,\n                completionTokens: usageMetadata.candidatesTokenCount ?? NaN,\n              };\n            }\n\n            const candidate = value.candidates?.[0];\n\n            // sometimes the API returns an empty candidates array\n            if (candidate == null) {\n              return;\n            }\n\n            const content = candidate.content;\n\n            // Process tool call's parts before determining finishReason to ensure hasToolCalls is properly set\n            if (content != null) {\n              const deltaText = getTextFromParts(content.parts);\n              if (deltaText != null) {\n                controller.enqueue({\n                  type: 'text-delta',\n                  textDelta: deltaText,\n                });\n              }\n\n              const toolCallDeltas = getToolCallsFromParts({\n                parts: content.parts,\n                generateId,\n              });\n\n              if (toolCallDeltas != null) {\n                for (const toolCall of toolCallDeltas) {\n                  controller.enqueue({\n                    type: 'tool-call-delta',\n                    toolCallType: 'function',\n                    toolCallId: toolCall.toolCallId,\n                    toolName: toolCall.toolName,\n                    argsTextDelta: toolCall.args,\n                  });\n\n                  controller.enqueue({\n                    type: 'tool-call',\n                    toolCallType: 'function',\n                    toolCallId: toolCall.toolCallId,\n                    toolName: toolCall.toolName,\n                    args: toolCall.args,\n                  });\n\n                  hasToolCalls = true;\n                }\n              }\n            }\n\n            if (candidate.finishReason != null) {\n              finishReason = mapGoogleGenerativeAIFinishReason({\n                finishReason: candidate.finishReason,\n                hasToolCalls,\n              });\n\n              const sources =\n                extractSources({\n                  groundingMetadata: candidate.groundingMetadata,\n                  generateId,\n                }) ?? [];\n\n              for (const source of sources) {\n                controller.enqueue({ type: 'source', source });\n              }\n\n              providerMetadata = {\n                google: {\n                  groundingMetadata: candidate.groundingMetadata ?? null,\n                  safetyRatings: candidate.safetyRatings ?? null,\n                },\n              };\n            }\n          },\n\n          flush(controller) {\n            controller.enqueue({\n              type: 'finish',\n              finishReason,\n              usage,\n              providerMetadata,\n            });\n          },\n        }),\n      ),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      warnings,\n      request: { body },\n    };\n  }\n}\n\nfunction getToolCallsFromParts({\n  parts,\n  generateId,\n}: {\n  parts: z.infer<typeof contentSchema>['parts'];\n  generateId: () => string;\n}) {\n  const functionCallParts = parts?.filter(\n    part => 'functionCall' in part,\n  ) as Array<\n    GoogleGenerativeAIContentPart & {\n      functionCall: { name: string; args: unknown };\n    }\n  >;\n\n  return functionCallParts == null || functionCallParts.length === 0\n    ? undefined\n    : functionCallParts.map(part => ({\n        toolCallType: 'function' as const,\n        toolCallId: generateId(),\n        toolName: part.functionCall.name,\n        args: JSON.stringify(part.functionCall.args),\n      }));\n}\n\nfunction getTextFromParts(parts: z.infer<typeof contentSchema>['parts']) {\n  const textParts = parts?.filter(part => 'text' in part) as Array<\n    GoogleGenerativeAIContentPart & { text: string }\n  >;\n\n  return textParts == null || textParts.length === 0\n    ? undefined\n    : textParts.map(part => part.text).join('');\n}\n\nconst contentSchema = z.object({\n  role: z.string(),\n  parts: z\n    .array(\n      z.union([\n        z.object({\n          text: z.string(),\n        }),\n        z.object({\n          functionCall: z.object({\n            name: z.string(),\n            args: z.unknown(),\n          }),\n        }),\n      ]),\n    )\n    .nullish(),\n});\n\n// https://ai.google.dev/gemini-api/docs/grounding\n// https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/ground-gemini#ground-to-search\nconst groundingChunkSchema = z.object({\n  web: z.object({ uri: z.string(), title: z.string() }).nullish(),\n  retrievedContext: z.object({ uri: z.string(), title: z.string() }).nullish(),\n});\n\nexport const groundingMetadataSchema = z.object({\n  webSearchQueries: z.array(z.string()).nullish(),\n  retrievalQueries: z.array(z.string()).nullish(),\n  searchEntryPoint: z.object({ renderedContent: z.string() }).nullish(),\n  groundingChunks: z.array(groundingChunkSchema).nullish(),\n  groundingSupports: z\n    .array(\n      z.object({\n        segment: z.object({\n          startIndex: z.number().nullish(),\n          endIndex: z.number().nullish(),\n          text: z.string().nullish(),\n        }),\n        segment_text: z.string().nullish(),\n        groundingChunkIndices: z.array(z.number()).nullish(),\n        supportChunkIndices: z.array(z.number()).nullish(),\n        confidenceScores: z.array(z.number()).nullish(),\n        confidenceScore: z.array(z.number()).nullish(),\n      }),\n    )\n    .nullish(),\n  retrievalMetadata: z\n    .union([\n      z.object({\n        webDynamicRetrievalScore: z.number(),\n      }),\n      z.object({}),\n    ])\n    .nullish(),\n});\n\n// https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/configure-safety-filters\nexport const safetyRatingSchema = z.object({\n  category: z.string(),\n  probability: z.string(),\n  probabilityScore: z.number().nullish(),\n  severity: z.string().nullish(),\n  severityScore: z.number().nullish(),\n  blocked: z.boolean().nullish(),\n});\n\nconst responseSchema = z.object({\n  candidates: z.array(\n    z.object({\n      content: contentSchema.nullish().or(z.object({}).strict()),\n      finishReason: z.string().nullish(),\n      safetyRatings: z.array(safetyRatingSchema).nullish(),\n      groundingMetadata: groundingMetadataSchema.nullish(),\n    }),\n  ),\n  usageMetadata: z\n    .object({\n      promptTokenCount: z.number().nullish(),\n      candidatesTokenCount: z.number().nullish(),\n      totalTokenCount: z.number().nullish(),\n    })\n    .nullish(),\n});\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst chunkSchema = z.object({\n  candidates: z\n    .array(\n      z.object({\n        content: contentSchema.nullish(),\n        finishReason: z.string().nullish(),\n        safetyRatings: z.array(safetyRatingSchema).nullish(),\n        groundingMetadata: groundingMetadataSchema.nullish(),\n      }),\n    )\n    .nullish(),\n  usageMetadata: z\n    .object({\n      promptTokenCount: z.number().nullish(),\n      candidatesTokenCount: z.number().nullish(),\n      totalTokenCount: z.number().nullish(),\n    })\n    .nullish(),\n});\n\nfunction extractSources({\n  groundingMetadata,\n  generateId,\n}: {\n  groundingMetadata: z.infer<typeof groundingMetadataSchema> | undefined | null;\n  generateId: () => string;\n}): undefined | LanguageModelV1Source[] {\n  return groundingMetadata?.groundingChunks\n    ?.filter(\n      (\n        chunk,\n      ): chunk is z.infer<typeof groundingChunkSchema> & {\n        web: { uri: string; title?: string };\n      } => chunk.web != null,\n    )\n    .map(chunk => ({\n      sourceType: 'url',\n      id: generateId(),\n      url: chunk.web.uri,\n      title: chunk.web.title,\n    }));\n}\n","import { JSONSchema7Definition } from '@ai-sdk/provider';\n\n/**\n * Converts JSON Schema 7 to OpenAPI Schema 3.0\n */\nexport function convertJSONSchemaToOpenAPISchema(\n  jsonSchema: JSONSchema7Definition,\n): unknown {\n  // parameters need to be undefined if they are empty objects:\n  if (isEmptyObjectSchema(jsonSchema)) {\n    return undefined;\n  }\n\n  if (typeof jsonSchema === 'boolean') {\n    return { type: 'boolean', properties: {} };\n  }\n\n  const {\n    type,\n    description,\n    required,\n    properties,\n    items,\n    allOf,\n    anyOf,\n    oneOf,\n    format,\n    const: constValue,\n    minLength,\n    enum: enumValues,\n  } = jsonSchema;\n\n  const result: Record<string, unknown> = {};\n\n  if (description) result.description = description;\n  if (required) result.required = required;\n  if (format) result.format = format;\n\n  if (constValue !== undefined) {\n    result.enum = [constValue];\n  }\n\n  // Handle type\n  if (type) {\n    if (Array.isArray(type)) {\n      if (type.includes('null')) {\n        result.type = type.filter(t => t !== 'null')[0];\n        result.nullable = true;\n      } else {\n        result.type = type;\n      }\n    } else if (type === 'null') {\n      result.type = 'null';\n    } else {\n      result.type = type;\n    }\n  }\n\n  // Handle enum\n  if (enumValues !== undefined) {\n    result.enum = enumValues;\n  }\n\n  if (properties != null) {\n    result.properties = Object.entries(properties).reduce(\n      (acc, [key, value]) => {\n        acc[key] = convertJSONSchemaToOpenAPISchema(value);\n        return acc;\n      },\n      {} as Record<string, unknown>,\n    );\n  }\n\n  if (items) {\n    result.items = Array.isArray(items)\n      ? items.map(convertJSONSchemaToOpenAPISchema)\n      : convertJSONSchemaToOpenAPISchema(items);\n  }\n\n  if (allOf) {\n    result.allOf = allOf.map(convertJSONSchemaToOpenAPISchema);\n  }\n  if (anyOf) {\n    // Handle cases where anyOf includes a null type\n    if (\n      anyOf.some(\n        schema => typeof schema === 'object' && schema?.type === 'null',\n      )\n    ) {\n      const nonNullSchemas = anyOf.filter(\n        schema => !(typeof schema === 'object' && schema?.type === 'null'),\n      );\n\n      if (nonNullSchemas.length === 1) {\n        // If there's only one non-null schema, convert it and make it nullable\n        const converted = convertJSONSchemaToOpenAPISchema(nonNullSchemas[0]);\n        if (typeof converted === 'object') {\n          result.nullable = true;\n          Object.assign(result, converted);\n        }\n      } else {\n        // If there are multiple non-null schemas, keep them in anyOf\n        result.anyOf = nonNullSchemas.map(convertJSONSchemaToOpenAPISchema);\n        result.nullable = true;\n      }\n    } else {\n      result.anyOf = anyOf.map(convertJSONSchemaToOpenAPISchema);\n    }\n  }\n  if (oneOf) {\n    result.oneOf = oneOf.map(convertJSONSchemaToOpenAPISchema);\n  }\n\n  if (minLength !== undefined) {\n    result.minLength = minLength;\n  }\n\n  return result;\n}\n\nfunction isEmptyObjectSchema(jsonSchema: JSONSchema7Definition): boolean {\n  return (\n    jsonSchema != null &&\n    typeof jsonSchema === 'object' &&\n    jsonSchema.type === 'object' &&\n    (jsonSchema.properties == null ||\n      Object.keys(jsonSchema.properties).length === 0)\n  );\n}\n","import {\n  LanguageModelV1Prompt,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { convertUint8ArrayToBase64 } from '@ai-sdk/provider-utils';\nimport {\n  GoogleGenerativeAIContent,\n  GoogleGenerativeAIContentPart,\n  GoogleGenerativeAIPrompt,\n} from './google-generative-ai-prompt';\n\nexport function convertToGoogleGenerativeAIMessages(\n  prompt: LanguageModelV1Prompt,\n): GoogleGenerativeAIPrompt {\n  const systemInstructionParts: Array<{ text: string }> = [];\n  const contents: Array<GoogleGenerativeAIContent> = [];\n  let systemMessagesAllowed = true;\n\n  for (const { role, content } of prompt) {\n    switch (role) {\n      case 'system': {\n        if (!systemMessagesAllowed) {\n          throw new UnsupportedFunctionalityError({\n            functionality:\n              'system messages are only supported at the beginning of the conversation',\n          });\n        }\n\n        systemInstructionParts.push({ text: content });\n        break;\n      }\n\n      case 'user': {\n        systemMessagesAllowed = false;\n\n        const parts: GoogleGenerativeAIContentPart[] = [];\n\n        for (const part of content) {\n          switch (part.type) {\n            case 'text': {\n              parts.push({ text: part.text });\n              break;\n            }\n\n            case 'image': {\n              parts.push(\n                part.image instanceof URL\n                  ? {\n                      fileData: {\n                        mimeType: part.mimeType ?? 'image/jpeg',\n                        fileUri: part.image.toString(),\n                      },\n                    }\n                  : {\n                      inlineData: {\n                        mimeType: part.mimeType ?? 'image/jpeg',\n                        data: convertUint8ArrayToBase64(part.image),\n                      },\n                    },\n              );\n\n              break;\n            }\n\n            case 'file': {\n              parts.push(\n                part.data instanceof URL\n                  ? {\n                      fileData: {\n                        mimeType: part.mimeType,\n                        fileUri: part.data.toString(),\n                      },\n                    }\n                  : {\n                      inlineData: {\n                        mimeType: part.mimeType,\n                        data: part.data,\n                      },\n                    },\n              );\n\n              break;\n            }\n\n            default: {\n              const _exhaustiveCheck: never = part;\n              throw new UnsupportedFunctionalityError({\n                functionality: `prompt part: ${_exhaustiveCheck}`,\n              });\n            }\n          }\n        }\n\n        contents.push({ role: 'user', parts });\n        break;\n      }\n\n      case 'assistant': {\n        systemMessagesAllowed = false;\n\n        contents.push({\n          role: 'model',\n          parts: content\n            .map(part => {\n              switch (part.type) {\n                case 'text': {\n                  return part.text.length === 0\n                    ? undefined\n                    : { text: part.text };\n                }\n                case 'tool-call': {\n                  return {\n                    functionCall: {\n                      name: part.toolName,\n                      args: part.args,\n                    },\n                  };\n                }\n              }\n            })\n            .filter(\n              part => part !== undefined,\n            ) as GoogleGenerativeAIContentPart[],\n        });\n        break;\n      }\n\n      case 'tool': {\n        systemMessagesAllowed = false;\n\n        contents.push({\n          role: 'user',\n          parts: content.map(part => ({\n            functionResponse: {\n              name: part.toolName,\n              response: {\n                name: part.toolName,\n                content: part.result,\n              },\n            },\n          })),\n        });\n        break;\n      }\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  return {\n    systemInstruction:\n      systemInstructionParts.length > 0\n        ? { parts: systemInstructionParts }\n        : undefined,\n    contents,\n  };\n}\n","export function getModelPath(modelId: string): string {\n  return modelId.includes('/') ? modelId : `models/${modelId}`;\n}\n","import { createJsonErrorResponseHandler } from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\n\nconst googleErrorDataSchema = z.object({\n  error: z.object({\n    code: z.number().nullable(),\n    message: z.string(),\n    status: z.string(),\n  }),\n});\n\nexport type GoogleErrorData = z.infer<typeof googleErrorDataSchema>;\n\nexport const googleFailedResponseHandler = createJsonErrorResponseHandler({\n  errorSchema: googleErrorDataSchema,\n  errorToMessage: data => data.error.message,\n});\n","import {\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { convertJSONSchemaToOpenAPISchema } from './convert-json-schema-to-openapi-schema';\nimport {\n  DynamicRetrievalConfig,\n  GoogleGenerativeAIModelId,\n} from './google-generative-ai-settings';\n\nexport function prepareTools(\n  mode: Parameters<LanguageModelV1['doGenerate']>[0]['mode'] & {\n    type: 'regular';\n  },\n  useSearchGrounding: boolean,\n  dynamicRetrievalConfig: DynamicRetrievalConfig | undefined,\n  modelId: GoogleGenerativeAIModelId,\n): {\n  tools:\n    | undefined\n    | {\n        functionDeclarations: Array<{\n          name: string;\n          description: string | undefined;\n          parameters: unknown;\n        }>;\n      }\n    | {\n        googleSearchRetrieval:\n          | Record<string, never>\n          | { dynamicRetrievalConfig: DynamicRetrievalConfig };\n      }\n    | { googleSearch: Record<string, never> };\n  toolConfig:\n    | undefined\n    | {\n        functionCallingConfig: {\n          mode: 'AUTO' | 'NONE' | 'ANY';\n          allowedFunctionNames?: string[];\n        };\n      };\n  toolWarnings: LanguageModelV1CallWarning[];\n} {\n  const tools = mode.tools?.length ? mode.tools : undefined;\n  const toolWarnings: LanguageModelV1CallWarning[] = [];\n\n  const isGemini2 = modelId.includes('gemini-2');\n  const supportsDynamicRetrieval =\n    modelId.includes('gemini-1.5-flash') && !modelId.includes('-8b');\n\n  if (useSearchGrounding) {\n    return {\n      tools: isGemini2\n        ? { googleSearch: {} }\n        : {\n            googleSearchRetrieval:\n              !supportsDynamicRetrieval || !dynamicRetrievalConfig\n                ? {}\n                : { dynamicRetrievalConfig },\n          },\n      toolConfig: undefined,\n      toolWarnings,\n    };\n  }\n\n  if (tools == null) {\n    return { tools: undefined, toolConfig: undefined, toolWarnings };\n  }\n\n  const functionDeclarations = [];\n  for (const tool of tools) {\n    if (tool.type === 'provider-defined') {\n      toolWarnings.push({ type: 'unsupported-tool', tool });\n    } else {\n      functionDeclarations.push({\n        name: tool.name,\n        description: tool.description ?? '',\n        parameters: convertJSONSchemaToOpenAPISchema(tool.parameters),\n      });\n    }\n  }\n\n  const toolChoice = mode.toolChoice;\n\n  if (toolChoice == null) {\n    return {\n      tools: { functionDeclarations },\n      toolConfig: undefined,\n      toolWarnings,\n    };\n  }\n\n  const type = toolChoice.type;\n\n  switch (type) {\n    case 'auto':\n      return {\n        tools: { functionDeclarations },\n        toolConfig: { functionCallingConfig: { mode: 'AUTO' } },\n        toolWarnings,\n      };\n    case 'none':\n      return {\n        tools: { functionDeclarations },\n        toolConfig: { functionCallingConfig: { mode: 'NONE' } },\n        toolWarnings,\n      };\n    case 'required':\n      return {\n        tools: { functionDeclarations },\n        toolConfig: { functionCallingConfig: { mode: 'ANY' } },\n        toolWarnings,\n      };\n    case 'tool':\n      return {\n        tools: { functionDeclarations },\n        toolConfig: {\n          functionCallingConfig: {\n            mode: 'ANY',\n            allowedFunctionNames: [toolChoice.toolName],\n          },\n        },\n        toolWarnings,\n      };\n    default: {\n      const _exhaustiveCheck: never = type;\n      throw new UnsupportedFunctionalityError({\n        functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,\n      });\n    }\n  }\n}\n","import { LanguageModelV1FinishReason } from '@ai-sdk/provider';\n\nexport function mapGoogleGenerativeAIFinishReason({\n  finishReason,\n  hasToolCalls,\n}: {\n  finishReason: string | null | undefined;\n  hasToolCalls: boolean;\n}): LanguageModelV1FinishReason {\n  switch (finishReason) {\n    case 'STOP':\n      return hasToolCalls ? 'tool-calls' : 'stop';\n    case 'MAX_TOKENS':\n      return 'length';\n    case 'RECITATION':\n    case 'SAFETY':\n    case 'BLOCKLIST':\n    case 'PROHIBITED_CONTENT':\n    case 'SPII':\n      return 'content-filter';\n    case 'FINISH_REASON_UNSPECIFIED':\n    case 'OTHER':\n      return 'other';\n    case 'MALFORMED_FUNCTION_CALL':\n      return 'error';\n    default:\n      return 'unknown';\n  }\n}\n","import {\n  EmbeddingModelV1,\n  TooManyEmbeddingValuesForCallError,\n} from '@ai-sdk/provider';\nimport {\n  combineHeaders,\n  createJsonResponseHandler,\n  FetchFunction,\n  postJsonToApi,\n  resolve,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { googleFailedResponseHandler } from './google-error';\nimport {\n  GoogleGenerativeAIEmbeddingModelId,\n  GoogleGenerativeAIEmbeddingSettings,\n} from './google-generative-ai-embedding-settings';\n\ntype GoogleGenerativeAIEmbeddingConfig = {\n  provider: string;\n  baseURL: string;\n  headers: () => Record<string, string | undefined>;\n  fetch?: FetchFunction;\n};\n\nexport class GoogleGenerativeAIEmbeddingModel\n  implements EmbeddingModelV1<string>\n{\n  readonly specificationVersion = 'v1';\n  readonly modelId: GoogleGenerativeAIEmbeddingModelId;\n\n  private readonly config: GoogleGenerativeAIEmbeddingConfig;\n  private readonly settings: GoogleGenerativeAIEmbeddingSettings;\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  get maxEmbeddingsPerCall(): number {\n    return 2048;\n  }\n\n  get supportsParallelCalls(): boolean {\n    return true;\n  }\n\n  constructor(\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings: GoogleGenerativeAIEmbeddingSettings,\n    config: GoogleGenerativeAIEmbeddingConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  async doEmbed({\n    values,\n    headers,\n    abortSignal,\n  }: Parameters<EmbeddingModelV1<string>['doEmbed']>[0]): Promise<\n    Awaited<ReturnType<EmbeddingModelV1<string>['doEmbed']>>\n  > {\n    if (values.length > this.maxEmbeddingsPerCall) {\n      throw new TooManyEmbeddingValuesForCallError({\n        provider: this.provider,\n        modelId: this.modelId,\n        maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n        values,\n      });\n    }\n\n    const mergedHeaders = combineHeaders(\n      await resolve(this.config.headers),\n      headers,\n    );\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: `${this.config.baseURL}/models/${this.modelId}:batchEmbedContents`,\n      headers: mergedHeaders,\n      body: {\n        requests: values.map(value => ({\n          model: `models/${this.modelId}`,\n          content: { role: 'user', parts: [{ text: value }] },\n          outputDimensionality: this.settings.outputDimensionality,\n        })),\n      },\n      failedResponseHandler: googleFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        googleGenerativeAITextEmbeddingResponseSchema,\n      ),\n      abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    return {\n      embeddings: response.embeddings.map(item => item.values),\n      usage: undefined,\n      rawResponse: { headers: responseHeaders },\n    };\n  }\n}\n\n// minimal version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst googleGenerativeAITextEmbeddingResponseSchema = z.object({\n  embeddings: z.array(z.object({ values: z.array(z.number()) })),\n});\n","export function isSupportedFileUrl(url: URL): boolean {\n  return url\n    .toString()\n    .startsWith('https://generativelanguage.googleapis.com/v1beta/files/');\n}\n"],"names":["z","UnsupportedFunctionalityError","UnsupportedFunctionalityError","generateId","z","combineHeaders","createJsonResponseHandler","postJsonToApi","resolve","z","combineHeaders","resolve","postJsonToApi","createJsonResponseHandler","z","_a"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9],"debugId":null}},
    {"offset": {"line": 17792, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40radix-ui/react-compose-refs/src/composeRefs.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    return ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    ref.current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == 'function') {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n\n    // React <19 will log an error to the console if a callback ref returns a\n    // value. We don't use ref cleanups internally so this will only happen if a\n    // user's ref callback returns a value, which we only expect if they are\n    // using the cleanup functionality added in React 19.\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == 'function') {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;;AAQvB,SAAS,OAAU,GAAA,EAAqB,KAAA,EAAU;IAChD,IAAI,OAAO,QAAQ,YAAY;QAC7B,OAAO,IAAI,KAAK;IAClB,OAAA,IAAW,QAAQ,QAAQ,QAAQ,KAAA,GAAW;QAC5C,IAAI,OAAA,GAAU;IAChB;AACF;AAMA,SAAS,YAAA,GAAkB,IAAA,EAA8C;IACvE,OAAO,CAAC,SAAS;QACf,IAAI,aAAa;QACjB,MAAM,WAAW,KAAK,GAAA,CAAI,CAAC,QAAQ;YACjC,MAAM,UAAU,OAAO,KAAK,IAAI;YAChC,IAAI,CAAC,cAAc,OAAO,WAAW,YAAY;gBAC/C,aAAa;YACf;YACA,OAAO;QACT,CAAC;QAMD,IAAI,YAAY;YACd,OAAO,MAAM;gBACX,IAAA,IAAS,IAAI,GAAG,IAAI,SAAS,MAAA,EAAQ,IAAK;oBACxC,MAAM,UAAU,QAAA,CAAS,CAAC,CAAA;oBAC1B,IAAI,OAAO,WAAW,YAAY;wBAChC,QAAQ;oBACV,OAAO;wBACL,OAAO,IAAA,CAAK,CAAC,CAAA,EAAG,IAAI;oBACtB;gBACF;YACF;QACF;IACF;AACF;AAMA,SAAS,gBAAA,GAAsB,IAAA,EAA8C;IAE3E,iNAAa,cAAA,EAAY,YAAY,GAAG,IAAI,GAAG,IAAI;AACrD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17841, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/%40radix-ui/react-slot/src/slot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props as { children: React.ReactNode }).children\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    const props = mergeProps(slotProps, children.props as AnyProps);\n    // do not pass ref to React.Fragment for React 19 compatibility\n    if (children.type !== React.Fragment) {\n      props.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n    }\n    return React.cloneElement(children, props);\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(\n  child: React.ReactNode\n): child is React.ReactElement<React.ComponentProps<typeof Slottable>, typeof Slottable> {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element.props as { ref?: React.Ref<unknown> }).ref;\n  }\n\n  // Not DEV\n  return (element.props as { ref?: React.Ref<unknown> }).ref || (element as any).ref;\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n"],"names":["Fragment","props"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17957, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":[],"mappings":";;;;AAAA,SAAS,EAAE,CAAC;IAAE,IAAI,GAAE,GAAE,IAAE;IAAG,IAAG,YAAU,OAAO,KAAG,YAAU,OAAO,GAAE,KAAG;SAAO,IAAG,YAAU,OAAO,GAAE,IAAG,MAAM,OAAO,CAAC,IAAG;QAAC,IAAI,IAAE,EAAE,MAAM;QAAC,IAAI,IAAE,GAAE,IAAE,GAAE,IAAI,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAC,OAAM,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,IAAE,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;AAAQ,SAAS;IAAO,IAAI,IAAI,GAAE,GAAE,IAAE,GAAE,IAAE,IAAG,IAAE,UAAU,MAAM,EAAC,IAAE,GAAE,IAAI,CAAC,IAAE,SAAS,CAAC,EAAE,KAAG,CAAC,IAAE,EAAE,EAAE,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;uCAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17981, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/class-variance-authority/dist/index.mjs"],"sourcesContent":["/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;;AAAG;;AACJ,MAAM,gBAAgB,CAAC,QAAQ,OAAO,UAAU,YAAY,GAAG,OAAO,GAAG,UAAU,IAAI,MAAM;AACtF,MAAM,KAAK,qIAAA,CAAA,OAAI;AACf,MAAM,MAAM,CAAC,MAAM,SAAS,CAAC;QAC5B,IAAI;QACJ,IAAI,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,QAAQ,KAAK,MAAM,OAAO,GAAG,MAAM,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,KAAK,EAAE,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,SAAS;QACvN,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG;QACtC,MAAM,uBAAuB,OAAO,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpD,MAAM,cAAc,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ;YAChF,MAAM,qBAAqB,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,eAAe,CAAC,QAAQ;YACrH,IAAI,gBAAgB,MAAM,OAAO;YACjC,MAAM,aAAa,cAAc,gBAAgB,cAAc;YAC/D,OAAO,QAAQ,CAAC,QAAQ,CAAC,WAAW;QACxC;QACA,MAAM,wBAAwB,SAAS,OAAO,OAAO,CAAC,OAAO,MAAM,CAAC,CAAC,KAAK;YACtE,IAAI,CAAC,KAAK,MAAM,GAAG;YACnB,IAAI,UAAU,WAAW;gBACrB,OAAO;YACX;YACA,GAAG,CAAC,IAAI,GAAG;YACX,OAAO;QACX,GAAG,CAAC;QACJ,MAAM,+BAA+B,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,CAAC,2BAA2B,OAAO,gBAAgB,MAAM,QAAQ,6BAA6B,KAAK,IAAI,KAAK,IAAI,yBAAyB,MAAM,CAAC,CAAC,KAAK;YACvO,IAAI,EAAE,OAAO,OAAO,EAAE,WAAW,WAAW,EAAE,GAAG,wBAAwB,GAAG;YAC5E,OAAO,OAAO,OAAO,CAAC,wBAAwB,KAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,MAAM,GAAG;gBACnB,OAAO,MAAM,OAAO,CAAC,SAAS,MAAM,QAAQ,CAAC;oBACzC,GAAG,eAAe;oBAClB,GAAG,qBAAqB;gBAC5B,CAAC,CAAC,IAAI,IAAI,CAAC;oBACP,GAAG,eAAe;oBAClB,GAAG,qBAAqB;gBAC5B,CAAC,CAAC,CAAC,IAAI,KAAK;YAChB,KAAK;mBACE;gBACH;gBACA;aACH,GAAG;QACR,GAAG,EAAE;QACL,OAAO,GAAG,MAAM,sBAAsB,8BAA8B,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,KAAK,EAAE,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,SAAS;IAChM","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18047, "column": 0}, "map": {"version":3,"file":"bundle-mjs.mjs","sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/class-group-utils.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/lru-cache.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/parse-class-name.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/sort-modifiers.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/config-utils.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/merge-classlist.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/tw-join.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/create-tailwind-merge.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/from-theme.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/validators.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/default-config.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/merge-configs.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/extend-tailwind-merge.ts","file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/tailwind-merge/src/lib/tw-merge.ts"],"sourcesContent":["import {\n    AnyClassGroupIds,\n    AnyConfig,\n    AnyThemeGroupIds,\n    ClassGroup,\n    ClassValidator,\n    Config,\n    ThemeGetter,\n    ThemeObject,\n} from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: AnyClassGroupIds\n}\n\ninterface ClassValidatorObject {\n    classGroupId: AnyClassGroupIds\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport const createClassGroupUtils = (config: AnyConfig) => {\n    const classMap = createClassMap(config)\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config\n\n    const getClassGroupId = (className: string) => {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    const getConflictingClassGroupIds = (\n        classGroupId: AnyClassGroupIds,\n        hasPostfixModifier: boolean,\n    ) => {\n        const conflicts = conflictingClassGroups[classGroupId] || []\n\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\n        }\n\n        return conflicts\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nconst getGroupRecursive = (\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): AnyClassGroupIds | undefined => {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nconst getGroupIdForArbitraryProperty = (className: string) => {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport const createClassMap = (config: Config<AnyClassGroupIds, AnyThemeGroupIds>) => {\n    const { theme, classGroups } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    for (const classGroupId in classGroups) {\n        processClassesRecursively(classGroups[classGroupId]!, classMap, classGroupId, theme)\n    }\n\n    return classMap\n}\n\nconst processClassesRecursively = (\n    classGroup: ClassGroup<AnyThemeGroupIds>,\n    classPartObject: ClassPartObject,\n    classGroupId: AnyClassGroupIds,\n    theme: ThemeObject<AnyThemeGroupIds>,\n) => {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nconst getPart = (classPartObject: ClassPartObject, path: string) => {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nconst isThemeGetter = (func: ClassValidator | ThemeGetter): func is ThemeGetter =>\n    (func as ThemeGetter).isThemeGetter\n","// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport const createLruCache = <Key, Value>(maxCacheSize: number): LruCache<Key, Value> => {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    const update = (key: Key, value: Value) => {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n","import { AnyConfig, ParsedClassName } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\nconst MODIFIER_SEPARATOR = ':'\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length\n\nexport const createParseClassName = (config: AnyConfig) => {\n    const { prefix, experimentalParseClassName } = config\n\n    /**\n     * Parse class name into parts.\n     *\n     * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\n     * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n     */\n    let parseClassName = (className: string): ParsedClassName => {\n        const modifiers = []\n\n        let bracketDepth = 0\n        let parenDepth = 0\n        let modifierStart = 0\n        let postfixModifierPosition: number | undefined\n\n        for (let index = 0; index < className.length; index++) {\n            let currentCharacter = className[index]\n\n            if (bracketDepth === 0 && parenDepth === 0) {\n                if (currentCharacter === MODIFIER_SEPARATOR) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + MODIFIER_SEPARATOR_LENGTH\n                    continue\n                }\n\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index\n                    continue\n                }\n            }\n\n            if (currentCharacter === '[') {\n                bracketDepth++\n            } else if (currentCharacter === ']') {\n                bracketDepth--\n            } else if (currentCharacter === '(') {\n                parenDepth++\n            } else if (currentCharacter === ')') {\n                parenDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier)\n        const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier\n        const maybePostfixModifierPosition =\n            postfixModifierPosition && postfixModifierPosition > modifierStart\n                ? postfixModifierPosition - modifierStart\n                : undefined\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        }\n    }\n\n    if (prefix) {\n        const fullPrefix = prefix + MODIFIER_SEPARATOR\n        const parseClassNameOriginal = parseClassName\n        parseClassName = (className) =>\n            className.startsWith(fullPrefix)\n                ? parseClassNameOriginal(className.substring(fullPrefix.length))\n                : {\n                      isExternal: true,\n                      modifiers: [],\n                      hasImportantModifier: false,\n                      baseClassName: className,\n                      maybePostfixModifierPosition: undefined,\n                  }\n    }\n\n    if (experimentalParseClassName) {\n        const parseClassNameOriginal = parseClassName\n        parseClassName = (className) =>\n            experimentalParseClassName({ className, parseClassName: parseClassNameOriginal })\n    }\n\n    return parseClassName\n}\n\nconst stripImportantModifier = (baseClassName: string) => {\n    if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(0, baseClassName.length - 1)\n    }\n\n    /**\n     * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\n     * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\n     */\n    if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(1)\n    }\n\n    return baseClassName\n}\n","import { AnyConfig } from './types'\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport const createSortModifiers = (config: AnyConfig) => {\n    const orderSensitiveModifiers = Object.fromEntries(\n        config.orderSensitiveModifiers.map((modifier) => [modifier, true]),\n    )\n\n    const sortModifiers = (modifiers: string[]) => {\n        if (modifiers.length <= 1) {\n            return modifiers\n        }\n\n        const sortedModifiers: string[] = []\n        let unsortedModifiers: string[] = []\n\n        modifiers.forEach((modifier) => {\n            const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier]\n\n            if (isPositionSensitive) {\n                sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n                unsortedModifiers = []\n            } else {\n                unsortedModifiers.push(modifier)\n            }\n        })\n\n        sortedModifiers.push(...unsortedModifiers.sort())\n\n        return sortedModifiers\n    }\n\n    return sortModifiers\n}\n","import { createClassGroupUtils } from './class-group-utils'\nimport { createLruCache } from './lru-cache'\nimport { createParseClassName } from './parse-class-name'\nimport { createSortModifiers } from './sort-modifiers'\nimport { AnyConfig } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport const createConfigUtils = (config: AnyConfig) => ({\n    cache: createLruCache<string, string>(config.cacheSize),\n    parseClassName: createParseClassName(config),\n    sortModifiers: createSortModifiers(config),\n    ...createClassGroupUtils(config),\n})\n","import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER } from './parse-class-name'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport const mergeClassList = (classList: string, configUtils: ConfigUtils) => {\n    const { parseClassName, getClassGroupId, getConflictingClassGroupIds, sortModifiers } =\n        configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict: string[] = []\n    const classNames = classList.trim().split(SPLIT_CLASSES_REGEX)\n\n    let result = ''\n\n    for (let index = classNames.length - 1; index >= 0; index -= 1) {\n        const originalClassName = classNames[index]!\n\n        const {\n            isExternal,\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        } = parseClassName(originalClassName)\n\n        if (isExternal) {\n            result = originalClassName + (result.length > 0 ? ' ' + result : result)\n            continue\n        }\n\n        let hasPostfixModifier = !!maybePostfixModifierPosition\n        let classGroupId = getClassGroupId(\n            hasPostfixModifier\n                ? baseClassName.substring(0, maybePostfixModifierPosition)\n                : baseClassName,\n        )\n\n        if (!classGroupId) {\n            if (!hasPostfixModifier) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\n                continue\n            }\n\n            classGroupId = getClassGroupId(baseClassName)\n\n            if (!classGroupId) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\n                continue\n            }\n\n            hasPostfixModifier = false\n        }\n\n        const variantModifier = sortModifiers(modifiers).join(':')\n\n        const modifierId = hasImportantModifier\n            ? variantModifier + IMPORTANT_MODIFIER\n            : variantModifier\n\n        const classId = modifierId + classGroupId\n\n        if (classGroupsInConflict.includes(classId)) {\n            // Tailwind class omitted due to conflict\n            continue\n        }\n\n        classGroupsInConflict.push(classId)\n\n        const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier)\n        for (let i = 0; i < conflictGroups.length; ++i) {\n            const group = conflictGroups[i]!\n            classGroupsInConflict.push(modifierId + group)\n        }\n\n        // Tailwind class not in conflict\n        result = originalClassName + (result.length > 0 ? ' ' + result : result)\n    }\n\n    return result\n}\n","/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | 0n | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nconst toValue = (mix: ClassNameArray | string) => {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n","import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { AnyConfig } from './types'\n\ntype CreateConfigFirst = () => AnyConfig\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    createConfigFirst: CreateConfigFirst,\n    ...createConfigRest: CreateConfigSubsequent[]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const config = createConfigRest.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            createConfigFirst() as AnyConfig,\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n","import { DefaultThemeGroupIds, NoInfer, ThemeGetter, ThemeObject } from './types'\n\nexport const fromTheme = <\n    AdditionalThemeGroupIds extends string = never,\n    DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds,\n>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>): ThemeGetter => {\n    const themeGetter = (theme: ThemeObject<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) =>\n        theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex =\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\nconst imageRegex =\n    /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/\n\nexport const isFraction = (value: string) => fractionRegex.test(value)\n\nexport const isNumber = (value: string) => Boolean(value) && !Number.isNaN(Number(value))\n\nexport const isInteger = (value: string) => Boolean(value) && Number.isInteger(Number(value))\n\nexport const isPercent = (value: string) => value.endsWith('%') && isNumber(value.slice(0, -1))\n\nexport const isTshirtSize = (value: string) => tshirtUnitRegex.test(value)\n\nexport const isAny = () => true\n\nconst isLengthOnly = (value: string) =>\n    // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n    lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)\n\nconst isNever = () => false\n\nconst isShadow = (value: string) => shadowRegex.test(value)\n\nconst isImage = (value: string) => imageRegex.test(value)\n\nexport const isAnyNonArbitrary = (value: string) =>\n    !isArbitraryValue(value) && !isArbitraryVariable(value)\n\nexport const isArbitrarySize = (value: string) => getIsArbitraryValue(value, isLabelSize, isNever)\n\nexport const isArbitraryValue = (value: string) => arbitraryValueRegex.test(value)\n\nexport const isArbitraryLength = (value: string) =>\n    getIsArbitraryValue(value, isLabelLength, isLengthOnly)\n\nexport const isArbitraryNumber = (value: string) =>\n    getIsArbitraryValue(value, isLabelNumber, isNumber)\n\nexport const isArbitraryPosition = (value: string) =>\n    getIsArbitraryValue(value, isLabelPosition, isNever)\n\nexport const isArbitraryImage = (value: string) => getIsArbitraryValue(value, isLabelImage, isImage)\n\nexport const isArbitraryShadow = (value: string) => getIsArbitraryValue(value, isNever, isShadow)\n\nexport const isArbitraryVariable = (value: string) => arbitraryVariableRegex.test(value)\n\nexport const isArbitraryVariableLength = (value: string) =>\n    getIsArbitraryVariable(value, isLabelLength)\n\nexport const isArbitraryVariableFamilyName = (value: string) =>\n    getIsArbitraryVariable(value, isLabelFamilyName)\n\nexport const isArbitraryVariablePosition = (value: string) =>\n    getIsArbitraryVariable(value, isLabelPosition)\n\nexport const isArbitraryVariableSize = (value: string) => getIsArbitraryVariable(value, isLabelSize)\n\nexport const isArbitraryVariableImage = (value: string) =>\n    getIsArbitraryVariable(value, isLabelImage)\n\nexport const isArbitraryVariableShadow = (value: string) =>\n    getIsArbitraryVariable(value, isLabelShadow, true)\n\n// Helpers\n\nconst getIsArbitraryValue = (\n    value: string,\n    testLabel: (label: string) => boolean,\n    testValue: (value: string) => boolean,\n) => {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1])\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nconst getIsArbitraryVariable = (\n    value: string,\n    testLabel: (label: string) => boolean,\n    shouldMatchNoLabel = false,\n) => {\n    const result = arbitraryVariableRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1])\n        }\n        return shouldMatchNoLabel\n    }\n\n    return false\n}\n\n// Labels\n\nconst isLabelPosition = (label: string) => label === 'position'\n\nconst imageLabels = new Set(['image', 'url'])\n\nconst isLabelImage = (label: string) => imageLabels.has(label)\n\nconst sizeLabels = new Set(['length', 'size', 'percentage'])\n\nconst isLabelSize = (label: string) => sizeLabels.has(label)\n\nconst isLabelLength = (label: string) => label === 'length'\n\nconst isLabelNumber = (label: string) => label === 'number'\n\nconst isLabelFamilyName = (label: string) => label === 'family-name'\n\nconst isLabelShadow = (label: string) => label === 'shadow'\n","import { fromTheme } from './from-theme'\nimport { Config, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\nimport {\n    isAny,\n    isAnyNonArbitrary,\n    isArbitraryImage,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryValue,\n    isArbitraryVariable,\n    isArbitraryVariableFamilyName,\n    isArbitraryVariableImage,\n    isArbitraryVariableLength,\n    isArbitraryVariablePosition,\n    isArbitraryVariableShadow,\n    isArbitraryVariableSize,\n    isFraction,\n    isInteger,\n    isNumber,\n    isPercent,\n    isTshirtSize,\n} from './validators'\n\nexport const getDefaultConfig = () => {\n    /**\n     * Theme getters for theme variable namespaces\n     * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\n     */\n    /***/\n\n    const themeColor = fromTheme('color')\n    const themeFont = fromTheme('font')\n    const themeText = fromTheme('text')\n    const themeFontWeight = fromTheme('font-weight')\n    const themeTracking = fromTheme('tracking')\n    const themeLeading = fromTheme('leading')\n    const themeBreakpoint = fromTheme('breakpoint')\n    const themeContainer = fromTheme('container')\n    const themeSpacing = fromTheme('spacing')\n    const themeRadius = fromTheme('radius')\n    const themeShadow = fromTheme('shadow')\n    const themeInsetShadow = fromTheme('inset-shadow')\n    const themeDropShadow = fromTheme('drop-shadow')\n    const themeBlur = fromTheme('blur')\n    const themePerspective = fromTheme('perspective')\n    const themeAspect = fromTheme('aspect')\n    const themeEase = fromTheme('ease')\n    const themeAnimate = fromTheme('animate')\n\n    /**\n     * Helpers to avoid repeating the same scales\n     *\n     * We use functions that create a new array every time they're called instead of static arrays.\n     * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\n     */\n    /***/\n\n    const scaleBreak = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const scalePosition = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const scaleOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const scaleOverscroll = () => ['auto', 'contain', 'none'] as const\n    const scaleUnambiguousSpacing = () =>\n        [isArbitraryVariable, isArbitraryValue, themeSpacing] as const\n    const scaleInset = () => [isFraction, 'full', 'auto', ...scaleUnambiguousSpacing()] as const\n    const scaleGridTemplateColsRows = () =>\n        [isInteger, 'none', 'subgrid', isArbitraryVariable, isArbitraryValue] as const\n    const scaleGridColRowStartAndEnd = () =>\n        [\n            'auto',\n            { span: ['full', isInteger, isArbitraryVariable, isArbitraryValue] },\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleGridColRowStartOrEnd = () =>\n        [isInteger, 'auto', isArbitraryVariable, isArbitraryValue] as const\n    const scaleGridAutoColsRows = () =>\n        ['auto', 'min', 'max', 'fr', isArbitraryVariable, isArbitraryValue] as const\n    const scaleAlignPrimaryAxis = () =>\n        ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch', 'baseline'] as const\n    const scaleAlignSecondaryAxis = () => ['start', 'end', 'center', 'stretch'] as const\n    const scaleMargin = () => ['auto', ...scaleUnambiguousSpacing()] as const\n    const scaleSizing = () =>\n        [\n            isFraction,\n            'auto',\n            'full',\n            'dvw',\n            'dvh',\n            'lvw',\n            'lvh',\n            'svw',\n            'svh',\n            'min',\n            'max',\n            'fit',\n            ...scaleUnambiguousSpacing(),\n        ] as const\n    const scaleColor = () => [themeColor, isArbitraryVariable, isArbitraryValue] as const\n    const scaleGradientStopPosition = () => [isPercent, isArbitraryLength] as const\n    const scaleRadius = () =>\n        [\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            'full',\n            themeRadius,\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleBorderWidth = () =>\n        ['', isNumber, isArbitraryVariableLength, isArbitraryLength] as const\n    const scaleLineStyle = () => ['solid', 'dashed', 'dotted', 'double'] as const\n    const scaleBlendMode = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n        ] as const\n    const scaleBlur = () =>\n        [\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            themeBlur,\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleOrigin = () =>\n        [\n            'center',\n            'top',\n            'top-right',\n            'right',\n            'bottom-right',\n            'bottom',\n            'bottom-left',\n            'left',\n            'top-left',\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleRotate = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue] as const\n    const scaleScale = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue] as const\n    const scaleSkew = () => [isNumber, isArbitraryVariable, isArbitraryValue] as const\n    const scaleTranslate = () => [isFraction, 'full', ...scaleUnambiguousSpacing()] as const\n\n    return {\n        cacheSize: 500,\n        theme: {\n            animate: ['spin', 'ping', 'pulse', 'bounce'],\n            aspect: ['video'],\n            blur: [isTshirtSize],\n            breakpoint: [isTshirtSize],\n            color: [isAny],\n            container: [isTshirtSize],\n            'drop-shadow': [isTshirtSize],\n            ease: ['in', 'out', 'in-out'],\n            font: [isAnyNonArbitrary],\n            'font-weight': [\n                'thin',\n                'extralight',\n                'light',\n                'normal',\n                'medium',\n                'semibold',\n                'bold',\n                'extrabold',\n                'black',\n            ],\n            'inset-shadow': [isTshirtSize],\n            leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],\n            perspective: ['dramatic', 'near', 'normal', 'midrange', 'distant', 'none'],\n            radius: [isTshirtSize],\n            shadow: [isTshirtSize],\n            spacing: ['px', isNumber],\n            text: [isTshirtSize],\n            tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest'],\n        },\n        classGroups: {\n            // --------------\n            // --- Layout ---\n            // --------------\n\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [\n                {\n                    aspect: [\n                        'auto',\n                        'square',\n                        isFraction,\n                        isArbitraryValue,\n                        isArbitraryVariable,\n                        themeAspect,\n                    ],\n                },\n            ],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             * @deprecated since Tailwind CSS v4.0.0\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [\n                { columns: [isNumber, isArbitraryValue, isArbitraryVariable, themeContainer] },\n            ],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': scaleBreak() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': scaleBreak() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Screen Reader Only\n             * @see https://tailwindcss.com/docs/display#screen-reader-only\n             */\n            sr: ['sr-only', 'not-sr-only'],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none', 'start', 'end'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none', 'start', 'end'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [\n                { object: [...scalePosition(), isArbitraryValue, isArbitraryVariable] },\n            ],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: scaleOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': scaleOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': scaleOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: scaleOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': scaleOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': scaleOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: scaleInset() }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': scaleInset() }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': scaleInset() }],\n            /**\n             * Start\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            start: [{ start: scaleInset() }],\n            /**\n             * End\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            end: [{ end: scaleInset() }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: scaleInset() }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: scaleInset() }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: scaleInset() }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: scaleInset() }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: [isInteger, 'auto', isArbitraryVariable, isArbitraryValue] }],\n\n            // ------------------------\n            // --- Flexbox and Grid ---\n            // ------------------------\n\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [\n                {\n                    basis: [\n                        isFraction,\n                        'full',\n                        'auto',\n                        themeContainer,\n                        ...scaleUnambiguousSpacing(),\n                    ],\n                },\n            ],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['nowrap', 'wrap', 'wrap-reverse'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: [isNumber, isFraction, 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [\n                {\n                    order: [\n                        isInteger,\n                        'first',\n                        'last',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': scaleGridTemplateColsRows() }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: scaleGridColRowStartAndEnd() }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': scaleGridTemplateColsRows() }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: scaleGridColRowStartAndEnd() }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': scaleGridAutoColsRows() }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': scaleGridAutoColsRows() }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: scaleUnambiguousSpacing() }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': scaleUnambiguousSpacing() }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': scaleUnambiguousSpacing() }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: [...scaleAlignPrimaryAxis(), 'normal'] }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': [...scaleAlignSecondaryAxis(), 'normal'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', ...scaleAlignSecondaryAxis()] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: ['normal', ...scaleAlignPrimaryAxis()] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: [...scaleAlignSecondaryAxis(), 'baseline'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', ...scaleAlignSecondaryAxis(), 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': scaleAlignPrimaryAxis() }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': [...scaleAlignSecondaryAxis(), 'baseline'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', ...scaleAlignSecondaryAxis()] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: scaleUnambiguousSpacing() }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Start\n             * @see https://tailwindcss.com/docs/padding\n             */\n            ps: [{ ps: scaleUnambiguousSpacing() }],\n            /**\n             * Padding End\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pe: [{ pe: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: scaleUnambiguousSpacing() }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: scaleMargin() }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: scaleMargin() }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: scaleMargin() }],\n            /**\n             * Margin Start\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ms: [{ ms: scaleMargin() }],\n            /**\n             * Margin End\n             * @see https://tailwindcss.com/docs/margin\n             */\n            me: [{ me: scaleMargin() }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: scaleMargin() }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: scaleMargin() }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: scaleMargin() }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: scaleMargin() }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-x': [{ 'space-x': scaleUnambiguousSpacing() }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-y': [{ 'space-y': scaleUnambiguousSpacing() }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-y-reverse': ['space-y-reverse'],\n\n            // --------------\n            // --- Sizing ---\n            // --------------\n\n            /**\n             * Size\n             * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n             */\n            size: [{ size: scaleSizing() }],\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: [themeContainer, 'screen', ...scaleSizing()] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [\n                {\n                    'min-w': [\n                        themeContainer,\n                        'screen',\n                        /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        'none',\n                        ...scaleSizing(),\n                    ],\n                },\n            ],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        themeContainer,\n                        'screen',\n                        'none',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        'prose',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        { screen: [themeBreakpoint] },\n                        ...scaleSizing(),\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: ['screen', ...scaleSizing()] }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['screen', 'none', ...scaleSizing()] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': ['screen', ...scaleSizing()] }],\n\n            // ------------------\n            // --- Typography ---\n            // ------------------\n\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [\n                { text: ['base', themeText, isArbitraryVariableLength, isArbitraryLength] },\n            ],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [{ font: [themeFontWeight, isArbitraryVariable, isArbitraryNumber] }],\n            /**\n             * Font Stretch\n             * @see https://tailwindcss.com/docs/font-stretch\n             */\n            'font-stretch': [\n                {\n                    'font-stretch': [\n                        'ultra-condensed',\n                        'extra-condensed',\n                        'condensed',\n                        'semi-condensed',\n                        'normal',\n                        'semi-expanded',\n                        'expanded',\n                        'extra-expanded',\n                        'ultra-expanded',\n                        isPercent,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isArbitraryVariableFamilyName, isArbitraryValue, themeFont] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [{ tracking: [themeTracking, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Line Clamp\n             * @see https://tailwindcss.com/docs/line-clamp\n             */\n            'line-clamp': [\n                { 'line-clamp': [isNumber, 'none', isArbitraryVariable, isArbitraryNumber] },\n            ],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                {\n                    leading: [\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        themeLeading,\n                        ...scaleUnambiguousSpacing(),\n                    ],\n                },\n            ],\n            /**\n             * List Style Image\n             * @see https://tailwindcss.com/docs/list-style-image\n             */\n            'list-image': [{ 'list-image': ['none', isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [\n                { list: ['disc', 'decimal', 'none', isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://v3.tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: scaleColor() }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: scaleColor() }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...scaleLineStyle(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [\n                {\n                    decoration: [\n                        isNumber,\n                        'from-font',\n                        'auto',\n                        isArbitraryVariable,\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: scaleColor() }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [\n                { 'underline-offset': [isNumber, 'auto', isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Wrap\n             * @see https://tailwindcss.com/docs/text-wrap\n             */\n            'text-wrap': [{ text: ['wrap', 'nowrap', 'balance', 'pretty'] }],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: scaleUnambiguousSpacing() }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\n            ],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Hyphens\n             * @see https://tailwindcss.com/docs/hyphens\n             */\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryVariable, isArbitraryValue] }],\n\n            // -------------------\n            // --- Backgrounds ---\n            // -------------------\n\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [\n                { bg: [...scalePosition(), isArbitraryVariablePosition, isArbitraryPosition] },\n            ],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'space', 'round'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [\n                { bg: ['auto', 'cover', 'contain', isArbitraryVariableSize, isArbitrarySize] },\n            ],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        {\n                            linear: [\n                                { to: ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                                isInteger,\n                                isArbitraryVariable,\n                                isArbitraryValue,\n                            ],\n                            radial: ['', isArbitraryVariable, isArbitraryValue],\n                            conic: [isInteger, isArbitraryVariable, isArbitraryValue],\n                        },\n                        isArbitraryVariableImage,\n                        isArbitraryImage,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: scaleColor() }],\n            /**\n             * Gradient Color Stops From Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from-pos': [{ from: scaleGradientStopPosition() }],\n            /**\n             * Gradient Color Stops Via Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via-pos': [{ via: scaleGradientStopPosition() }],\n            /**\n             * Gradient Color Stops To Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to-pos': [{ to: scaleGradientStopPosition() }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: scaleColor() }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: scaleColor() }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: scaleColor() }],\n\n            // ---------------\n            // --- Borders ---\n            // ---------------\n\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: scaleRadius() }],\n            /**\n             * Border Radius Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-s': [{ 'rounded-s': scaleRadius() }],\n            /**\n             * Border Radius End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-e': [{ 'rounded-e': scaleRadius() }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': scaleRadius() }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': scaleRadius() }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': scaleRadius() }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': scaleRadius() }],\n            /**\n             * Border Radius Start Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ss': [{ 'rounded-ss': scaleRadius() }],\n            /**\n             * Border Radius Start End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-se': [{ 'rounded-se': scaleRadius() }],\n            /**\n             * Border Radius End End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ee': [{ 'rounded-ee': scaleRadius() }],\n            /**\n             * Border Radius End Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-es': [{ 'rounded-es': scaleRadius() }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': scaleRadius() }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': scaleRadius() }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': scaleRadius() }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': scaleRadius() }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: scaleBorderWidth() }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': scaleBorderWidth() }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': scaleBorderWidth() }],\n            /**\n             * Border Width Start\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-s': [{ 'border-s': scaleBorderWidth() }],\n            /**\n             * Border Width End\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-e': [{ 'border-e': scaleBorderWidth() }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': scaleBorderWidth() }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': scaleBorderWidth() }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': scaleBorderWidth() }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': scaleBorderWidth() }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-x': [{ 'divide-x': scaleBorderWidth() }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-y': [{ 'divide-y': scaleBorderWidth() }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...scaleLineStyle(), 'hidden', 'none'] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n             */\n            'divide-style': [{ divide: [...scaleLineStyle(), 'hidden', 'none'] }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: scaleColor() }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': scaleColor() }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': scaleColor() }],\n            /**\n             * Border Color S\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-s': [{ 'border-s': scaleColor() }],\n            /**\n             * Border Color E\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-e': [{ 'border-e': scaleColor() }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': scaleColor() }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': scaleColor() }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': scaleColor() }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': scaleColor() }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: scaleColor() }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: [...scaleLineStyle(), 'none', 'hidden'] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [\n                { 'outline-offset': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [\n                { outline: ['', isNumber, isArbitraryVariableLength, isArbitraryLength] },\n            ],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [themeColor] }],\n\n            // ---------------\n            // --- Effects ---\n            // ---------------\n\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [\n                {\n                    shadow: [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow,\n                    ],\n                },\n            ],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n             */\n            'shadow-color': [{ shadow: scaleColor() }],\n            /**\n             * Inset Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n             */\n            'inset-shadow': [\n                {\n                    'inset-shadow': [\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                        themeInsetShadow,\n                    ],\n                },\n            ],\n            /**\n             * Inset Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n             */\n            'inset-shadow-color': [{ 'inset-shadow': scaleColor() }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n             */\n            'ring-w': [{ ring: scaleBorderWidth() }],\n            /**\n             * Ring Width Inset\n             * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n             * @deprecated since Tailwind CSS v4.0.0\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n             */\n            'ring-color': [{ ring: scaleColor() }],\n            /**\n             * Ring Offset Width\n             * @see https://v3.tailwindcss.com/docs/ring-offset-width\n             * @deprecated since Tailwind CSS v4.0.0\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n             */\n            'ring-offset-w': [{ 'ring-offset': [isNumber, isArbitraryLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://v3.tailwindcss.com/docs/ring-offset-color\n             * @deprecated since Tailwind CSS v4.0.0\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n             */\n            'ring-offset-color': [{ 'ring-offset': scaleColor() }],\n            /**\n             * Inset Ring Width\n             * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n             */\n            'inset-ring-w': [{ 'inset-ring': scaleBorderWidth() }],\n            /**\n             * Inset Ring Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n             */\n            'inset-ring-color': [{ 'inset-ring': scaleColor() }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Mix Blend Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': [...scaleBlendMode(), 'plus-darker', 'plus-lighter'] }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': scaleBlendMode() }],\n\n            // ---------------\n            // --- Filters ---\n            // ---------------\n\n            /**\n             * Filter\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [\n                {\n                    filter: [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: scaleBlur() }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [\n                {\n                    'drop-shadow': [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeDropShadow,\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Backdrop Filter\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [\n                {\n                    'backdrop-filter': [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': scaleBlur() }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [\n                { 'backdrop-brightness': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [\n                { 'backdrop-contrast': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [\n                { 'backdrop-grayscale': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [\n                { 'backdrop-hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [\n                { 'backdrop-invert': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [\n                { 'backdrop-opacity': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [\n                { 'backdrop-saturate': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [\n                { 'backdrop-sepia': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n\n            // --------------\n            // --- Tables ---\n            // --------------\n\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': scaleUnambiguousSpacing() }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': scaleUnambiguousSpacing() }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': scaleUnambiguousSpacing() }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            /**\n             * Caption Side\n             * @see https://tailwindcss.com/docs/caption-side\n             */\n            caption: [{ caption: ['top', 'bottom'] }],\n\n            // ---------------------------------\n            // --- Transitions and Animation ---\n            // ---------------------------------\n\n            /**\n             * Transition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        '',\n                        'all',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Behavior\n             * @see https://tailwindcss.com/docs/transition-behavior\n             */\n            'transition-behavior': [{ transition: ['normal', 'discrete'] }],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: [isNumber, 'initial', isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [\n                { ease: ['linear', 'initial', themeEase, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', themeAnimate, isArbitraryVariable, isArbitraryValue] }],\n\n            // ------------------\n            // --- Transforms ---\n            // ------------------\n\n            /**\n             * Backface Visibility\n             * @see https://tailwindcss.com/docs/backface-visibility\n             */\n            backface: [{ backface: ['hidden', 'visible'] }],\n            /**\n             * Perspective\n             * @see https://tailwindcss.com/docs/perspective\n             */\n            perspective: [\n                { perspective: [themePerspective, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Perspective Origin\n             * @see https://tailwindcss.com/docs/perspective-origin\n             */\n            'perspective-origin': [{ 'perspective-origin': scaleOrigin() }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: scaleRotate() }],\n            /**\n             * Rotate X\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            'rotate-x': [{ 'rotate-x': scaleRotate() }],\n            /**\n             * Rotate Y\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            'rotate-y': [{ 'rotate-y': scaleRotate() }],\n            /**\n             * Rotate Z\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            'rotate-z': [{ 'rotate-z': scaleRotate() }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: scaleScale() }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': scaleScale() }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': scaleScale() }],\n            /**\n             * Scale Z\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-z': [{ 'scale-z': scaleScale() }],\n            /**\n             * Scale 3D\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-3d': ['scale-3d'],\n            /**\n             * Skew\n             * @see https://tailwindcss.com/docs/skew\n             */\n            skew: [{ skew: scaleSkew() }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': scaleSkew() }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': scaleSkew() }],\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [\n                { transform: [isArbitraryVariable, isArbitraryValue, '', 'none', 'gpu', 'cpu'] },\n            ],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [{ origin: scaleOrigin() }],\n            /**\n             * Transform Style\n             * @see https://tailwindcss.com/docs/transform-style\n             */\n            'transform-style': [{ transform: ['3d', 'flat'] }],\n            /**\n             * Translate\n             * @see https://tailwindcss.com/docs/translate\n             */\n            translate: [{ translate: scaleTranslate() }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': scaleTranslate() }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': scaleTranslate() }],\n            /**\n             * Translate Z\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-z': [{ 'translate-z': scaleTranslate() }],\n            /**\n             * Translate None\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-none': ['translate-none'],\n\n            // ---------------------\n            // --- Interactivity ---\n            // ---------------------\n\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: scaleColor() }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: [{ appearance: ['none', 'auto'] }],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: scaleColor() }],\n            /**\n             * Color Scheme\n             * @see https://tailwindcss.com/docs/color-scheme\n             */\n            'color-scheme': [\n                { scheme: ['normal', 'dark', 'light', 'light-dark', 'only-dark', 'only-light'] },\n            ],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Field Sizing\n             * @see https://tailwindcss.com/docs/field-sizing\n             */\n            'field-sizing': [{ 'field-sizing': ['fixed', 'content'] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['auto', 'none'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', '', 'y', 'x'] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Start\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ms': [{ 'scroll-ms': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin End\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-me': [{ 'scroll-me': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Start\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-ps': [{ 'scroll-ps': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding End\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pe': [{ 'scroll-pe': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [{ touch: ['auto', 'none', 'manipulation'] }],\n            /**\n             * Touch Action X\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-x': [{ 'touch-pan': ['x', 'left', 'right'] }],\n            /**\n             * Touch Action Y\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-y': [{ 'touch-pan': ['y', 'up', 'down'] }],\n            /**\n             * Touch Action Pinch Zoom\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-pz': ['touch-pinch-zoom'],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                {\n                    'will-change': [\n                        'auto',\n                        'scroll',\n                        'contents',\n                        'transform',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n\n            // -----------\n            // --- SVG ---\n            // -----------\n\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: ['none', ...scaleColor()] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [\n                {\n                    stroke: [\n                        isNumber,\n                        isArbitraryVariableLength,\n                        isArbitraryLength,\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: ['none', ...scaleColor()] }],\n\n            // ---------------------\n            // --- Accessibility ---\n            // ---------------------\n\n            /**\n             * Forced Color Adjust\n             * @see https://tailwindcss.com/docs/forced-color-adjust\n             */\n            'forced-color-adjust': [{ 'forced-color-adjust': ['auto', 'none'] }],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            size: ['w', 'h'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            'line-clamp': ['display', 'overflow'],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-s': ['rounded-ss', 'rounded-es'],\n            'rounded-e': ['rounded-se', 'rounded-ee'],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': [\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l',\n            ],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-s',\n                'border-color-e',\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            translate: ['translate-x', 'translate-y', 'translate-none'],\n            'translate-none': ['translate', 'translate-x', 'translate-y', 'translate-z'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n            touch: ['touch-x', 'touch-y', 'touch-pz'],\n            'touch-x': ['touch'],\n            'touch-y': ['touch'],\n            'touch-pz': ['touch'],\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': ['leading'],\n        },\n        orderSensitiveModifiers: [\n            'before',\n            'after',\n            'placeholder',\n            'file',\n            'marker',\n            'selection',\n            'first-line',\n            'first-letter',\n            'backdrop',\n            '*',\n            '**',\n        ],\n    } as const satisfies Config<DefaultClassGroupIds, DefaultThemeGroupIds>\n}\n","import { AnyConfig, ConfigExtension, NoInfer } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport const mergeConfigs = <ClassGroupIds extends string, ThemeGroupIds extends string = never>(\n    baseConfig: AnyConfig,\n    {\n        cacheSize,\n        prefix,\n        experimentalParseClassName,\n        extend = {},\n        override = {},\n    }: ConfigExtension<ClassGroupIds, ThemeGroupIds>,\n) => {\n    overrideProperty(baseConfig, 'cacheSize', cacheSize)\n    overrideProperty(baseConfig, 'prefix', prefix)\n    overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName)\n\n    overrideConfigProperties(baseConfig.theme, override.theme)\n    overrideConfigProperties(baseConfig.classGroups, override.classGroups)\n    overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups)\n    overrideConfigProperties(\n        baseConfig.conflictingClassGroupModifiers,\n        override.conflictingClassGroupModifiers,\n    )\n    overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers)\n\n    mergeConfigProperties(baseConfig.theme, extend.theme)\n    mergeConfigProperties(baseConfig.classGroups, extend.classGroups)\n    mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups)\n    mergeConfigProperties(\n        baseConfig.conflictingClassGroupModifiers,\n        extend.conflictingClassGroupModifiers,\n    )\n    mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers')\n\n    return baseConfig\n}\n\nconst overrideProperty = <T extends object, K extends keyof T>(\n    baseObject: T,\n    overrideKey: K,\n    overrideValue: T[K] | undefined,\n) => {\n    if (overrideValue !== undefined) {\n        baseObject[overrideKey] = overrideValue\n    }\n}\n\nconst overrideConfigProperties = (\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    overrideObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) => {\n    if (overrideObject) {\n        for (const key in overrideObject) {\n            overrideProperty(baseObject, key, overrideObject[key])\n        }\n    }\n}\n\nconst mergeConfigProperties = (\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    mergeObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) => {\n    if (mergeObject) {\n        for (const key in mergeObject) {\n            mergeArrayProperties(baseObject, mergeObject, key)\n        }\n    }\n}\n\nconst mergeArrayProperties = <Key extends string>(\n    baseObject: Partial<Record<NoInfer<Key>, readonly unknown[]>>,\n    mergeObject: Partial<Record<NoInfer<Key>, readonly unknown[]>>,\n    key: Key,\n) => {\n    const mergeValue = mergeObject[key]\n\n    if (mergeValue !== undefined) {\n        baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue\n    }\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { AnyConfig, ConfigExtension, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\n\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\n\nexport const extendTailwindMerge = <\n    AdditionalClassGroupIds extends string = never,\n    AdditionalThemeGroupIds extends string = never,\n>(\n    configExtension:\n        | ConfigExtension<\n              DefaultClassGroupIds | AdditionalClassGroupIds,\n              DefaultThemeGroupIds | AdditionalThemeGroupIds\n          >\n        | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) =>\n    typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n"],"names":["CLASS_PART_SEPARATOR","createClassGroupUtils","config","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","length","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","classGroups","Map","processClassesRecursively","classGroup","forEach","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","Object","entries","key","path","currentClassPartObject","pathPart","has","set","func","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","value","IMPORTANT_MODIFIER","MODIFIER_SEPARATOR","MODIFIER_SEPARATOR_LENGTH","createParseClassName","prefix","experimentalParseClassName","parseClassName","modifiers","bracketDepth","parenDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","baseClassName","stripImportantModifier","hasImportantModifier","maybePostfixModifierPosition","fullPrefix","parseClassNameOriginal","startsWith","isExternal","endsWith","createSortModifiers","orderSensitiveModifiers","fromEntries","map","modifier","sortModifiers","sortedModifiers","unsortedModifiers","isPositionSensitive","sort","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","classGroupsInConflict","classNames","trim","result","originalClassName","variantModifier","modifierId","classId","includes","conflictGroups","i","group","twJoin","argument","resolvedValue","string","arguments","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","callTailwindMerge","apply","fromTheme","themeGetter","arbitraryValueRegex","arbitraryVariableRegex","fractionRegex","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isFraction","isNumber","Boolean","Number","isNaN","isInteger","isPercent","isTshirtSize","isAny","isLengthOnly","isNever","isShadow","isImage","isAnyNonArbitrary","isArbitraryValue","isArbitraryVariable","isArbitrarySize","getIsArbitraryValue","isLabelSize","isArbitraryLength","isLabelLength","isArbitraryNumber","isLabelNumber","isArbitraryPosition","isLabelPosition","isArbitraryImage","isLabelImage","isArbitraryShadow","isArbitraryVariableLength","getIsArbitraryVariable","isArbitraryVariableFamilyName","isLabelFamilyName","isArbitraryVariablePosition","isArbitraryVariableSize","isArbitraryVariableImage","isArbitraryVariableShadow","isLabelShadow","testLabel","testValue","shouldMatchNoLabel","label","imageLabels","Set","sizeLabels","getDefaultConfig","themeColor","themeFont","themeText","themeFontWeight","themeTracking","themeLeading","themeBreakpoint","themeContainer","themeSpacing","themeRadius","themeShadow","themeInsetShadow","themeDropShadow","themeBlur","themePerspective","themeAspect","themeEase","themeAnimate","scaleBreak","scalePosition","scaleOverflow","scaleOverscroll","scaleUnambiguousSpacing","scaleInset","scaleGridTemplateColsRows","scaleGridColRowStartAndEnd","span","scaleGridColRowStartOrEnd","scaleGridAutoColsRows","scaleAlignPrimaryAxis","scaleAlignSecondaryAxis","scaleMargin","scaleSizing","scaleColor","scaleGradientStopPosition","scaleRadius","scaleBorderWidth","scaleLineStyle","scaleBlendMode","scaleBlur","scaleOrigin","scaleRotate","scaleScale","scaleSkew","scaleTranslate","animate","aspect","blur","breakpoint","color","container","ease","font","leading","perspective","radius","shadow","spacing","text","tracking","columns","box","display","sr","float","clear","isolation","object","overflow","overscroll","position","inset","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","row","gap","justify","content","items","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","size","w","screen","h","list","placeholder","decoration","indent","align","whitespace","break","hyphens","bg","repeat","linear","to","radial","conic","from","via","rounded","border","divide","outline","ring","opacity","filter","brightness","contrast","grayscale","invert","saturate","sepia","table","caption","transition","duration","delay","backface","rotate","scale","skew","transform","origin","translate","accent","appearance","caret","scheme","cursor","resize","scroll","snap","touch","select","fill","stroke","mergeConfigs","baseConfig","extend","override","overrideProperty","overrideConfigProperties","mergeConfigProperties","mergeArrayProperties","baseObject","overrideKey","overrideValue","overrideObject","mergeObject","mergeValue","concat","extendTailwindMerge","configExtension","createConfig","twMerge"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"debugId":null}},
    {"offset": {"line": 22211, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/dayjs/dayjs.min.js"],"sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22566, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 22600, "column": 0}, "map": {"version":3,"sources":["file:///Users/can/Desktop/ai_mock_interviews-main%203/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAapBM,WAAWC;AAGb,cAAc,0CAA0C;AAExD,4DAA4D;;;;;;;;;;;;;;;;;;;QAGxDG,MAAMZ,UAAUa,QAAQ,yCAAA;QACxBC,EAAAA,IAAM;QACNC,KAAAA;IAAAA;IAAU;gBACV,IAAA;YAAA;YAAA,4BAA2C;wBAC3CC,IAAAA;oBAAAA,OAAY;oBAAA;yBACZC,UAAU;8BACVC,IAAAA,CAAAA,GAAU;wBAAA,CAAE,OAAA;4BAAA,IAAA;4BAAA;yBAAA;;mBACd;;aACAC,UAAU;sBACRC,IAAAA,CAAAA;gBAAAA,CAAYnB,SAAAA;oBAAAA,IAAAA;oBAAAA;iBAAAA;kBACd,WAAA;oBAAA,IAAA;oBAAA;iBAAA;gBACF,CAAE,YAAA;oBAAA,IAAA;oBAAA;iBAAA","ignoreList":[0],"debugId":null}}]
}